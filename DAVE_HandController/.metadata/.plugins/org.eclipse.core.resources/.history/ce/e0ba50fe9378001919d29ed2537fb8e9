#include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaration)

#define SLAVE_ADDRESS 0x53

int main(void)
{
  DAVE_STATUS_t status;
  uint8_t Send_Data[] = "Send to ReadByte => ";
  uint8_t ReadData[] = { 0 , '\n', '\r'};
  uint8_t I2C_Data[] = {0, 0, 0, 0};
  uint8_t mem_address[2];
  int flag = 1;

  status = DAVE_Init();           /* Initialization of DAVE APPs  */

  if(status != DAVE_STATUS_SUCCESS)
  {
    /* Placeholder for error handler code. The while loop below can be replaced with an user error handler. */
    XMC_DEBUG("DAVE APPs initialization failed\n");

    while(1U)
    {

    }
  }

  mem_address[0] = 0x00;
  /* Placeholder for user application code. The while loop below can be replaced with user application code. */
  while(1U)
  {
	  if(flag == 1)
	  {
		  while(UART_STATUS_BUSY == UART_Transmit(&dhUART_0, Send_Data, sizeof(Send_Data)-1));
		  while(UART_STATUS_BUSY ==  UART_Receive(&dhUART_0, ReadData, 1));
		  flag = 0;
	  }

	  if(ReadData[0] != 0)
	  {
		  while(UART_STATUS_BUSY == UART_Transmit(&dhUART_0, ReadData, 3));
		  I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
		   while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));

		  I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,I2C_Data,4,true,true);
		  while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
		  while(UART_STATUS_BUSY == UART_Transmit(&dhUART_0, I2C_Data, 4));
		  ReadData[0] = 0;
		  flag = 1;
	  }
  }
}
