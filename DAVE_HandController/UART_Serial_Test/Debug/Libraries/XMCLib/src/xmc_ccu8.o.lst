   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_StartPrescaler:
  25              	.LFB130:
  26              	 .file 1 "D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2016-05-20
   4:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  86:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  87:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  88:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  89:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  90:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  91:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  92:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
  93:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  94:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
  95:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  96:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
  97:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
  99:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 100:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 101:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 102:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 103:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 104:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 105:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 106:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 107:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 108:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 109:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 110:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 111:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 112:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 113:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 114:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 115:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 116:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 117:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 118:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 119:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 120:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 121:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 122:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 124:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 125:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 126:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 127:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 128:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 129:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 130:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 131:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 132:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 133:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 134:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 135:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 136:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 137:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 138:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 139:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 140:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 141:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 142:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 143:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 144:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 145:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 146:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 147:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 148:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 149:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 150:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 151:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 152:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 153:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 154:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 155:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 156:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 157:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 158:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 159:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 160:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 161:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 162:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 163:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 164:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 165:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 166:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 167:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 168:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 169:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 170:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 171:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 172:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 173:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 174:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 175:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 176:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 177:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 178:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 179:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 180:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 181:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 182:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 183:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 184:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 185:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 186:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 187:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 188:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 189:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 190:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 191:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 192:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 193:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 194:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 195:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 196:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 197:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 198:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 199:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 200:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 201:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 202:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 203:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 204:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 205:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 206:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 207:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 208:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 209:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 210:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 211:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 212:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 213:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 214:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 215:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 216:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 217:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 218:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 219:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 220:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 221:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 222:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 223:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 224:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 225:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 226:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 227:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 228:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 229:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 230:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 231:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 232:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 233:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 234:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 235:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 236:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 237:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 238:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 239:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 240:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 241:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 242:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 243:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 244:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 245:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 246:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 247:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 248:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 249:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 250:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 251:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 252:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 253:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 254:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 255:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 256:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 257:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 258:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 259:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 260:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 261:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 262:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 263:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 264:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 265:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 266:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 267:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 268:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 269:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 270:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 271:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 272:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 273:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 274:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 275:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 276:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 277:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 278:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 279:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 280:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 281:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 282:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 283:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 284:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 285:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 286:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 287:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 288:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 289:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 290:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 291:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 292:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 293:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 294:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 295:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 296:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 297:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 298:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 299:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 300:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 301:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 302:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 303:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 304:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 305:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 306:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 307:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 308:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 309:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 310:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 311:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 312:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 313:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 314:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 315:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 316:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 317:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 318:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 319:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 320:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 321:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 322:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 323:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 324:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 325:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 326:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 327:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 328:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 329:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 330:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 331:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 332:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 333:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 334:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 335:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 336:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 337:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 338:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 339:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 340:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 341:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 342:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 343:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 344:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 345:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 346:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 347:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 348:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 349:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 350:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 351:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 352:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 353:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 354:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 355:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 356:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 357:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 358:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 359:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 360:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 361:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 362:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 363:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 364:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 365:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 366:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 367:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 368:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 369:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 370:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 371:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 372:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 373:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 374:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 375:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 376:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 377:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 378:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 379:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 380:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 381:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 382:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 383:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 384:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 385:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 386:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 387:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 388:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 389:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 390:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 391:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 392:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 393:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 394:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 395:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 396:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 397:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 398:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 399:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 400:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 401:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 402:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 403:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 404:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 405:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 406:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 407:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 408:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 409:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 410:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 411:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 412:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 413:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 414:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 415:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 416:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 417:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 418:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 419:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 420:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 421:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 422:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 423:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 424:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 425:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 426:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 427:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 428:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 429:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 430:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 431:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 432:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 433:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 434:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 435:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 436:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 437:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 438:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 439:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 440:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 441:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 442:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 443:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 444:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 445:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 446:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 447:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 448:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 449:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 450:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 451:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 452:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 453:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 454:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 455:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 456:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 457:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 458:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 459:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 460:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 461:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 462:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 463:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 464:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 465:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 466:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 469:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 470:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 471:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 472:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 473:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 474:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 475:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 476:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 477:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 478:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 479:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 480:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 481:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 482:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 483:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 484:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 485:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 486:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 487:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 488:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 489:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 490:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 491:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 492:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 493:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 494:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 495:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 496:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 497:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 498:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 499:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 500:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 501:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 502:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 503:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 504:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 505:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 506:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 507:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 508:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 509:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 510:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 511:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 512:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 513:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 514:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 515:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 516:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 517:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 518:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 519:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 520:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 521:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 522:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 523:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 524:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 525:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 526:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 527:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 528:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 529:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 530:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 531:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 532:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 533:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 534:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 535:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 536:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 537:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 538:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 539:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 540:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 541:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 542:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 543:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 544:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 545:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 546:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 547:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 548:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 549:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 550:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 551:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 552:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 553:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 554:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 555:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 556:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 557:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 558:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 559:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 560:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 561:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 562:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 563:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 564:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 565:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 566:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 567:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 568:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 569:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 570:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 571:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 572:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 573:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 574:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 575:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 576:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 577:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 578:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 579:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 580:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 581:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 582:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 583:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 584:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 585:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 586:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 587:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 588:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 590:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 591:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 592:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 593:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 595:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 597:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 598:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 599:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 600:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 602:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 604:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 605:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 607:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 609:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 610:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 611:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 612:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 613:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 614:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 615:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 616:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 617:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 618:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 619:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 620:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 621:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 622:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 623:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 624:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 625:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 626:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 627:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 628:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 629:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 630:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 631:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 632:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 633:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 634:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 635:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 636:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 637:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 638:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 639:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 640:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 641:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 642:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 643:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 644:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 645:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 646:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 647:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 648:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 649:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 650:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 651:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 652:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 653:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 654:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 655:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 656:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 657:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 658:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 659:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 660:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 661:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 662:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 663:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 664:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 665:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 666:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 667:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 668:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 669:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 670:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 671:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 672:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 673:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 674:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 675:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 676:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 677:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 678:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 679:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 680:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 681:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 682:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 683:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 684:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 685:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 686:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 687:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 688:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 689:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 690:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 691:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 692:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 693:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 694:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 695:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 696:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 697:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 698:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 699:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 700:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 701:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 702:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 703:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 704:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 705:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 706:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 707:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 708:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 709:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 710:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 711:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 712:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 713:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 714:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 715:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 716:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 717:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 718:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 719:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 720:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 721:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 722:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 723:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 724:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 725:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 726:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 727:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 728:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 729:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 730:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 731:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 732:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 733:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 734:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 735:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 736:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 737:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 738:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 739:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 740:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 741:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 742:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 743:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 744:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 745:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 746:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 747:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 748:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 749:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 750:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 751:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 752:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 753:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 754:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 755:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 756:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 757:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 759:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 760:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 761:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 763:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 764:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 765:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 767:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 768:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 769:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 770:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 771:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 772:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 773:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 774:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 775:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 776:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 777:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 778:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 779:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 780:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 781:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 782:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 783:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 784:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 785:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 786:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 787:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 788:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 789:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 790:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 791:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 792:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 793:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 794:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 795:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 796:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 797:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 798:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 800:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 801:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 802:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 803:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 804:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 805:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 806:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 807:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 808:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 809:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 810:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 811:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 812:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 813:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 814:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 815:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 816:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 817:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 818:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 819:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 820:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 821:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 822:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 823:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 824:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 825:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 826:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 827:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 828:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 829:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 830:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 831:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 832:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 833:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 834:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 835:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 836:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 837:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 838:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 839:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 840:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 841:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 842:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 843:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 844:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 845:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 846:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 847:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 848:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 849:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 850:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 851:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 852:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 853:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 854:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 855:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 856:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 857:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 858:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 859:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 860:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 861:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 862:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 863:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 864:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 865:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 866:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 867:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 868:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 869:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 870:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 871:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 872:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 873:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 874:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 875:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 876:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 877:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 878:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 879:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 880:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 881:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 882:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 883:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 884:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 885:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 886:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 887:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 888:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 889:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 890:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 891:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 892:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 893:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 894:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 895:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 896:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 897:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 898:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 899:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 900:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 901:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 902:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 903:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 904:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 905:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 906:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 907:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 908:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 909:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 910:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 911:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 912:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 913:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 914:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 915:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 916:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 917:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 918:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 919:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 920:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 921:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 922:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 923:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 924:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 925:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 926:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 927:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 928:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 929:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 930:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 931:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 932:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 933:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 934:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 935:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 936:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 937:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 938:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 939:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 940:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 941:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 942:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 943:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 944:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 945:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 946:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 947:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 948:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 949:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 950:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 951:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 952:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 953:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 954:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 955:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 956:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 957:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 958:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 959:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 960:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 961:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 962:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 963:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
 964:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 965:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 966:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 967:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 968:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
 969:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
 970:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 971:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 972:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 973:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 974:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 975:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
 976:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
 977:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
 978:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 979:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
 980:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 981:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
 982:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 983:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 984:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
 985:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 986:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
 987:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
 988:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 989:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
 991:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 992:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
 993:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 994:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
 995:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 996:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
 997:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
 998:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 999:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1000:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1001:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1002:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1003:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1004:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1005:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1006:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1007:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1008:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1009:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1010:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1011:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1012:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1013:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1015:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1016:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1017:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1018:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1019:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1020:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1021:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1022:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1023:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1024:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1025:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1026:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1027:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1028:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1029:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1030:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1031:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1032:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1033:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1034:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1035:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1036:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1037:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1038:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1039:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1040:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1041:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1042:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1043:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1044:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1045:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1046:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1047:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1048:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1049:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1050:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1051:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1052:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1053:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1054:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1055:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1056:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1057:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1058:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1059:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1060:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1061:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1062:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1063:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1064:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1065:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1066:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1067:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1068:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1069:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1070:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1071:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1072:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1073:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1074:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1075:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1076:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1077:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1078:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1079:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1080:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1081:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1082:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1083:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1084:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1085:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1086:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1087:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1088:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1089:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1090:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1091:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1092:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1093:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1094:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1095:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1096:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1097:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1098:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1099:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1100:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1101:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1102:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1103:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1104:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1105:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1106:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1107:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1108:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1109:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1110:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1111:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1112:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1113:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1114:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1115:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1115 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1116:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1117:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
  43              	 .loc 1 1117 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
1118:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  49              	 .loc 1 1118 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE130:
  65 001e 00BF     	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU8_SLICE_StopTimer:
  71              	.LFB144:
1119:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1120:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1121:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1122:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1123:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1124:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1125:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1126:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1127:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1128:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1129:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1130:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1131:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1132:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1133:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1134:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1135:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1136:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1137:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1138:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1146:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1147:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1148:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1149:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1150:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1151:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1152:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1153:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1154:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1155:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1156:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1157:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1158:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1159:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1160:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1161:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1162:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1165:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1167:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1168:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1169:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1170:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1171:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1172:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1173:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1174:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1175:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1176:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1177:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1178:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1179:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1180:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1181:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1182:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1183:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1184:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1185:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1186:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1187:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1188:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1189:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1190:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1191:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1192:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1193:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1194:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1195:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1196:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1197:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1198:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1199:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1200:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1201:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1202:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1203:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1204:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1205:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1206:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1207:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1208:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1209:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1210:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1211:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1212:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1213:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1214:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1215:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1216:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1217:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1218:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1219:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1220:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1221:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1222:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1223:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1224:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1225:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1226:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1227:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1228:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1229:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1230:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1231:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1232:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1233:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1234:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1235:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1236:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1237:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1238:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1239:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1240:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
1241:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1242:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1243:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1244:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1245:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1246:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1247:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1248:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1249:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1250:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1251:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1252:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1253:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1254:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1255:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1256:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1257:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1258:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1259:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1260:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1261:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1262:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1263:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1264:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1265:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1266:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1268:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1269:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1270:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1271:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1272:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1273:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1274:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1275:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1276:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1277:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1278:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1279:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1280:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1281:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1282:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1283:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1284:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1285:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1286:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1287:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1288:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1289:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1290:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1291:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1292:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1293:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1294:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1295:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1296:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1297:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1298:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1299:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1300:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1301:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1302:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1303:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1304:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1305:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1306:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1307:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1308:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1309:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1310:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1311:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1312:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1313:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1314:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1315:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1316:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1317:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1319:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1320:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1321:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1322:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1323:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1324:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1325:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1326:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1327:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1328:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1329:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1330:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1331:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1332:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1333:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1334:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1335:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1336:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1337:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1338:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1339:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1340:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1341:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1342:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1343:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1344:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1345:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1346:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1347:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1348:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1349:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1350:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1351:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1352:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1353:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1354:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1355:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1356:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1357:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1358:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1359:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1360:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1361:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1362:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1363:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1364:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1365:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1366:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1367:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1368:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1369:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1370:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1371:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1372:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1373:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1374:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1375:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1376:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1377:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1378:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1379:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1380:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1381:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1382:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1383:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1384:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1385:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1386:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1387:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1388:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1389:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1390:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1391:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1392:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1393:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1394:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1395:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1396:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1397:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1398:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1399:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1400:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1401:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1402:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1403:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1404:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1405:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1406:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1407:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1408:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1409:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1410:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1411:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1412:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1413:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1414:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1415:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1416:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1417:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1418:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1419:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1420:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1421:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1422:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1423:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1424:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1425:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1426:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1427:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1428:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1429:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1430:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1431:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1432:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1433:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1434:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1435:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1436:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1437:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1438:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1439:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1440:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1441:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1442:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1443:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1444:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1445:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1446:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1447:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1448:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1449:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1450:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1451:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1452:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1453:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1454:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1455:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1456:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1457:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1458:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1459:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1460:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1461:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1462:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1463:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1464:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1465:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1466:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1467:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1468:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1469:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1470:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1471:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1472:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1473:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1474:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1475:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1476:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1477:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1478:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1479:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1480:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1481:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1482:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1483:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1484:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1485:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1486:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1487:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1488:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1489:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1490:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1491:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1492:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1493:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1494:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1495:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1496:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1497:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1498:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1499:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1500:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1501:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1502:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1503:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1504:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1505:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1506:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1507:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1508:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1509:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1510:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1511:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1512:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1513:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1514:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1515:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1516:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1517:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1518:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1519:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1520:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1521:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1522:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1523:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1524:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1525:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1526:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1527:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1528:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1529:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1530:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1531:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1532:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1533:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1534:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1535:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1536:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1537:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1538:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1539:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1540:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1541:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1542:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1543:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1544:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1545:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1546:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1547:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1548:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1549:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1550:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1551:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1552:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1553:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1554:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1555:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1556:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1557:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1558:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1559:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1560:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1562:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1563:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1564:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1565:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1566:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1567:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1568:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1569:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1570:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1571:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1572:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1573:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1574:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1575:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1576:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1577:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1578:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1579:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1580:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1581:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1582:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1583:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1584:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1585:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1586:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1587:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1588:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1589:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1590:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1591:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1592:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1593:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1594:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1595:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1596:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1597:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1598:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1599:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1600:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1601:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1602:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1603:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1604:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1605:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1606:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1607:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1608:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1609:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1610:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1611:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1612:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1613:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1614:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1615:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1616:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1617:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1618:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1619:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1620:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1621:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1622:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1623:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1624:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1625:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1626:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1627:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1628:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1629:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1630:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1631:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1632:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1633:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1634:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1635:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1636:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1638:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1639:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1640:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1641:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1642:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1643:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1644:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1645:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1646:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1647:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1648:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1649:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1650:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1651:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1652:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1653:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1654:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1655:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1656:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1657:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1658:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1659:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1660:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1661:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1662:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1663:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1664:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1665:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1666:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1667:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1668:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1669:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1670:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1671:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1672:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1673:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1674:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1675:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1676:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1677:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1678:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1679:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1680:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1681:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1682:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1683:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1684:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1685:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1686:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1687:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1688:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1689:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1690:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1691:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1692:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1693:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1694:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1695:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1696:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1697:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1698:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1699:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1700:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1701:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1702:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1703:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1704:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1705:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1706:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1707:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1708:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1709:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1710:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1711:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1712:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1713:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1714:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1715:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1716:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1717:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1718:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1719:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1720:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1721:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1722:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1723:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1724:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1726:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1727:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1728:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1729:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1730:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1731:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1732:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1733:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1734:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1735:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1736:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1737:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1738:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1739:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1740:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1741:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1742:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1743:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1744:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1745:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1746:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1747:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1748:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1749:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1750:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1751:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1752:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1753:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1754:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1755:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1756:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1757:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1758:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1759:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1760:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1761:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1762:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1763:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1764:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1765:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1766:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1767:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1768:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1769:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1770:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1771:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1772:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1773:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1774:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1775:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1776:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1777:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1778:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1779:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1780:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1781:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1782:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1783:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1784:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1785:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1786:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1787:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
1788:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  72              	 .loc 1 1788 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
1789:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1790:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  88              	 .loc 1 1790 0
  89 0008 7B68     	 ldr r3,[r7,#4]
  90 000a 0122     	 movs r2,#1
  91 000c 1A61     	 str r2,[r3,#16]
1791:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  92              	 .loc 1 1791 0
  93 000e 0C37     	 adds r7,r7,#12
  94              	.LCFI9:
  95              	 .cfi_def_cfa_offset 4
  96 0010 BD46     	 mov sp,r7
  97              	.LCFI10:
  98              	 .cfi_def_cfa_register 13
  99              	 
 100 0012 5DF8047B 	 ldr r7,[sp],#4
 101              	.LCFI11:
 102              	 .cfi_restore 7
 103              	 .cfi_def_cfa_offset 0
 104 0016 7047     	 bx lr
 105              	 .cfi_endproc
 106              	.LFE144:
 108              	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
 109              	 .align 2
 110              	 .thumb
 111              	 .thumb_func
 113              	XMC_CCU8_SLICE_SetDitherCompareValue:
 114              	.LFB159:
1792:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1793:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1794:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1795:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1796:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1797:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1798:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1799:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
1800:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
1801:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
1802:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1804:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1805:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1806:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
1807:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1808:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1809:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
1810:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1811:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1812:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1813:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1814:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1815:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1816:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1817:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1818:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
1819:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1821:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1822:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1823:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
1824:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1825:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1826:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
1827:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1828:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1829:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1830:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1831:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1832:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
1833:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
1834:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1835:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1836:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1837:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
1838:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
1839:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
1840:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1841:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1842:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1843:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1844:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
1845:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1846:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1847:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
1848:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1849:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1850:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1851:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1852:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1853:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1854:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1855:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1856:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1857:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
1858:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1859:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1860:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
1861:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1862:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1863:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
1864:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1865:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
1866:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1867:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1868:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1869:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1870:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1871:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1872:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1873:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1874:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
1875:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
1876:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1877:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
1878:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1879:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1880:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
1881:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1882:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
1883:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
1884:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1885:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
1886:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
1887:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1888:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1889:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1890:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1891:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1892:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1893:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1894:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1895:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
1896:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1897:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1898:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1899:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1900:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
1901:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1902:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1903:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
1904:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1905:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
1906:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1907:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1908:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1909:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1910:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1911:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
1912:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1913:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1914:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
1915:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1916:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1917:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
1918:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1919:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
1920:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
1921:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1922:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1923:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
1924:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1925:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1926:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1927:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
1928:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
1929:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1930:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1931:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1932:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1933:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
1934:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1935:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1936:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1937:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
1938:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1940:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
1941:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1942:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
1943:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1944:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1945:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1946:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1947:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
1948:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
1949:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1950:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1951:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
1952:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1953:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1954:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
1955:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1956:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1957:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
1958:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
1959:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
1962:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
1964:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1965:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
1966:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
1967:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1968:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1969:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1970:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
1971:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1972:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
1977:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
1978:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1979:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
1980:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1981:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1982:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1983:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1984:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1985:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1986:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1987:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1988:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
1989:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1990:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1991:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1992:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1993:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1994:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1995:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1996:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1997:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
1998:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
1999:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2000:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2001:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2002:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2003:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2004:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2005:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2006:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2007:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2008:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2009:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2010:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2011:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2012:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2013:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2014:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2015:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2016:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2017:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2018:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2019:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2020:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2021:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2022:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2023:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2024:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2025:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2026:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2027:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2028:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2029:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2030:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2031:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2032:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2033:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2034:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2035:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2036:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2037:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2038:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2039:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2040:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2041:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2042:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2043:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2044:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2045:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2046:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2048:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2049:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2050:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2051:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2052:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2053:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2054:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2055:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2056:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2057:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2058:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2059:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2060:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2061:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2062:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2063:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2064:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2065:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2066:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2067:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2068:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2069:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2070:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2071:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2072:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2073:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2074:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2075:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2076:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2077:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2078:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2079:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2080:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2081:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2082:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2083:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2084:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2085:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2086:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2087:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2088:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2089:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2090:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2091:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2092:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2093:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2094:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2095:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2096:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2097:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2098:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2099:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2100:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2101:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2102:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2103:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2104:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2105:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2106:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2107:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2108:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2109:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2110:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2111:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2112:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2113:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2114:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2115:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2116:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2118:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2119:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2120:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2121:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2122:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2123:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2124:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2125:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2126:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2127:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2128:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2129:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2130:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2131:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2132:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2133:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2134:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2135:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2136:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2137:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2138:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2139:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2140:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2141:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2142:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2143:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2144:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2145:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2146:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2147:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2148:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2149:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2150:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2151:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2152:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2153:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2154:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2155:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2156:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2157:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2158:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2159:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2160:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2161:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2162:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2163:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2164:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2165:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2166:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2167:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2168:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2169:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2170:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2171:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2172:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2173:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2174:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2175:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2176:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2177:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2178:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2179:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2180:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2181:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2182:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2183:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2184:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2185:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2186:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2187:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2188:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2189:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2190:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2191:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2192:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2193:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2194:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2195:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2196:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2197:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2198:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2199:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2200:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2201:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2202:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2203:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2204:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2205:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2206:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2207:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2208:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2209:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2210:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2211:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2212:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2213:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2214:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2215:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2216:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2217:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2218:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2219:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2220:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2221:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2222:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2223:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2224:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2225:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2226:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2227:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2228:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2229:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2230:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 115              	 .loc 1 2230 0
 116              	 .cfi_startproc
 117              	 
 118              	 
 119              	 
 120 0000 80B4     	 push {r7}
 121              	.LCFI12:
 122              	 .cfi_def_cfa_offset 4
 123              	 .cfi_offset 7,-4
 124 0002 83B0     	 sub sp,sp,#12
 125              	.LCFI13:
 126              	 .cfi_def_cfa_offset 16
 127 0004 00AF     	 add r7,sp,#0
 128              	.LCFI14:
 129              	 .cfi_def_cfa_register 7
 130 0006 7860     	 str r0,[r7,#4]
 131 0008 0B46     	 mov r3,r1
 132 000a FB70     	 strb r3,[r7,#3]
2231:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2232:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2233:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2234:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 133              	 .loc 1 2234 0
 134 000c FA78     	 ldrb r2,[r7,#3]
 135 000e 7B68     	 ldr r3,[r7,#4]
 136 0010 1A62     	 str r2,[r3,#32]
2235:D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 137              	 .loc 1 2235 0
 138 0012 0C37     	 adds r7,r7,#12
 139              	.LCFI15:
 140              	 .cfi_def_cfa_offset 4
 141 0014 BD46     	 mov sp,r7
 142              	.LCFI16:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 0016 5DF8047B 	 ldr r7,[sp],#4
 146              	.LCFI17:
 147              	 .cfi_restore 7
 148              	 .cfi_def_cfa_offset 0
 149 001a 7047     	 bx lr
 150              	 .cfi_endproc
 151              	.LFE159:
 153              	 .section .text.XMC_CCU8_lAssertReset,"ax",%progbits
 154              	 .align 2
 155              	 .thumb
 156              	 .thumb_func
 158              	XMC_CCU8_lAssertReset:
 159              	.LFB206:
 160              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu8.c"
   1:../Libraries/XMCLib/src/xmc_ccu8.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @date 2015-10-07
   4:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu8.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu8.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:../Libraries/XMCLib/src/xmc_ccu8.c ****  *       during external load event. 
  46:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  47:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  48:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  50:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  51:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  57:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_ccu8.c ****  */
  63:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  67:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  68:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  69:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  70:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  71:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu8.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  75:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  76:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  77:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  78:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  79:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  80:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  81:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  82:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
  83:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  84:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  85:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  86:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  87:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  88:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  89:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  90:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  91:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  92:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  93:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  94:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  95:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
  96:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
  97:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
  98:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
  99:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 100:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 101:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 102:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 103:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 104:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 105:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 107:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 108:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 109:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 110:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 111:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 112:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 113:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 114:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 115:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 116:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 117:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 118:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 119:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 120:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 121:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 122:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 124:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 125:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 126:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 127:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 128:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 129:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 130:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 131:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 132:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 133:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 134:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 135:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 136:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 137:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 138:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 139:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 140:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 141:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 142:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 143:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 144:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 145:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 146:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 147:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 148:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 149:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 150:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 151:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 152:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 153:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 154:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 155:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 156:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 157:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 158:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 159:../Libraries/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 160:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 161:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 162:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 163:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 164:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 165:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 166:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 170:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 171:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 172:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 173:../Libraries/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 174:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 175:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 176:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 177:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 161              	 .loc 2 177 0
 162              	 .cfi_startproc
 163              	 
 164              	 
 165 0000 80B5     	 push {r7,lr}
 166              	.LCFI18:
 167              	 .cfi_def_cfa_offset 8
 168              	 .cfi_offset 7,-8
 169              	 .cfi_offset 14,-4
 170 0002 82B0     	 sub sp,sp,#8
 171              	.LCFI19:
 172              	 .cfi_def_cfa_offset 16
 173 0004 00AF     	 add r7,sp,#0
 174              	.LCFI20:
 175              	 .cfi_def_cfa_register 7
 176 0006 7860     	 str r0,[r7,#4]
 178:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 177              	 .loc 2 178 0
 178 0008 7B68     	 ldr r3,[r7,#4]
 179 000a 094A     	 ldr r2,.L9
 180 000c 9342     	 cmp r3,r2
 181 000e 03D0     	 beq .L6
 182 0010 084A     	 ldr r2,.L9+4
 183 0012 9342     	 cmp r3,r2
 184 0014 04D0     	 beq .L7
 179:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 180:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 183:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 184:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 185:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 187:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 188:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 189:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 190:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 191:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 192:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 185              	 .loc 2 192 0
 186 0016 08E0     	 b .L4
 187              	.L6:
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 188              	 .loc 2 181 0
 189 0018 8020     	 movs r0,#128
 190 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 191              	 .loc 2 182 0
 192 001e 04E0     	 b .L4
 193              	.L7:
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 194              	 .loc 2 186 0
 195 0020 4FF48070 	 mov r0,#256
 196 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 187:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 197              	 .loc 2 187 0
 198 0028 00BF     	 nop
 199              	.L4:
 193:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 194:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 200              	 .loc 2 194 0
 201 002a 0837     	 adds r7,r7,#8
 202              	.LCFI21:
 203              	 .cfi_def_cfa_offset 8
 204 002c BD46     	 mov sp,r7
 205              	.LCFI22:
 206              	 .cfi_def_cfa_register 13
 207              	 
 208 002e 80BD     	 pop {r7,pc}
 209              	.L10:
 210              	 .align 2
 211              	.L9:
 212 0030 00000240 	 .word 1073872896
 213 0034 00400240 	 .word 1073889280
 214              	 .cfi_endproc
 215              	.LFE206:
 217              	 .section .text.XMC_CCU8_lDeassertReset,"ax",%progbits
 218              	 .align 2
 219              	 .thumb
 220              	 .thumb_func
 222              	XMC_CCU8_lDeassertReset:
 223              	.LFB207:
 195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 196:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 197:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 224              	 .loc 2 197 0
 225              	 .cfi_startproc
 226              	 
 227              	 
 228 0000 80B5     	 push {r7,lr}
 229              	.LCFI23:
 230              	 .cfi_def_cfa_offset 8
 231              	 .cfi_offset 7,-8
 232              	 .cfi_offset 14,-4
 233 0002 82B0     	 sub sp,sp,#8
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 16
 236 0004 00AF     	 add r7,sp,#0
 237              	.LCFI25:
 238              	 .cfi_def_cfa_register 7
 239 0006 7860     	 str r0,[r7,#4]
 198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 240              	 .loc 2 198 0
 241 0008 7B68     	 ldr r3,[r7,#4]
 242 000a 094A     	 ldr r2,.L16
 243 000c 9342     	 cmp r3,r2
 244 000e 03D0     	 beq .L13
 245 0010 084A     	 ldr r2,.L16+4
 246 0012 9342     	 cmp r3,r2
 247 0014 04D0     	 beq .L14
 199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 201:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 203:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 204:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 205:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 206:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 207:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 208:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 209:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 210:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 211:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 212:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 248              	 .loc 2 212 0
 249 0016 08E0     	 b .L11
 250              	.L13:
 201:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 251              	 .loc 2 201 0
 252 0018 8020     	 movs r0,#128
 253 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 254              	 .loc 2 202 0
 255 001e 04E0     	 b .L11
 256              	.L14:
 206:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 257              	 .loc 2 206 0
 258 0020 4FF48070 	 mov r0,#256
 259 0024 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 207:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 260              	 .loc 2 207 0
 261 0028 00BF     	 nop
 262              	.L11:
 213:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 214:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 263              	 .loc 2 214 0
 264 002a 0837     	 adds r7,r7,#8
 265              	.LCFI26:
 266              	 .cfi_def_cfa_offset 8
 267 002c BD46     	 mov sp,r7
 268              	.LCFI27:
 269              	 .cfi_def_cfa_register 13
 270              	 
 271 002e 80BD     	 pop {r7,pc}
 272              	.L17:
 273              	 .align 2
 274              	.L16:
 275 0030 00000240 	 .word 1073872896
 276 0034 00400240 	 .word 1073889280
 277              	 .cfi_endproc
 278              	.LFE207:
 280              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 281              	 .align 2
 282              	 .global XMC_CCU8_EnableModule
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_CCU8_EnableModule:
 287              	.LFB208:
 215:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 216:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 217:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 218:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 219:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 220:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 221:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 222:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 225:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 226:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 227:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 228:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 229:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 230:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 231:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 232:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 233:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 234:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 235:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 236:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 237:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 238:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 240:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 241:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 242:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 244:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 245:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 246:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 247:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 249:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 250:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 251:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 252:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 253:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 254:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 255:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 256:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 257:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 258:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 259:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 260:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 261:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 262:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 263:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 264:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 265:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 266:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 267:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 268:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 269:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 270:../Libraries/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 271:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 272:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 273:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 274:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 275:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 288              	 .loc 2 275 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292 0000 80B5     	 push {r7,lr}
 293              	.LCFI28:
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 82B0     	 sub sp,sp,#8
 298              	.LCFI29:
 299              	 .cfi_def_cfa_offset 16
 300 0004 00AF     	 add r7,sp,#0
 301              	.LCFI30:
 302              	 .cfi_def_cfa_register 7
 303 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 277:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 278:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 279:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 304              	 .loc 2 280 0
 305 0008 1020     	 movs r0,#16
 306 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 281:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 282:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 283:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 284:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 285:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 286:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 287:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 288:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 307              	 .loc 2 288 0
 308 000e 7868     	 ldr r0,[r7,#4]
 309 0010 FFF7FEFF 	 bl XMC_CCU8_lDeassertReset
 289:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 290:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 310              	 .loc 2 290 0
 311 0014 0837     	 adds r7,r7,#8
 312              	.LCFI31:
 313              	 .cfi_def_cfa_offset 8
 314 0016 BD46     	 mov sp,r7
 315              	.LCFI32:
 316              	 .cfi_def_cfa_register 13
 317              	 
 318 0018 80BD     	 pop {r7,pc}
 319              	 .cfi_endproc
 320              	.LFE208:
 322 001a 00BF     	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 323              	 .align 2
 324              	 .global XMC_CCU8_DisableModule
 325              	 .thumb
 326              	 .thumb_func
 328              	XMC_CCU8_DisableModule:
 329              	.LFB209:
 291:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 292:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 293:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 294:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 330              	 .loc 2 294 0
 331              	 .cfi_startproc
 332              	 
 333              	 
 334 0000 80B5     	 push {r7,lr}
 335              	.LCFI33:
 336              	 .cfi_def_cfa_offset 8
 337              	 .cfi_offset 7,-8
 338              	 .cfi_offset 14,-4
 339 0002 82B0     	 sub sp,sp,#8
 340              	.LCFI34:
 341              	 .cfi_def_cfa_offset 16
 342 0004 00AF     	 add r7,sp,#0
 343              	.LCFI35:
 344              	 .cfi_def_cfa_register 7
 345 0006 7860     	 str r0,[r7,#4]
 295:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 296:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 297:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 298:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 346              	 .loc 2 298 0
 347 0008 7868     	 ldr r0,[r7,#4]
 348 000a FFF7FEFF 	 bl XMC_CCU8_lAssertReset
 299:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 300:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 301:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 302:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 303:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 304:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 349              	 .loc 2 304 0
 350 000e 0837     	 adds r7,r7,#8
 351              	.LCFI36:
 352              	 .cfi_def_cfa_offset 8
 353 0010 BD46     	 mov sp,r7
 354              	.LCFI37:
 355              	 .cfi_def_cfa_register 13
 356              	 
 357 0012 80BD     	 pop {r7,pc}
 358              	 .cfi_endproc
 359              	.LFE209:
 361              	 .section .text.XMC_CCU8_Init,"ax",%progbits
 362              	 .align 2
 363              	 .global XMC_CCU8_Init
 364              	 .thumb
 365              	 .thumb_func
 367              	XMC_CCU8_Init:
 368              	.LFB210:
 305:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 306:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 307:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 308:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 369              	 .loc 2 308 0
 370              	 .cfi_startproc
 371              	 
 372              	 
 373 0000 80B5     	 push {r7,lr}
 374              	.LCFI38:
 375              	 .cfi_def_cfa_offset 8
 376              	 .cfi_offset 7,-8
 377              	 .cfi_offset 14,-4
 378 0002 84B0     	 sub sp,sp,#16
 379              	.LCFI39:
 380              	 .cfi_def_cfa_offset 24
 381 0004 00AF     	 add r7,sp,#0
 382              	.LCFI40:
 383              	 .cfi_def_cfa_register 7
 384 0006 7860     	 str r0,[r7,#4]
 385 0008 0B46     	 mov r3,r1
 386 000a FB70     	 strb r3,[r7,#3]
 309:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 311:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 312:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 313:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 314:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 315:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 387              	 .loc 2 315 0
 388 000c 7868     	 ldr r0,[r7,#4]
 389 000e FFF7FEFF 	 bl XMC_CCU8_EnableModule
 316:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 317:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 390              	 .loc 2 317 0
 391 0012 7868     	 ldr r0,[r7,#4]
 392 0014 FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 318:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 319:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 393              	 .loc 2 319 0
 394 0018 7B68     	 ldr r3,[r7,#4]
 395 001a 1B68     	 ldr r3,[r3]
 396 001c FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 397              	 .loc 2 320 0
 398 001e FB68     	 ldr r3,[r7,#12]
 399 0020 23F44043 	 bic r3,r3,#49152
 400 0024 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 401              	 .loc 2 321 0
 402 0026 FB78     	 ldrb r3,[r7,#3]
 403 0028 9B03     	 lsls r3,r3,#14
 404 002a FA68     	 ldr r2,[r7,#12]
 405 002c 1343     	 orrs r3,r3,r2
 406 002e FB60     	 str r3,[r7,#12]
 322:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 323:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 407              	 .loc 2 323 0
 408 0030 7B68     	 ldr r3,[r7,#4]
 409 0032 FA68     	 ldr r2,[r7,#12]
 410 0034 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 411              	 .loc 2 324 0
 412 0036 1037     	 adds r7,r7,#16
 413              	.LCFI41:
 414              	 .cfi_def_cfa_offset 8
 415 0038 BD46     	 mov sp,r7
 416              	.LCFI42:
 417              	 .cfi_def_cfa_register 13
 418              	 
 419 003a 80BD     	 pop {r7,pc}
 420              	 .cfi_endproc
 421              	.LFE210:
 423              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 424              	 .align 2
 425              	 .global XMC_CCU8_SetModuleClock
 426              	 .thumb
 427              	 .thumb_func
 429              	XMC_CCU8_SetModuleClock:
 430              	.LFB211:
 325:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 326:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 327:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 328:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 431              	 .loc 2 328 0
 432              	 .cfi_startproc
 433              	 
 434              	 
 435              	 
 436 0000 80B4     	 push {r7}
 437              	.LCFI43:
 438              	 .cfi_def_cfa_offset 4
 439              	 .cfi_offset 7,-4
 440 0002 85B0     	 sub sp,sp,#20
 441              	.LCFI44:
 442              	 .cfi_def_cfa_offset 24
 443 0004 00AF     	 add r7,sp,#0
 444              	.LCFI45:
 445              	 .cfi_def_cfa_register 7
 446 0006 7860     	 str r0,[r7,#4]
 447 0008 0B46     	 mov r3,r1
 448 000a FB70     	 strb r3,[r7,#3]
 329:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 330:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 331:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 332:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 333:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 334:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 449              	 .loc 2 334 0
 450 000c 7B68     	 ldr r3,[r7,#4]
 451 000e 1B68     	 ldr r3,[r3]
 452 0010 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 453              	 .loc 2 335 0
 454 0012 FB68     	 ldr r3,[r7,#12]
 455 0014 23F03003 	 bic r3,r3,#48
 456 0018 FB60     	 str r3,[r7,#12]
 336:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 457              	 .loc 2 336 0
 458 001a FB78     	 ldrb r3,[r7,#3]
 459 001c 1B01     	 lsls r3,r3,#4
 460 001e FA68     	 ldr r2,[r7,#12]
 461 0020 1343     	 orrs r3,r3,r2
 462 0022 FB60     	 str r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 338:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 463              	 .loc 2 338 0
 464 0024 7B68     	 ldr r3,[r7,#4]
 465 0026 FA68     	 ldr r2,[r7,#12]
 466 0028 1A60     	 str r2,[r3]
 339:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 467              	 .loc 2 339 0
 468 002a 1437     	 adds r7,r7,#20
 469              	.LCFI46:
 470              	 .cfi_def_cfa_offset 4
 471 002c BD46     	 mov sp,r7
 472              	.LCFI47:
 473              	 .cfi_def_cfa_register 13
 474              	 
 475 002e 5DF8047B 	 ldr r7,[sp],#4
 476              	.LCFI48:
 477              	 .cfi_restore 7
 478              	 .cfi_def_cfa_offset 0
 479 0032 7047     	 bx lr
 480              	 .cfi_endproc
 481              	.LFE211:
 483              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 484              	 .align 2
 485              	 .global XMC_CCU8_SLICE_CompareInit
 486              	 .thumb
 487              	 .thumb_func
 489              	XMC_CCU8_SLICE_CompareInit:
 490              	.LFB212:
 340:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 341:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 342:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 343:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 344:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 491              	 .loc 2 344 0
 492              	 .cfi_startproc
 493              	 
 494              	 
 495 0000 80B5     	 push {r7,lr}
 496              	.LCFI49:
 497              	 .cfi_def_cfa_offset 8
 498              	 .cfi_offset 7,-8
 499              	 .cfi_offset 14,-4
 500 0002 82B0     	 sub sp,sp,#8
 501              	.LCFI50:
 502              	 .cfi_def_cfa_offset 16
 503 0004 00AF     	 add r7,sp,#0
 504              	.LCFI51:
 505              	 .cfi_def_cfa_register 7
 506 0006 7860     	 str r0,[r7,#4]
 507 0008 3960     	 str r1,[r7]
 345:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 346:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 347:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 348:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 349:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 508              	 .loc 2 349 0
 509 000a 7868     	 ldr r0,[r7,#4]
 510 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 350:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 351:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 511              	 .loc 2 351 0
 512 0010 3B68     	 ldr r3,[r7]
 513 0012 1A68     	 ldr r2,[r3]
 514 0014 7B68     	 ldr r3,[r7,#4]
 515 0016 5A61     	 str r2,[r3,#20]
 352:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 353:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 516              	 .loc 2 353 0
 517 0018 3B68     	 ldr r3,[r7]
 518 001a 5B7B     	 ldrb r3,[r3,#13]
 519 001c C3F30013 	 ubfx r3,r3,#4,#1
 520 0020 DBB2     	 uxtb r3,r3
 521 0022 1A05     	 lsls r2,r3,#20
 522 0024 7B68     	 ldr r3,[r7,#4]
 523 0026 5A60     	 str r2,[r3,#4]
 354:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 355:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 524              	 .loc 2 355 0
 525 0028 3B68     	 ldr r3,[r7]
 526 002a 1B7B     	 ldrb r3,[r3,#12]
 527 002c C3F30303 	 ubfx r3,r3,#0,#4
 528 0030 DBB2     	 uxtb r3,r3
 529 0032 1A46     	 mov r2,r3
 530 0034 7B68     	 ldr r3,[r7,#4]
 531 0036 5A62     	 str r2,[r3,#36]
 356:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 357:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 532              	 .loc 2 357 0
 533 0038 3B68     	 ldr r3,[r7]
 534 003a 1B7B     	 ldrb r3,[r3,#12]
 535 003c C3F30313 	 ubfx r3,r3,#4,#4
 536 0040 DBB2     	 uxtb r3,r3
 537 0042 1A46     	 mov r2,r3
 538 0044 7B68     	 ldr r3,[r7,#4]
 539 0046 DA62     	 str r2,[r3,#44]
 358:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 359:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 540              	 .loc 2 359 0
 541 0048 3B68     	 ldr r3,[r7]
 542 004a 5B7B     	 ldrb r3,[r3,#13]
 543 004c C3F30303 	 ubfx r3,r3,#0,#4
 544 0050 DBB2     	 uxtb r3,r3
 545 0052 1A46     	 mov r2,r3
 546 0054 7B68     	 ldr r3,[r7,#4]
 547 0056 1A62     	 str r2,[r3,#32]
 360:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 361:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 548              	 .loc 2 361 0
 549 0058 3B68     	 ldr r3,[r7]
 550 005a 5A68     	 ldr r2,[r3,#4]
 551 005c 7B68     	 ldr r3,[r7,#4]
 552 005e 9A61     	 str r2,[r3,#24]
 362:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 363:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 364:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 365:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 366:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 553              	 .loc 2 366 0
 554 0060 3B68     	 ldr r3,[r7]
 555 0062 9B68     	 ldr r3,[r3,#8]
 556 0064 83F01402 	 eor r2,r3,#20
 557 0068 7B68     	 ldr r3,[r7,#4]
 558 006a 9A64     	 str r2,[r3,#72]
 367:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 368:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 559              	 .loc 2 368 0
 560 006c 0837     	 adds r7,r7,#8
 561              	.LCFI52:
 562              	 .cfi_def_cfa_offset 8
 563 006e BD46     	 mov sp,r7
 564              	.LCFI53:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 0070 80BD     	 pop {r7,pc}
 568              	 .cfi_endproc
 569              	.LFE212:
 571 0072 00BF     	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 572              	 .align 2
 573              	 .global XMC_CCU8_SLICE_CaptureInit
 574              	 .thumb
 575              	 .thumb_func
 577              	XMC_CCU8_SLICE_CaptureInit:
 578              	.LFB213:
 369:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 370:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 371:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 372:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 373:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 579              	 .loc 2 373 0
 580              	 .cfi_startproc
 581              	 
 582              	 
 583 0000 80B5     	 push {r7,lr}
 584              	.LCFI54:
 585              	 .cfi_def_cfa_offset 8
 586              	 .cfi_offset 7,-8
 587              	 .cfi_offset 14,-4
 588 0002 82B0     	 sub sp,sp,#8
 589              	.LCFI55:
 590              	 .cfi_def_cfa_offset 16
 591 0004 00AF     	 add r7,sp,#0
 592              	.LCFI56:
 593              	 .cfi_def_cfa_register 7
 594 0006 7860     	 str r0,[r7,#4]
 595 0008 3960     	 str r1,[r7]
 374:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 375:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 376:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 377:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 378:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 596              	 .loc 2 378 0
 597 000a 7868     	 ldr r0,[r7,#4]
 598 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 379:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 380:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 599              	 .loc 2 380 0
 600 0010 3B68     	 ldr r3,[r7]
 601 0012 1A68     	 ldr r2,[r3]
 602 0014 7B68     	 ldr r3,[r7,#4]
 603 0016 5A61     	 str r2,[r3,#20]
 381:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 382:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 604              	 .loc 2 382 0
 605 0018 3B68     	 ldr r3,[r7]
 606 001a 5B79     	 ldrb r3,[r3,#5]
 607 001c C3F30003 	 ubfx r3,r3,#0,#1
 608 0020 DBB2     	 uxtb r3,r3
 609 0022 1A05     	 lsls r2,r3,#20
 610 0024 7B68     	 ldr r3,[r7,#4]
 611 0026 5A60     	 str r2,[r3,#4]
 383:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 384:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 612              	 .loc 2 384 0
 613 0028 3B68     	 ldr r3,[r7]
 614 002a 1B79     	 ldrb r3,[r3,#4]
 615 002c C3F30313 	 ubfx r3,r3,#4,#4
 616 0030 DBB2     	 uxtb r3,r3
 617 0032 1A46     	 mov r2,r3
 618 0034 7B68     	 ldr r3,[r7,#4]
 619 0036 DA62     	 str r2,[r3,#44]
 385:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 386:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 620              	 .loc 2 386 0
 621 0038 3B68     	 ldr r3,[r7]
 622 003a 1B79     	 ldrb r3,[r3,#4]
 623 003c C3F30303 	 ubfx r3,r3,#0,#4
 624 0040 DBB2     	 uxtb r3,r3
 625 0042 1A46     	 mov r2,r3
 626 0044 7B68     	 ldr r3,[r7,#4]
 627 0046 5A62     	 str r2,[r3,#36]
 387:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 628              	 .loc 2 387 0
 629 0048 0837     	 adds r7,r7,#8
 630              	.LCFI57:
 631              	 .cfi_def_cfa_offset 8
 632 004a BD46     	 mov sp,r7
 633              	.LCFI58:
 634              	 .cfi_def_cfa_register 13
 635              	 
 636 004c 80BD     	 pop {r7,pc}
 637              	 .cfi_endproc
 638              	.LFE213:
 640 004e 00BF     	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 641              	 .align 2
 642              	 .global XMC_CCU8_SLICE_SetOutPath
 643              	 .thumb
 644              	 .thumb_func
 646              	XMC_CCU8_SLICE_SetOutPath:
 647              	.LFB214:
 388:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 389:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 390:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 391:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 648              	 .loc 2 391 0
 649              	 .cfi_startproc
 650              	 
 651              	 
 652              	 
 653 0000 80B4     	 push {r7}
 654              	.LCFI59:
 655              	 .cfi_def_cfa_offset 4
 656              	 .cfi_offset 7,-4
 657 0002 85B0     	 sub sp,sp,#20
 658              	.LCFI60:
 659              	 .cfi_def_cfa_offset 24
 660 0004 00AF     	 add r7,sp,#0
 661              	.LCFI61:
 662              	 .cfi_def_cfa_register 7
 663 0006 7860     	 str r0,[r7,#4]
 664 0008 3960     	 str r1,[r7]
 392:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 393:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 394:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 665              	 .loc 2 394 0
 666 000a 7B68     	 ldr r3,[r7,#4]
 667 000c 9B6C     	 ldr r3,[r3,#72]
 668 000e FB60     	 str r3,[r7,#12]
 395:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 396:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 669              	 .loc 2 396 0
 670 0010 3B68     	 ldr r3,[r7]
 671 0012 1B0C     	 lsrs r3,r3,#16
 672 0014 DB43     	 mvns r3,r3
 673 0016 FA68     	 ldr r2,[r7,#12]
 674 0018 1340     	 ands r3,r3,r2
 675 001a FB60     	 str r3,[r7,#12]
 397:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 676              	 .loc 2 397 0
 677 001c 3B68     	 ldr r3,[r7]
 678 001e 9BB2     	 uxth r3,r3
 679 0020 FA68     	 ldr r2,[r7,#12]
 680 0022 1343     	 orrs r3,r3,r2
 681 0024 FB60     	 str r3,[r7,#12]
 398:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 399:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 400:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 401:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 402:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 682              	 .loc 2 402 0
 683 0026 7B68     	 ldr r3,[r7,#4]
 684 0028 FA68     	 ldr r2,[r7,#12]
 685 002a 9A64     	 str r2,[r3,#72]
 403:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 686              	 .loc 2 403 0
 687 002c 1437     	 adds r7,r7,#20
 688              	.LCFI62:
 689              	 .cfi_def_cfa_offset 4
 690 002e BD46     	 mov sp,r7
 691              	.LCFI63:
 692              	 .cfi_def_cfa_register 13
 693              	 
 694 0030 5DF8047B 	 ldr r7,[sp],#4
 695              	.LCFI64:
 696              	 .cfi_restore 7
 697              	 .cfi_def_cfa_offset 0
 698 0034 7047     	 bx lr
 699              	 .cfi_endproc
 700              	.LFE214:
 702 0036 00BF     	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 703              	 .align 2
 704              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 705              	 .thumb
 706              	 .thumb_func
 708              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 709              	.LFB215:
 404:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 405:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 406:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 407:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 710              	 .loc 2 407 0
 711              	 .cfi_startproc
 712              	 
 713              	 
 714              	 
 715 0000 80B4     	 push {r7}
 716              	.LCFI65:
 717              	 .cfi_def_cfa_offset 4
 718              	 .cfi_offset 7,-4
 719 0002 85B0     	 sub sp,sp,#20
 720              	.LCFI66:
 721              	 .cfi_def_cfa_offset 24
 722 0004 00AF     	 add r7,sp,#0
 723              	.LCFI67:
 724              	 .cfi_def_cfa_register 7
 725 0006 7860     	 str r0,[r7,#4]
 726 0008 3960     	 str r1,[r7]
 408:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 409:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 410:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 411:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 412:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 727              	 .loc 2 412 0
 728 000a 7B68     	 ldr r3,[r7,#4]
 729 000c 1B68     	 ldr r3,[r3]
 730 000e FB60     	 str r3,[r7,#12]
 413:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 731              	 .loc 2 413 0
 732 0010 3B68     	 ldr r3,[r7]
 733 0012 1B0C     	 lsrs r3,r3,#16
 734 0014 DB43     	 mvns r3,r3
 735 0016 FA68     	 ldr r2,[r7,#12]
 736 0018 1340     	 ands r3,r3,r2
 737 001a FB60     	 str r3,[r7,#12]
 414:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 738              	 .loc 2 414 0
 739 001c 3B68     	 ldr r3,[r7]
 740 001e 9BB2     	 uxth r3,r3
 741 0020 FA68     	 ldr r2,[r7,#12]
 742 0022 1343     	 orrs r3,r3,r2
 743 0024 FB60     	 str r3,[r7,#12]
 415:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 744              	 .loc 2 415 0
 745 0026 7B68     	 ldr r3,[r7,#4]
 746 0028 FA68     	 ldr r2,[r7,#12]
 747 002a 1A60     	 str r2,[r3]
 416:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 748              	 .loc 2 416 0
 749 002c 1437     	 adds r7,r7,#20
 750              	.LCFI68:
 751              	 .cfi_def_cfa_offset 4
 752 002e BD46     	 mov sp,r7
 753              	.LCFI69:
 754              	 .cfi_def_cfa_register 13
 755              	 
 756 0030 5DF8047B 	 ldr r7,[sp],#4
 757              	.LCFI70:
 758              	 .cfi_restore 7
 759              	 .cfi_def_cfa_offset 0
 760 0034 7047     	 bx lr
 761              	 .cfi_endproc
 762              	.LFE215:
 764 0036 00BF     	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 765              	 .align 2
 766              	 .global XMC_CCU8_SLICE_StartConfig
 767              	 .thumb
 768              	 .thumb_func
 770              	XMC_CCU8_SLICE_StartConfig:
 771              	.LFB216:
 417:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 418:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 419:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 420:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 421:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 422:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 423:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 772              	 .loc 2 423 0
 773              	 .cfi_startproc
 774              	 
 775              	 
 776              	 
 777 0000 80B4     	 push {r7}
 778              	.LCFI71:
 779              	 .cfi_def_cfa_offset 4
 780              	 .cfi_offset 7,-4
 781 0002 85B0     	 sub sp,sp,#20
 782              	.LCFI72:
 783              	 .cfi_def_cfa_offset 24
 784 0004 00AF     	 add r7,sp,#0
 785              	.LCFI73:
 786              	 .cfi_def_cfa_register 7
 787 0006 7860     	 str r0,[r7,#4]
 788 0008 0B46     	 mov r3,r1
 789 000a FB70     	 strb r3,[r7,#3]
 790 000c 1346     	 mov r3,r2
 791 000e BB70     	 strb r3,[r7,#2]
 424:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 425:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 426:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 427:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 428:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 429:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 430:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 431:../Libraries/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 432:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 792              	 .loc 2 432 0
 793 0010 7B68     	 ldr r3,[r7,#4]
 794 0012 5B68     	 ldr r3,[r3,#4]
 795 0014 BB60     	 str r3,[r7,#8]
 433:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 434:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 796              	 .loc 2 434 0
 797 0016 BB68     	 ldr r3,[r7,#8]
 798 0018 23F00303 	 bic r3,r3,#3
 799 001c BB60     	 str r3,[r7,#8]
 435:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 800              	 .loc 2 435 0
 801 001e FB78     	 ldrb r3,[r7,#3]
 802 0020 BA68     	 ldr r2,[r7,#8]
 803 0022 1343     	 orrs r3,r3,r2
 804 0024 BB60     	 str r3,[r7,#8]
 436:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 437:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 805              	 .loc 2 437 0
 806 0026 7B68     	 ldr r3,[r7,#4]
 807 0028 BA68     	 ldr r2,[r7,#8]
 808 002a 5A60     	 str r2,[r3,#4]
 438:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 439:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 809              	 .loc 2 439 0
 810 002c 7B68     	 ldr r3,[r7,#4]
 811 002e 5B69     	 ldr r3,[r3,#20]
 812 0030 FB60     	 str r3,[r7,#12]
 440:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 441:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 813              	 .loc 2 441 0
 814 0032 BB78     	 ldrb r3,[r7,#2]
 815 0034 012B     	 cmp r3,#1
 816 0036 04D1     	 bne .L27
 442:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 443:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 817              	 .loc 2 443 0
 818 0038 FB68     	 ldr r3,[r7,#12]
 819 003a 43F48063 	 orr r3,r3,#1024
 820 003e FB60     	 str r3,[r7,#12]
 821 0040 03E0     	 b .L28
 822              	.L27:
 444:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 445:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 446:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 447:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 823              	 .loc 2 447 0
 824 0042 FB68     	 ldr r3,[r7,#12]
 825 0044 23F48063 	 bic r3,r3,#1024
 826 0048 FB60     	 str r3,[r7,#12]
 827              	.L28:
 448:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 449:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 450:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 828              	 .loc 2 450 0
 829 004a 7B68     	 ldr r3,[r7,#4]
 830 004c FA68     	 ldr r2,[r7,#12]
 831 004e 5A61     	 str r2,[r3,#20]
 451:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 832              	 .loc 2 451 0
 833 0050 1437     	 adds r7,r7,#20
 834              	.LCFI74:
 835              	 .cfi_def_cfa_offset 4
 836 0052 BD46     	 mov sp,r7
 837              	.LCFI75:
 838              	 .cfi_def_cfa_register 13
 839              	 
 840 0054 5DF8047B 	 ldr r7,[sp],#4
 841              	.LCFI76:
 842              	 .cfi_restore 7
 843              	 .cfi_def_cfa_offset 0
 844 0058 7047     	 bx lr
 845              	 .cfi_endproc
 846              	.LFE216:
 848 005a 00BF     	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 849              	 .align 2
 850              	 .global XMC_CCU8_SLICE_StopConfig
 851              	 .thumb
 852              	 .thumb_func
 854              	XMC_CCU8_SLICE_StopConfig:
 855              	.LFB217:
 452:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 453:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 454:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 455:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 456:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 457:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 856              	 .loc 2 457 0
 857              	 .cfi_startproc
 858              	 
 859              	 
 860              	 
 861 0000 80B4     	 push {r7}
 862              	.LCFI77:
 863              	 .cfi_def_cfa_offset 4
 864              	 .cfi_offset 7,-4
 865 0002 85B0     	 sub sp,sp,#20
 866              	.LCFI78:
 867              	 .cfi_def_cfa_offset 24
 868 0004 00AF     	 add r7,sp,#0
 869              	.LCFI79:
 870              	 .cfi_def_cfa_register 7
 871 0006 7860     	 str r0,[r7,#4]
 872 0008 0B46     	 mov r3,r1
 873 000a FB70     	 strb r3,[r7,#3]
 874 000c 1346     	 mov r3,r2
 875 000e BB70     	 strb r3,[r7,#2]
 458:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 459:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 460:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 461:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 462:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 463:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 464:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 465:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 876              	 .loc 2 465 0
 877 0010 7B68     	 ldr r3,[r7,#4]
 878 0012 5B68     	 ldr r3,[r3,#4]
 879 0014 FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 467:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 880              	 .loc 2 467 0
 881 0016 FB68     	 ldr r3,[r7,#12]
 882 0018 23F00C03 	 bic r3,r3,#12
 883 001c FB60     	 str r3,[r7,#12]
 468:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 884              	 .loc 2 468 0
 885 001e FB78     	 ldrb r3,[r7,#3]
 886 0020 9B00     	 lsls r3,r3,#2
 887 0022 FA68     	 ldr r2,[r7,#12]
 888 0024 1343     	 orrs r3,r3,r2
 889 0026 FB60     	 str r3,[r7,#12]
 469:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 470:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 890              	 .loc 2 470 0
 891 0028 7B68     	 ldr r3,[r7,#4]
 892 002a FA68     	 ldr r2,[r7,#12]
 893 002c 5A60     	 str r2,[r3,#4]
 471:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 472:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 473:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 894              	 .loc 2 473 0
 895 002e 7B68     	 ldr r3,[r7,#4]
 896 0030 5B69     	 ldr r3,[r3,#20]
 897 0032 BB60     	 str r3,[r7,#8]
 474:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 898              	 .loc 2 474 0
 899 0034 BB68     	 ldr r3,[r7,#8]
 900 0036 23F44073 	 bic r3,r3,#768
 901 003a BB60     	 str r3,[r7,#8]
 475:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 902              	 .loc 2 475 0
 903 003c BB78     	 ldrb r3,[r7,#2]
 904 003e 1B02     	 lsls r3,r3,#8
 905 0040 BA68     	 ldr r2,[r7,#8]
 906 0042 1343     	 orrs r3,r3,r2
 907 0044 BB60     	 str r3,[r7,#8]
 476:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 477:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 908              	 .loc 2 477 0
 909 0046 7B68     	 ldr r3,[r7,#4]
 910 0048 BA68     	 ldr r2,[r7,#8]
 911 004a 5A61     	 str r2,[r3,#20]
 478:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 912              	 .loc 2 478 0
 913 004c 1437     	 adds r7,r7,#20
 914              	.LCFI80:
 915              	 .cfi_def_cfa_offset 4
 916 004e BD46     	 mov sp,r7
 917              	.LCFI81:
 918              	 .cfi_def_cfa_register 13
 919              	 
 920 0050 5DF8047B 	 ldr r7,[sp],#4
 921              	.LCFI82:
 922              	 .cfi_restore 7
 923              	 .cfi_def_cfa_offset 0
 924 0054 7047     	 bx lr
 925              	 .cfi_endproc
 926              	.LFE217:
 928 0056 00BF     	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 929              	 .align 2
 930              	 .global XMC_CCU8_SLICE_LoadConfig
 931              	 .thumb
 932              	 .thumb_func
 934              	XMC_CCU8_SLICE_LoadConfig:
 935              	.LFB218:
 479:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 480:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 481:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 482:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 936              	 .loc 2 482 0
 937              	 .cfi_startproc
 938              	 
 939              	 
 940              	 
 941 0000 80B4     	 push {r7}
 942              	.LCFI83:
 943              	 .cfi_def_cfa_offset 4
 944              	 .cfi_offset 7,-4
 945 0002 85B0     	 sub sp,sp,#20
 946              	.LCFI84:
 947              	 .cfi_def_cfa_offset 24
 948 0004 00AF     	 add r7,sp,#0
 949              	.LCFI85:
 950              	 .cfi_def_cfa_register 7
 951 0006 7860     	 str r0,[r7,#4]
 952 0008 0B46     	 mov r3,r1
 953 000a FB70     	 strb r3,[r7,#3]
 483:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 484:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 485:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 486:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 487:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 954              	 .loc 2 488 0
 955 000c 7B68     	 ldr r3,[r7,#4]
 956 000e 5B68     	 ldr r3,[r3,#4]
 957 0010 FB60     	 str r3,[r7,#12]
 489:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 490:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 491:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 958              	 .loc 2 491 0
 959 0012 FB68     	 ldr r3,[r7,#12]
 960 0014 23F44053 	 bic r3,r3,#12288
 961 0018 FB60     	 str r3,[r7,#12]
 492:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 962              	 .loc 2 492 0
 963 001a FB78     	 ldrb r3,[r7,#3]
 964 001c 1B03     	 lsls r3,r3,#12
 965 001e FA68     	 ldr r2,[r7,#12]
 966 0020 1343     	 orrs r3,r3,r2
 967 0022 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 494:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 968              	 .loc 2 494 0
 969 0024 7B68     	 ldr r3,[r7,#4]
 970 0026 FA68     	 ldr r2,[r7,#12]
 971 0028 5A60     	 str r2,[r3,#4]
 495:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 972              	 .loc 2 495 0
 973 002a 1437     	 adds r7,r7,#20
 974              	.LCFI86:
 975              	 .cfi_def_cfa_offset 4
 976 002c BD46     	 mov sp,r7
 977              	.LCFI87:
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 002e 5DF8047B 	 ldr r7,[sp],#4
 981              	.LCFI88:
 982              	 .cfi_restore 7
 983              	 .cfi_def_cfa_offset 0
 984 0032 7047     	 bx lr
 985              	 .cfi_endproc
 986              	.LFE218:
 988              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 989              	 .align 2
 990              	 .global XMC_CCU8_SLICE_LoadSelector
 991              	 .thumb
 992              	 .thumb_func
 994              	XMC_CCU8_SLICE_LoadSelector:
 995              	.LFB219:
 496:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 497:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 498:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 499:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 996              	 .loc 2 499 0
 997              	 .cfi_startproc
 998              	 
 999              	 
 1000              	 
 1001 0000 80B4     	 push {r7}
 1002              	.LCFI89:
 1003              	 .cfi_def_cfa_offset 4
 1004              	 .cfi_offset 7,-4
 1005 0002 85B0     	 sub sp,sp,#20
 1006              	.LCFI90:
 1007              	 .cfi_def_cfa_offset 24
 1008 0004 00AF     	 add r7,sp,#0
 1009              	.LCFI91:
 1010              	 .cfi_def_cfa_register 7
 1011 0006 7860     	 str r0,[r7,#4]
 1012 0008 0B46     	 mov r3,r1
 1013 000a FB70     	 strb r3,[r7,#3]
 500:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 501:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 502:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 503:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 504:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 505:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1014              	 .loc 2 505 0
 1015 000c 7B68     	 ldr r3,[r7,#4]
 1016 000e 5B69     	 ldr r3,[r3,#20]
 1017 0010 FB60     	 str r3,[r7,#12]
 506:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 507:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 508:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 1018              	 .loc 2 508 0
 1019 0012 FB68     	 ldr r3,[r7,#12]
 1020 0014 23F08003 	 bic r3,r3,#128
 1021 0018 FB60     	 str r3,[r7,#12]
 509:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 1022              	 .loc 2 509 0
 1023 001a FB78     	 ldrb r3,[r7,#3]
 1024 001c DB01     	 lsls r3,r3,#7
 1025 001e FA68     	 ldr r2,[r7,#12]
 1026 0020 1343     	 orrs r3,r3,r2
 1027 0022 FB60     	 str r3,[r7,#12]
 510:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 511:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1028              	 .loc 2 511 0
 1029 0024 7B68     	 ldr r3,[r7,#4]
 1030 0026 FA68     	 ldr r2,[r7,#12]
 1031 0028 5A61     	 str r2,[r3,#20]
 512:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1032              	 .loc 2 512 0
 1033 002a 1437     	 adds r7,r7,#20
 1034              	.LCFI92:
 1035              	 .cfi_def_cfa_offset 4
 1036 002c BD46     	 mov sp,r7
 1037              	.LCFI93:
 1038              	 .cfi_def_cfa_register 13
 1039              	 
 1040 002e 5DF8047B 	 ldr r7,[sp],#4
 1041              	.LCFI94:
 1042              	 .cfi_restore 7
 1043              	 .cfi_def_cfa_offset 0
 1044 0032 7047     	 bx lr
 1045              	 .cfi_endproc
 1046              	.LFE219:
 1048              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 1049              	 .align 2
 1050              	 .global XMC_CCU8_SLICE_ModulationConfig
 1051              	 .thumb
 1052              	 .thumb_func
 1054              	XMC_CCU8_SLICE_ModulationConfig:
 1055              	.LFB220:
 513:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 514:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 515:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 516:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 517:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 518:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 519:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 520:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1056              	 .loc 2 520 0
 1057              	 .cfi_startproc
 1058              	 
 1059              	 
 1060              	 
 1061 0000 80B4     	 push {r7}
 1062              	.LCFI95:
 1063              	 .cfi_def_cfa_offset 4
 1064              	 .cfi_offset 7,-4
 1065 0002 85B0     	 sub sp,sp,#20
 1066              	.LCFI96:
 1067              	 .cfi_def_cfa_offset 24
 1068 0004 00AF     	 add r7,sp,#0
 1069              	.LCFI97:
 1070              	 .cfi_def_cfa_register 7
 1071 0006 7860     	 str r0,[r7,#4]
 1072 0008 0846     	 mov r0,r1
 1073 000a 1146     	 mov r1,r2
 1074 000c 1A46     	 mov r2,r3
 1075 000e 0346     	 mov r3,r0
 1076 0010 FB70     	 strb r3,[r7,#3]
 1077 0012 0B46     	 mov r3,r1
 1078 0014 BB70     	 strb r3,[r7,#2]
 1079 0016 1346     	 mov r3,r2
 1080 0018 7B70     	 strb r3,[r7,#1]
 521:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 522:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 523:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 524:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 525:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 526:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 527:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 528:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 529:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 530:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 531:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 532:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1081              	 .loc 2 532 0
 1082 001a 7B68     	 ldr r3,[r7,#4]
 1083 001c 5B68     	 ldr r3,[r3,#4]
 1084 001e BB60     	 str r3,[r7,#8]
 533:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 534:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 535:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 1085              	 .loc 2 535 0
 1086 0020 BB68     	 ldr r3,[r7,#8]
 1087 0022 23F44023 	 bic r3,r3,#786432
 1088 0026 BB60     	 str r3,[r7,#8]
 536:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 1089              	 .loc 2 536 0
 1090 0028 FB78     	 ldrb r3,[r7,#3]
 1091 002a 9B04     	 lsls r3,r3,#18
 1092 002c BA68     	 ldr r2,[r7,#8]
 1093 002e 1343     	 orrs r3,r3,r2
 1094 0030 BB60     	 str r3,[r7,#8]
 537:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 538:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1095              	 .loc 2 538 0
 1096 0032 7B68     	 ldr r3,[r7,#4]
 1097 0034 BA68     	 ldr r2,[r7,#8]
 1098 0036 5A60     	 str r2,[r3,#4]
 539:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 540:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 1099              	 .loc 2 540 0
 1100 0038 7B68     	 ldr r3,[r7,#4]
 1101 003a 5B69     	 ldr r3,[r3,#20]
 1102 003c FB60     	 str r3,[r7,#12]
 541:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 542:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 543:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 1103              	 .loc 2 543 0
 1104 003e BB78     	 ldrb r3,[r7,#2]
 1105 0040 012B     	 cmp r3,#1
 1106 0042 04D1     	 bne .L33
 544:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 545:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 1107              	 .loc 2 545 0
 1108 0044 FB68     	 ldr r3,[r7,#12]
 1109 0046 43F08073 	 orr r3,r3,#16777216
 1110 004a FB60     	 str r3,[r7,#12]
 1111 004c 03E0     	 b .L34
 1112              	.L33:
 546:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 547:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 548:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 549:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1113              	 .loc 2 549 0
 1114 004e FB68     	 ldr r3,[r7,#12]
 1115 0050 23F08073 	 bic r3,r3,#16777216
 1116 0054 FB60     	 str r3,[r7,#12]
 1117              	.L34:
 550:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 551:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 552:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 553:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1118              	 .loc 2 553 0
 1119 0056 3B7E     	 ldrb r3,[r7,#24]
 1120 0058 002B     	 cmp r3,#0
 1121 005a 04D0     	 beq .L35
 554:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 555:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1122              	 .loc 2 555 0
 1123 005c FB68     	 ldr r3,[r7,#12]
 1124 005e 43F40003 	 orr r3,r3,#8388608
 1125 0062 FB60     	 str r3,[r7,#12]
 1126 0064 03E0     	 b .L36
 1127              	.L35:
 556:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 557:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 558:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 559:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1128              	 .loc 2 559 0
 1129 0066 FB68     	 ldr r3,[r7,#12]
 1130 0068 23F40003 	 bic r3,r3,#8388608
 1131 006c FB60     	 str r3,[r7,#12]
 1132              	.L36:
 560:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 561:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 562:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 563:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1133              	 .loc 2 563 0
 1134 006e FB68     	 ldr r3,[r7,#12]
 1135 0070 23F0C053 	 bic r3,r3,#402653184
 1136 0074 FB60     	 str r3,[r7,#12]
 564:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1137              	 .loc 2 564 0
 1138 0076 7B78     	 ldrb r3,[r7,#1]
 1139 0078 DB06     	 lsls r3,r3,#27
 1140 007a FA68     	 ldr r2,[r7,#12]
 1141 007c 1343     	 orrs r3,r3,r2
 1142 007e FB60     	 str r3,[r7,#12]
 565:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 566:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1143              	 .loc 2 566 0
 1144 0080 7B68     	 ldr r3,[r7,#4]
 1145 0082 FA68     	 ldr r2,[r7,#12]
 1146 0084 5A61     	 str r2,[r3,#20]
 567:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1147              	 .loc 2 567 0
 1148 0086 1437     	 adds r7,r7,#20
 1149              	.LCFI98:
 1150              	 .cfi_def_cfa_offset 4
 1151 0088 BD46     	 mov sp,r7
 1152              	.LCFI99:
 1153              	 .cfi_def_cfa_register 13
 1154              	 
 1155 008a 5DF8047B 	 ldr r7,[sp],#4
 1156              	.LCFI100:
 1157              	 .cfi_restore 7
 1158              	 .cfi_def_cfa_offset 0
 1159 008e 7047     	 bx lr
 1160              	 .cfi_endproc
 1161              	.LFE220:
 1163              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1164              	 .align 2
 1165              	 .global XMC_CCU8_SLICE_CountConfig
 1166              	 .thumb
 1167              	 .thumb_func
 1169              	XMC_CCU8_SLICE_CountConfig:
 1170              	.LFB221:
 568:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 569:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 570:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 571:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1171              	 .loc 2 571 0
 1172              	 .cfi_startproc
 1173              	 
 1174              	 
 1175              	 
 1176 0000 80B4     	 push {r7}
 1177              	.LCFI101:
 1178              	 .cfi_def_cfa_offset 4
 1179              	 .cfi_offset 7,-4
 1180 0002 85B0     	 sub sp,sp,#20
 1181              	.LCFI102:
 1182              	 .cfi_def_cfa_offset 24
 1183 0004 00AF     	 add r7,sp,#0
 1184              	.LCFI103:
 1185              	 .cfi_def_cfa_register 7
 1186 0006 7860     	 str r0,[r7,#4]
 1187 0008 0B46     	 mov r3,r1
 1188 000a FB70     	 strb r3,[r7,#3]
 572:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 573:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 574:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 575:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 576:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 577:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1189              	 .loc 2 577 0
 1190 000c 7B68     	 ldr r3,[r7,#4]
 1191 000e 5B68     	 ldr r3,[r3,#4]
 1192 0010 FB60     	 str r3,[r7,#12]
 578:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 579:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 580:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1193              	 .loc 2 580 0
 1194 0012 FB68     	 ldr r3,[r7,#12]
 1195 0014 23F44043 	 bic r3,r3,#49152
 1196 0018 FB60     	 str r3,[r7,#12]
 581:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1197              	 .loc 2 581 0
 1198 001a FB78     	 ldrb r3,[r7,#3]
 1199 001c 9B03     	 lsls r3,r3,#14
 1200 001e FA68     	 ldr r2,[r7,#12]
 1201 0020 1343     	 orrs r3,r3,r2
 1202 0022 FB60     	 str r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 583:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1203              	 .loc 2 583 0
 1204 0024 7B68     	 ldr r3,[r7,#4]
 1205 0026 FA68     	 ldr r2,[r7,#12]
 1206 0028 5A60     	 str r2,[r3,#4]
 584:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1207              	 .loc 2 584 0
 1208 002a 1437     	 adds r7,r7,#20
 1209              	.LCFI104:
 1210              	 .cfi_def_cfa_offset 4
 1211 002c BD46     	 mov sp,r7
 1212              	.LCFI105:
 1213              	 .cfi_def_cfa_register 13
 1214              	 
 1215 002e 5DF8047B 	 ldr r7,[sp],#4
 1216              	.LCFI106:
 1217              	 .cfi_restore 7
 1218              	 .cfi_def_cfa_offset 0
 1219 0032 7047     	 bx lr
 1220              	 .cfi_endproc
 1221              	.LFE221:
 1223              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1224              	 .align 2
 1225              	 .global XMC_CCU8_SLICE_GateConfig
 1226              	 .thumb
 1227              	 .thumb_func
 1229              	XMC_CCU8_SLICE_GateConfig:
 1230              	.LFB222:
 585:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 586:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 587:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 588:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1231              	 .loc 2 588 0
 1232              	 .cfi_startproc
 1233              	 
 1234              	 
 1235              	 
 1236 0000 80B4     	 push {r7}
 1237              	.LCFI107:
 1238              	 .cfi_def_cfa_offset 4
 1239              	 .cfi_offset 7,-4
 1240 0002 85B0     	 sub sp,sp,#20
 1241              	.LCFI108:
 1242              	 .cfi_def_cfa_offset 24
 1243 0004 00AF     	 add r7,sp,#0
 1244              	.LCFI109:
 1245              	 .cfi_def_cfa_register 7
 1246 0006 7860     	 str r0,[r7,#4]
 1247 0008 0B46     	 mov r3,r1
 1248 000a FB70     	 strb r3,[r7,#3]
 589:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 590:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 591:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 592:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 593:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 594:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1249              	 .loc 2 594 0
 1250 000c 7B68     	 ldr r3,[r7,#4]
 1251 000e 5B68     	 ldr r3,[r3,#4]
 1252 0010 FB60     	 str r3,[r7,#12]
 595:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 596:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 597:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1253              	 .loc 2 597 0
 1254 0012 FB68     	 ldr r3,[r7,#12]
 1255 0014 23F44073 	 bic r3,r3,#768
 1256 0018 FB60     	 str r3,[r7,#12]
 598:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1257              	 .loc 2 598 0
 1258 001a FB78     	 ldrb r3,[r7,#3]
 1259 001c 1B02     	 lsls r3,r3,#8
 1260 001e FA68     	 ldr r2,[r7,#12]
 1261 0020 1343     	 orrs r3,r3,r2
 1262 0022 FB60     	 str r3,[r7,#12]
 599:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 600:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1263              	 .loc 2 600 0
 1264 0024 7B68     	 ldr r3,[r7,#4]
 1265 0026 FA68     	 ldr r2,[r7,#12]
 1266 0028 5A60     	 str r2,[r3,#4]
 601:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1267              	 .loc 2 601 0
 1268 002a 1437     	 adds r7,r7,#20
 1269              	.LCFI110:
 1270              	 .cfi_def_cfa_offset 4
 1271 002c BD46     	 mov sp,r7
 1272              	.LCFI111:
 1273              	 .cfi_def_cfa_register 13
 1274              	 
 1275 002e 5DF8047B 	 ldr r7,[sp],#4
 1276              	.LCFI112:
 1277              	 .cfi_restore 7
 1278              	 .cfi_def_cfa_offset 0
 1279 0032 7047     	 bx lr
 1280              	 .cfi_endproc
 1281              	.LFE222:
 1283              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1284              	 .align 2
 1285              	 .global XMC_CCU8_SLICE_Capture0Config
 1286              	 .thumb
 1287              	 .thumb_func
 1289              	XMC_CCU8_SLICE_Capture0Config:
 1290              	.LFB223:
 602:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 603:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 604:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 605:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1291              	 .loc 2 605 0
 1292              	 .cfi_startproc
 1293              	 
 1294              	 
 1295              	 
 1296 0000 80B4     	 push {r7}
 1297              	.LCFI113:
 1298              	 .cfi_def_cfa_offset 4
 1299              	 .cfi_offset 7,-4
 1300 0002 85B0     	 sub sp,sp,#20
 1301              	.LCFI114:
 1302              	 .cfi_def_cfa_offset 24
 1303 0004 00AF     	 add r7,sp,#0
 1304              	.LCFI115:
 1305              	 .cfi_def_cfa_register 7
 1306 0006 7860     	 str r0,[r7,#4]
 1307 0008 0B46     	 mov r3,r1
 1308 000a FB70     	 strb r3,[r7,#3]
 606:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 607:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 608:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 609:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 610:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 611:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1309              	 .loc 2 611 0
 1310 000c 7B68     	 ldr r3,[r7,#4]
 1311 000e 5B68     	 ldr r3,[r3,#4]
 1312 0010 FB60     	 str r3,[r7,#12]
 612:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 613:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 614:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1313              	 .loc 2 614 0
 1314 0012 FB68     	 ldr r3,[r7,#12]
 1315 0014 23F03003 	 bic r3,r3,#48
 1316 0018 FB60     	 str r3,[r7,#12]
 615:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1317              	 .loc 2 615 0
 1318 001a FB78     	 ldrb r3,[r7,#3]
 1319 001c 1B01     	 lsls r3,r3,#4
 1320 001e FA68     	 ldr r2,[r7,#12]
 1321 0020 1343     	 orrs r3,r3,r2
 1322 0022 FB60     	 str r3,[r7,#12]
 616:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 617:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1323              	 .loc 2 617 0
 1324 0024 7B68     	 ldr r3,[r7,#4]
 1325 0026 FA68     	 ldr r2,[r7,#12]
 1326 0028 5A60     	 str r2,[r3,#4]
 618:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1327              	 .loc 2 618 0
 1328 002a 1437     	 adds r7,r7,#20
 1329              	.LCFI116:
 1330              	 .cfi_def_cfa_offset 4
 1331 002c BD46     	 mov sp,r7
 1332              	.LCFI117:
 1333              	 .cfi_def_cfa_register 13
 1334              	 
 1335 002e 5DF8047B 	 ldr r7,[sp],#4
 1336              	.LCFI118:
 1337              	 .cfi_restore 7
 1338              	 .cfi_def_cfa_offset 0
 1339 0032 7047     	 bx lr
 1340              	 .cfi_endproc
 1341              	.LFE223:
 1343              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1344              	 .align 2
 1345              	 .global XMC_CCU8_SLICE_Capture1Config
 1346              	 .thumb
 1347              	 .thumb_func
 1349              	XMC_CCU8_SLICE_Capture1Config:
 1350              	.LFB224:
 619:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 620:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 621:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 622:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1351              	 .loc 2 622 0
 1352              	 .cfi_startproc
 1353              	 
 1354              	 
 1355              	 
 1356 0000 80B4     	 push {r7}
 1357              	.LCFI119:
 1358              	 .cfi_def_cfa_offset 4
 1359              	 .cfi_offset 7,-4
 1360 0002 85B0     	 sub sp,sp,#20
 1361              	.LCFI120:
 1362              	 .cfi_def_cfa_offset 24
 1363 0004 00AF     	 add r7,sp,#0
 1364              	.LCFI121:
 1365              	 .cfi_def_cfa_register 7
 1366 0006 7860     	 str r0,[r7,#4]
 1367 0008 0B46     	 mov r3,r1
 1368 000a FB70     	 strb r3,[r7,#3]
 623:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 624:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 625:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 626:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 627:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 628:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 629:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1369              	 .loc 2 629 0
 1370 000c 7B68     	 ldr r3,[r7,#4]
 1371 000e 5B68     	 ldr r3,[r3,#4]
 1372 0010 FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 632:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1373              	 .loc 2 632 0
 1374 0012 FB68     	 ldr r3,[r7,#12]
 1375 0014 23F0C003 	 bic r3,r3,#192
 1376 0018 FB60     	 str r3,[r7,#12]
 633:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1377              	 .loc 2 633 0
 1378 001a FB78     	 ldrb r3,[r7,#3]
 1379 001c 9B01     	 lsls r3,r3,#6
 1380 001e FA68     	 ldr r2,[r7,#12]
 1381 0020 1343     	 orrs r3,r3,r2
 1382 0022 FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 635:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1383              	 .loc 2 635 0
 1384 0024 7B68     	 ldr r3,[r7,#4]
 1385 0026 FA68     	 ldr r2,[r7,#12]
 1386 0028 5A60     	 str r2,[r3,#4]
 636:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1387              	 .loc 2 636 0
 1388 002a 1437     	 adds r7,r7,#20
 1389              	.LCFI122:
 1390              	 .cfi_def_cfa_offset 4
 1391 002c BD46     	 mov sp,r7
 1392              	.LCFI123:
 1393              	 .cfi_def_cfa_register 13
 1394              	 
 1395 002e 5DF8047B 	 ldr r7,[sp],#4
 1396              	.LCFI124:
 1397              	 .cfi_restore 7
 1398              	 .cfi_def_cfa_offset 0
 1399 0032 7047     	 bx lr
 1400              	 .cfi_endproc
 1401              	.LFE224:
 1403              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1404              	 .align 2
 1405              	 .global XMC_CCU8_SLICE_DirectionConfig
 1406              	 .thumb
 1407              	 .thumb_func
 1409              	XMC_CCU8_SLICE_DirectionConfig:
 1410              	.LFB225:
 637:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 638:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 639:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 640:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1411              	 .loc 2 640 0
 1412              	 .cfi_startproc
 1413              	 
 1414              	 
 1415              	 
 1416 0000 80B4     	 push {r7}
 1417              	.LCFI125:
 1418              	 .cfi_def_cfa_offset 4
 1419              	 .cfi_offset 7,-4
 1420 0002 85B0     	 sub sp,sp,#20
 1421              	.LCFI126:
 1422              	 .cfi_def_cfa_offset 24
 1423 0004 00AF     	 add r7,sp,#0
 1424              	.LCFI127:
 1425              	 .cfi_def_cfa_register 7
 1426 0006 7860     	 str r0,[r7,#4]
 1427 0008 0B46     	 mov r3,r1
 1428 000a FB70     	 strb r3,[r7,#3]
 641:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 642:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 643:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 644:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 645:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 646:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1429              	 .loc 2 646 0
 1430 000c 7B68     	 ldr r3,[r7,#4]
 1431 000e 5B68     	 ldr r3,[r3,#4]
 1432 0010 FB60     	 str r3,[r7,#12]
 647:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 648:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 649:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1433              	 .loc 2 649 0
 1434 0012 FB68     	 ldr r3,[r7,#12]
 1435 0014 23F44063 	 bic r3,r3,#3072
 1436 0018 FB60     	 str r3,[r7,#12]
 650:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1437              	 .loc 2 650 0
 1438 001a FB78     	 ldrb r3,[r7,#3]
 1439 001c 9B02     	 lsls r3,r3,#10
 1440 001e FA68     	 ldr r2,[r7,#12]
 1441 0020 1343     	 orrs r3,r3,r2
 1442 0022 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1443              	 .loc 2 652 0
 1444 0024 7B68     	 ldr r3,[r7,#4]
 1445 0026 FA68     	 ldr r2,[r7,#12]
 1446 0028 5A60     	 str r2,[r3,#4]
 653:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1447              	 .loc 2 653 0
 1448 002a 1437     	 adds r7,r7,#20
 1449              	.LCFI128:
 1450              	 .cfi_def_cfa_offset 4
 1451 002c BD46     	 mov sp,r7
 1452              	.LCFI129:
 1453              	 .cfi_def_cfa_register 13
 1454              	 
 1455 002e 5DF8047B 	 ldr r7,[sp],#4
 1456              	.LCFI130:
 1457              	 .cfi_restore 7
 1458              	 .cfi_def_cfa_offset 0
 1459 0032 7047     	 bx lr
 1460              	 .cfi_endproc
 1461              	.LFE225:
 1463              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1464              	 .align 2
 1465              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1466              	 .thumb
 1467              	 .thumb_func
 1469              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1470              	.LFB226:
 654:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 655:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 656:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 657:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1471              	 .loc 2 657 0
 1472              	 .cfi_startproc
 1473              	 
 1474              	 
 1475              	 
 1476 0000 80B4     	 push {r7}
 1477              	.LCFI131:
 1478              	 .cfi_def_cfa_offset 4
 1479              	 .cfi_offset 7,-4
 1480 0002 85B0     	 sub sp,sp,#20
 1481              	.LCFI132:
 1482              	 .cfi_def_cfa_offset 24
 1483 0004 00AF     	 add r7,sp,#0
 1484              	.LCFI133:
 1485              	 .cfi_def_cfa_register 7
 1486 0006 7860     	 str r0,[r7,#4]
 658:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 659:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 660:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 661:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 662:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1487              	 .loc 2 662 0
 1488 0008 7B68     	 ldr r3,[r7,#4]
 1489 000a 5B68     	 ldr r3,[r3,#4]
 1490 000c FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 664:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 665:../Libraries/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 666:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1491              	 .loc 2 666 0
 1492 000e FB68     	 ldr r3,[r7,#12]
 1493 0010 23F48033 	 bic r3,r3,#65536
 1494 0014 FB60     	 str r3,[r7,#12]
 667:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1495              	 .loc 2 667 0
 1496 0016 FB68     	 ldr r3,[r7,#12]
 1497 0018 43F48033 	 orr r3,r3,#65536
 1498 001c FB60     	 str r3,[r7,#12]
 668:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 669:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1499              	 .loc 2 669 0
 1500 001e 7B68     	 ldr r3,[r7,#4]
 1501 0020 FA68     	 ldr r2,[r7,#12]
 1502 0022 5A60     	 str r2,[r3,#4]
 670:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1503              	 .loc 2 670 0
 1504 0024 1437     	 adds r7,r7,#20
 1505              	.LCFI134:
 1506              	 .cfi_def_cfa_offset 4
 1507 0026 BD46     	 mov sp,r7
 1508              	.LCFI135:
 1509              	 .cfi_def_cfa_register 13
 1510              	 
 1511 0028 5DF8047B 	 ldr r7,[sp],#4
 1512              	.LCFI136:
 1513              	 .cfi_restore 7
 1514              	 .cfi_def_cfa_offset 0
 1515 002c 7047     	 bx lr
 1516              	 .cfi_endproc
 1517              	.LFE226:
 1519 002e 00BF     	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1520              	 .align 2
 1521              	 .global XMC_CCU8_SLICE_TrapConfig
 1522              	 .thumb
 1523              	 .thumb_func
 1525              	XMC_CCU8_SLICE_TrapConfig:
 1526              	.LFB227:
 671:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 672:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 673:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 674:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 675:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 676:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1527              	 .loc 2 676 0
 1528              	 .cfi_startproc
 1529              	 
 1530              	 
 1531              	 
 1532 0000 80B4     	 push {r7}
 1533              	.LCFI137:
 1534              	 .cfi_def_cfa_offset 4
 1535              	 .cfi_offset 7,-4
 1536 0002 85B0     	 sub sp,sp,#20
 1537              	.LCFI138:
 1538              	 .cfi_def_cfa_offset 24
 1539 0004 00AF     	 add r7,sp,#0
 1540              	.LCFI139:
 1541              	 .cfi_def_cfa_register 7
 1542 0006 7860     	 str r0,[r7,#4]
 1543 0008 0B46     	 mov r3,r1
 1544 000a FB70     	 strb r3,[r7,#3]
 1545 000c 1346     	 mov r3,r2
 1546 000e BB70     	 strb r3,[r7,#2]
 677:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 678:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 679:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 680:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 681:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 682:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 683:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 684:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1547              	 .loc 2 684 0
 1548 0010 7B68     	 ldr r3,[r7,#4]
 1549 0012 5B68     	 ldr r3,[r3,#4]
 1550 0014 BB60     	 str r3,[r7,#8]
 685:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 686:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 687:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1551              	 .loc 2 687 0
 1552 0016 BB68     	 ldr r3,[r7,#8]
 1553 0018 23F40033 	 bic r3,r3,#131072
 1554 001c BB60     	 str r3,[r7,#8]
 688:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1555              	 .loc 2 688 0
 1556 001e BB68     	 ldr r3,[r7,#8]
 1557 0020 43F40033 	 orr r3,r3,#131072
 1558 0024 BB60     	 str r3,[r7,#8]
 689:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 690:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1559              	 .loc 2 690 0
 1560 0026 7B68     	 ldr r3,[r7,#4]
 1561 0028 BA68     	 ldr r2,[r7,#8]
 1562 002a 5A60     	 str r2,[r3,#4]
 691:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 692:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1563              	 .loc 2 692 0
 1564 002c 7B68     	 ldr r3,[r7,#4]
 1565 002e 5B69     	 ldr r3,[r3,#20]
 1566 0030 FB60     	 str r3,[r7,#12]
 693:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 694:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 695:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1567              	 .loc 2 695 0
 1568 0032 BB78     	 ldrb r3,[r7,#2]
 1569 0034 002B     	 cmp r3,#0
 1570 0036 04D0     	 beq .L44
 696:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 697:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1571              	 .loc 2 697 0
 1572 0038 FB68     	 ldr r3,[r7,#12]
 1573 003a 43F40013 	 orr r3,r3,#2097152
 1574 003e FB60     	 str r3,[r7,#12]
 1575 0040 03E0     	 b .L45
 1576              	.L44:
 698:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 699:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 700:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 701:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1577              	 .loc 2 701 0
 1578 0042 FB68     	 ldr r3,[r7,#12]
 1579 0044 23F40013 	 bic r3,r3,#2097152
 1580 0048 FB60     	 str r3,[r7,#12]
 1581              	.L45:
 702:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 703:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 704:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 705:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1582              	 .loc 2 705 0
 1583 004a FB78     	 ldrb r3,[r7,#3]
 1584 004c 012B     	 cmp r3,#1
 1585 004e 04D1     	 bne .L46
 706:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 707:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1586              	 .loc 2 707 0
 1587 0050 FB68     	 ldr r3,[r7,#12]
 1588 0052 43F48003 	 orr r3,r3,#4194304
 1589 0056 FB60     	 str r3,[r7,#12]
 1590 0058 03E0     	 b .L47
 1591              	.L46:
 708:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 709:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 710:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 711:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1592              	 .loc 2 711 0
 1593 005a FB68     	 ldr r3,[r7,#12]
 1594 005c 23F48003 	 bic r3,r3,#4194304
 1595 0060 FB60     	 str r3,[r7,#12]
 1596              	.L47:
 712:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 713:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 714:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1597              	 .loc 2 714 0
 1598 0062 7B68     	 ldr r3,[r7,#4]
 1599 0064 FA68     	 ldr r2,[r7,#12]
 1600 0066 5A61     	 str r2,[r3,#20]
 715:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1601              	 .loc 2 715 0
 1602 0068 1437     	 adds r7,r7,#20
 1603              	.LCFI140:
 1604              	 .cfi_def_cfa_offset 4
 1605 006a BD46     	 mov sp,r7
 1606              	.LCFI141:
 1607              	 .cfi_def_cfa_register 13
 1608              	 
 1609 006c 5DF8047B 	 ldr r7,[sp],#4
 1610              	.LCFI142:
 1611              	 .cfi_restore 7
 1612              	 .cfi_def_cfa_offset 0
 1613 0070 7047     	 bx lr
 1614              	 .cfi_endproc
 1615              	.LFE227:
 1617 0072 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1618              	 .align 2
 1619              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1620              	 .thumb
 1621              	 .thumb_func
 1623              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1624              	.LFB228:
 716:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 717:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 718:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 719:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 720:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 721:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1625              	 .loc 2 721 0
 1626              	 .cfi_startproc
 1627              	 
 1628              	 
 1629              	 
 1630 0000 80B4     	 push {r7}
 1631              	.LCFI143:
 1632              	 .cfi_def_cfa_offset 4
 1633              	 .cfi_offset 7,-4
 1634 0002 87B0     	 sub sp,sp,#28
 1635              	.LCFI144:
 1636              	 .cfi_def_cfa_offset 32
 1637 0004 00AF     	 add r7,sp,#0
 1638              	.LCFI145:
 1639              	 .cfi_def_cfa_register 7
 1640 0006 F860     	 str r0,[r7,#12]
 1641 0008 B960     	 str r1,[r7,#8]
 1642 000a 7A60     	 str r2,[r7,#4]
 722:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 723:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 724:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 725:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 726:../Libraries/XMCLib/src/xmc_ccu8.c **** 		     XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 727:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 728:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 729:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 730:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 731:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 732:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 733:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 734:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 735:../Libraries/XMCLib/src/xmc_ccu8.c **** 		      XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 736:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 737:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 738:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 739:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 740:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 741:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 742:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 743:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 744:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 745:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 746:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 747:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 748:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 749:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 750:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 751:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 752:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 753:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 754:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 755:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 756:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 757:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 758:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 759:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 760:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 761:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 762:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 763:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 764:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 765:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 766:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 767:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 768:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 769:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 770:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 771:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins; 
 772:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 773:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 774:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 775:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 776:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 777:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 778:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 779:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 780:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 781:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 782:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;  
 783:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 784:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1643              	 .loc 2 784 0
 1644 000c FB68     	 ldr r3,[r7,#12]
 1645 000e 1B68     	 ldr r3,[r3]
 1646 0010 7B61     	 str r3,[r7,#20]
 785:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 786:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 787:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1647              	 .loc 2 787 0
 1648 0012 7B69     	 ldr r3,[r7,#20]
 1649 0014 23F44023 	 bic r3,r3,#786432
 1650 0018 7B61     	 str r3,[r7,#20]
 788:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1651              	 .loc 2 788 0
 1652 001a BB68     	 ldr r3,[r7,#8]
 1653 001c 5B78     	 ldrb r3,[r3,#1]
 1654 001e 9B04     	 lsls r3,r3,#18
 1655 0020 7A69     	 ldr r2,[r7,#20]
 1656 0022 1343     	 orrs r3,r3,r2
 1657 0024 7B61     	 str r3,[r7,#20]
 789:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 790:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 791:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1658              	 .loc 2 791 0
 1659 0026 7B69     	 ldr r3,[r7,#20]
 1660 0028 23F44013 	 bic r3,r3,#3145728
 1661 002c 7B61     	 str r3,[r7,#20]
 792:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1662              	 .loc 2 792 0
 1663 002e 7B68     	 ldr r3,[r7,#4]
 1664 0030 5B78     	 ldrb r3,[r3,#1]
 1665 0032 1B05     	 lsls r3,r3,#20
 1666 0034 7A69     	 ldr r2,[r7,#20]
 1667 0036 1343     	 orrs r3,r3,r2
 1668 0038 7B61     	 str r3,[r7,#20]
 793:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 794:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 795:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1669              	 .loc 2 795 0
 1670 003a 7B69     	 ldr r3,[r7,#20]
 1671 003c 23F40003 	 bic r3,r3,#8388608
 1672 0040 7B61     	 str r3,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1673              	 .loc 2 796 0
 1674 0042 BB68     	 ldr r3,[r7,#8]
 1675 0044 9B78     	 ldrb r3,[r3,#2]
 1676 0046 DB05     	 lsls r3,r3,#23
 1677 0048 7A69     	 ldr r2,[r7,#20]
 1678 004a 1343     	 orrs r3,r3,r2
 1679 004c 7B61     	 str r3,[r7,#20]
 797:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 798:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 799:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1680              	 .loc 2 799 0
 1681 004e 7B69     	 ldr r3,[r7,#20]
 1682 0050 23F08073 	 bic r3,r3,#16777216
 1683 0054 7B61     	 str r3,[r7,#20]
 800:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1684              	 .loc 2 800 0
 1685 0056 7B68     	 ldr r3,[r7,#4]
 1686 0058 9B78     	 ldrb r3,[r3,#2]
 1687 005a 1B06     	 lsls r3,r3,#24
 1688 005c 7A69     	 ldr r2,[r7,#20]
 1689 005e 1343     	 orrs r3,r3,r2
 1690 0060 7B61     	 str r3,[r7,#20]
 801:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 802:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 803:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1691              	 .loc 2 803 0
 1692 0062 7B69     	 ldr r3,[r7,#20]
 1693 0064 23F0C053 	 bic r3,r3,#402653184
 1694 0068 7B61     	 str r3,[r7,#20]
 804:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1695              	 .loc 2 804 0
 1696 006a BB68     	 ldr r3,[r7,#8]
 1697 006c DB78     	 ldrb r3,[r3,#3]
 1698 006e DB06     	 lsls r3,r3,#27
 1699 0070 7A69     	 ldr r2,[r7,#20]
 1700 0072 1343     	 orrs r3,r3,r2
 1701 0074 7B61     	 str r3,[r7,#20]
 805:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 806:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 807:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1702              	 .loc 2 807 0
 1703 0076 7B69     	 ldr r3,[r7,#20]
 1704 0078 23F0C043 	 bic r3,r3,#1610612736
 1705 007c 7B61     	 str r3,[r7,#20]
 808:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1706              	 .loc 2 808 0
 1707 007e 7B68     	 ldr r3,[r7,#4]
 1708 0080 DB78     	 ldrb r3,[r3,#3]
 1709 0082 5B07     	 lsls r3,r3,#29
 1710 0084 7A69     	 ldr r2,[r7,#20]
 1711 0086 1343     	 orrs r3,r3,r2
 1712 0088 7B61     	 str r3,[r7,#20]
 809:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 810:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 811:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1713              	 .loc 2 811 0
 1714 008a 7B69     	 ldr r3,[r7,#20]
 1715 008c 23F0F003 	 bic r3,r3,#240
 1716 0090 7B61     	 str r3,[r7,#20]
 812:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1717              	 .loc 2 812 0
 1718 0092 BB68     	 ldr r3,[r7,#8]
 1719 0094 1B78     	 ldrb r3,[r3]
 1720 0096 1B01     	 lsls r3,r3,#4
 1721 0098 7A69     	 ldr r2,[r7,#20]
 1722 009a 1343     	 orrs r3,r3,r2
 1723 009c 7B61     	 str r3,[r7,#20]
 813:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 814:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 815:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1724              	 .loc 2 815 0
 1725 009e 7B69     	 ldr r3,[r7,#20]
 1726 00a0 23F47063 	 bic r3,r3,#3840
 1727 00a4 7B61     	 str r3,[r7,#20]
 816:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1728              	 .loc 2 816 0
 1729 00a6 7B68     	 ldr r3,[r7,#4]
 1730 00a8 1B78     	 ldrb r3,[r3]
 1731 00aa 1B02     	 lsls r3,r3,#8
 1732 00ac 7A69     	 ldr r2,[r7,#20]
 1733 00ae 1343     	 orrs r3,r3,r2
 1734 00b0 7B61     	 str r3,[r7,#20]
 817:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 818:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1735              	 .loc 2 818 0
 1736 00b2 FB68     	 ldr r3,[r7,#12]
 1737 00b4 7A69     	 ldr r2,[r7,#20]
 1738 00b6 1A60     	 str r2,[r3]
 819:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 820:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1739              	 .loc 2 820 0
 1740 00b8 1C37     	 adds r7,r7,#28
 1741              	.LCFI146:
 1742              	 .cfi_def_cfa_offset 4
 1743 00ba BD46     	 mov sp,r7
 1744              	.LCFI147:
 1745              	 .cfi_def_cfa_register 13
 1746              	 
 1747 00bc 5DF8047B 	 ldr r7,[sp],#4
 1748              	.LCFI148:
 1749              	 .cfi_restore 7
 1750              	 .cfi_def_cfa_offset 0
 1751 00c0 7047     	 bx lr
 1752              	 .cfi_endproc
 1753              	.LFE228:
 1755 00c2 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1756              	 .align 2
 1757              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1758              	 .thumb
 1759              	 .thumb_func
 1761              	XMC_CCU8_SLICE_ConfigureEvent:
 1762              	.LFB229:
 821:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 822:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 823:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 824:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 825:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 826:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1763              	 .loc 2 826 0
 1764              	 .cfi_startproc
 1765              	 
 1766              	 
 1767              	 
 1768 0000 80B4     	 push {r7}
 1769              	.LCFI149:
 1770              	 .cfi_def_cfa_offset 4
 1771              	 .cfi_offset 7,-4
 1772 0002 89B0     	 sub sp,sp,#36
 1773              	.LCFI150:
 1774              	 .cfi_def_cfa_offset 40
 1775 0004 00AF     	 add r7,sp,#0
 1776              	.LCFI151:
 1777              	 .cfi_def_cfa_register 7
 1778 0006 F860     	 str r0,[r7,#12]
 1779 0008 0B46     	 mov r3,r1
 1780 000a 7A60     	 str r2,[r7,#4]
 1781 000c FB72     	 strb r3,[r7,#11]
 827:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 828:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 829:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 830:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 831:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 832:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 833:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 834:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 835:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 836:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 837:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 838:../Libraries/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 839:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 840:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 841:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 842:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 843:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1782              	 .loc 2 843 0
 1783 000e FB7A     	 ldrb r3,[r7,#11]
 1784 0010 013B     	 subs r3,r3,#1
 1785 0012 FB77     	 strb r3,[r7,#31]
 844:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 845:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 846:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 847:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 849:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 850:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 851:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 852:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 853:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 854:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 855:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 856:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 857:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 858:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 859:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 860:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 861:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 862:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 863:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 864:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 865:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 866:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 867:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 868:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 869:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 870:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 871:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 872:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 873:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 874:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 875:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1786              	 .loc 2 875 0
 1787 0014 FB68     	 ldr r3,[r7,#12]
 1788 0016 1B68     	 ldr r3,[r3]
 1789 0018 BB61     	 str r3,[r7,#24]
 876:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 877:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 878:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1790              	 .loc 2 878 0
 1791 001a FB7F     	 ldrb r3,[r7,#31]
 1792 001c 5B00     	 lsls r3,r3,#1
 1793 001e DBB2     	 uxtb r3,r3
 1794 0020 1033     	 adds r3,r3,#16
 1795 0022 FB75     	 strb r3,[r7,#23]
 879:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1796              	 .loc 2 879 0
 1797 0024 FB7D     	 ldrb r3,[r7,#23]
 1798 0026 0322     	 movs r2,#3
 1799 0028 02FA03F3 	 lsl r3,r2,r3
 1800 002c DB43     	 mvns r3,r3
 1801 002e BA69     	 ldr r2,[r7,#24]
 1802 0030 1340     	 ands r3,r3,r2
 1803 0032 BB61     	 str r3,[r7,#24]
 880:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 1804              	 .loc 2 880 0
 1805 0034 7B68     	 ldr r3,[r7,#4]
 1806 0036 5B78     	 ldrb r3,[r3,#1]
 1807 0038 1A46     	 mov r2,r3
 1808 003a FB7D     	 ldrb r3,[r7,#23]
 1809 003c 02FA03F3 	 lsl r3,r2,r3
 1810 0040 BA69     	 ldr r2,[r7,#24]
 1811 0042 1343     	 orrs r3,r3,r2
 1812 0044 BB61     	 str r3,[r7,#24]
 881:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 882:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 883:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 1813              	 .loc 2 883 0
 1814 0046 FB7F     	 ldrb r3,[r7,#31]
 1815 0048 1633     	 adds r3,r3,#22
 1816 004a FB75     	 strb r3,[r7,#23]
 884:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1817              	 .loc 2 884 0
 1818 004c FB7D     	 ldrb r3,[r7,#23]
 1819 004e 0122     	 movs r2,#1
 1820 0050 02FA03F3 	 lsl r3,r2,r3
 1821 0054 DB43     	 mvns r3,r3
 1822 0056 BA69     	 ldr r2,[r7,#24]
 1823 0058 1340     	 ands r3,r3,r2
 1824 005a BB61     	 str r3,[r7,#24]
 885:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 1825              	 .loc 2 885 0
 1826 005c 7B68     	 ldr r3,[r7,#4]
 1827 005e 9B78     	 ldrb r3,[r3,#2]
 1828 0060 1A46     	 mov r2,r3
 1829 0062 FB7D     	 ldrb r3,[r7,#23]
 1830 0064 02FA03F3 	 lsl r3,r2,r3
 1831 0068 BA69     	 ldr r2,[r7,#24]
 1832 006a 1343     	 orrs r3,r3,r2
 1833 006c BB61     	 str r3,[r7,#24]
 886:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 887:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 888:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1834              	 .loc 2 888 0
 1835 006e FB7F     	 ldrb r3,[r7,#31]
 1836 0070 5B00     	 lsls r3,r3,#1
 1837 0072 DBB2     	 uxtb r3,r3
 1838 0074 1933     	 adds r3,r3,#25
 1839 0076 FB75     	 strb r3,[r7,#23]
 889:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1840              	 .loc 2 889 0
 1841 0078 FB7D     	 ldrb r3,[r7,#23]
 1842 007a 0322     	 movs r2,#3
 1843 007c 02FA03F3 	 lsl r3,r2,r3
 1844 0080 DB43     	 mvns r3,r3
 1845 0082 BA69     	 ldr r2,[r7,#24]
 1846 0084 1340     	 ands r3,r3,r2
 1847 0086 BB61     	 str r3,[r7,#24]
 890:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 1848              	 .loc 2 890 0
 1849 0088 7B68     	 ldr r3,[r7,#4]
 1850 008a DB78     	 ldrb r3,[r3,#3]
 1851 008c 1A46     	 mov r2,r3
 1852 008e FB7D     	 ldrb r3,[r7,#23]
 1853 0090 02FA03F3 	 lsl r3,r2,r3
 1854 0094 BA69     	 ldr r2,[r7,#24]
 1855 0096 1343     	 orrs r3,r3,r2
 1856 0098 BB61     	 str r3,[r7,#24]
 891:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 892:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 893:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1857              	 .loc 2 893 0
 1858 009a FB7F     	 ldrb r3,[r7,#31]
 1859 009c 9B00     	 lsls r3,r3,#2
 1860 009e FB75     	 strb r3,[r7,#23]
 894:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1861              	 .loc 2 894 0
 1862 00a0 FB7D     	 ldrb r3,[r7,#23]
 1863 00a2 0F22     	 movs r2,#15
 1864 00a4 02FA03F3 	 lsl r3,r2,r3
 1865 00a8 DB43     	 mvns r3,r3
 1866 00aa BA69     	 ldr r2,[r7,#24]
 1867 00ac 1340     	 ands r3,r3,r2
 1868 00ae BB61     	 str r3,[r7,#24]
 895:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1869              	 .loc 2 895 0
 1870 00b0 7B68     	 ldr r3,[r7,#4]
 1871 00b2 1B78     	 ldrb r3,[r3]
 1872 00b4 1A46     	 mov r2,r3
 1873 00b6 FB7D     	 ldrb r3,[r7,#23]
 1874 00b8 02FA03F3 	 lsl r3,r2,r3
 1875 00bc BA69     	 ldr r2,[r7,#24]
 1876 00be 1343     	 orrs r3,r3,r2
 1877 00c0 BB61     	 str r3,[r7,#24]
 896:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 897:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1878              	 .loc 2 897 0
 1879 00c2 FB68     	 ldr r3,[r7,#12]
 1880 00c4 BA69     	 ldr r2,[r7,#24]
 1881 00c6 1A60     	 str r2,[r3]
 898:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 899:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1882              	 .loc 2 899 0
 1883 00c8 2437     	 adds r7,r7,#36
 1884              	.LCFI152:
 1885              	 .cfi_def_cfa_offset 4
 1886 00ca BD46     	 mov sp,r7
 1887              	.LCFI153:
 1888              	 .cfi_def_cfa_register 13
 1889              	 
 1890 00cc 5DF8047B 	 ldr r7,[sp],#4
 1891              	.LCFI154:
 1892              	 .cfi_restore 7
 1893              	 .cfi_def_cfa_offset 0
 1894 00d0 7047     	 bx lr
 1895              	 .cfi_endproc
 1896              	.LFE229:
 1898 00d2 00BF     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 1899              	 .align 2
 1900              	 .global XMC_CCU8_SLICE_SetInput
 1901              	 .thumb
 1902              	 .thumb_func
 1904              	XMC_CCU8_SLICE_SetInput:
 1905              	.LFB230:
 900:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 901:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 902:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 903:../Libraries/XMCLib/src/xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 904:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 905:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1906              	 .loc 2 905 0
 1907              	 .cfi_startproc
 1908              	 
 1909              	 
 1910              	 
 1911 0000 80B4     	 push {r7}
 1912              	.LCFI155:
 1913              	 .cfi_def_cfa_offset 4
 1914              	 .cfi_offset 7,-4
 1915 0002 85B0     	 sub sp,sp,#20
 1916              	.LCFI156:
 1917              	 .cfi_def_cfa_offset 24
 1918 0004 00AF     	 add r7,sp,#0
 1919              	.LCFI157:
 1920              	 .cfi_def_cfa_register 7
 1921 0006 7860     	 str r0,[r7,#4]
 1922 0008 0B46     	 mov r3,r1
 1923 000a FB70     	 strb r3,[r7,#3]
 1924 000c 1346     	 mov r3,r2
 1925 000e BB70     	 strb r3,[r7,#2]
 906:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 907:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 908:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 909:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 910:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 911:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 912:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 913:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 914:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 915:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1926              	 .loc 2 915 0
 1927 0010 FB78     	 ldrb r3,[r7,#3]
 1928 0012 013B     	 subs r3,r3,#1
 1929 0014 FB73     	 strb r3,[r7,#15]
 916:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 917:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 918:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 919:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 920:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 921:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 922:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 923:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 924:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 925:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 926:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1930              	 .loc 2 926 0
 1931 0016 FB7B     	 ldrb r3,[r7,#15]
 1932 0018 9B00     	 lsls r3,r3,#2
 1933 001a BB73     	 strb r3,[r7,#14]
 927:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1934              	 .loc 2 927 0
 1935 001c 7B68     	 ldr r3,[r7,#4]
 1936 001e 1B68     	 ldr r3,[r3]
 1937 0020 BB60     	 str r3,[r7,#8]
 928:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1938              	 .loc 2 928 0
 1939 0022 BB7B     	 ldrb r3,[r7,#14]
 1940 0024 0F22     	 movs r2,#15
 1941 0026 02FA03F3 	 lsl r3,r2,r3
 1942 002a DB43     	 mvns r3,r3
 1943 002c BA68     	 ldr r2,[r7,#8]
 1944 002e 1340     	 ands r3,r3,r2
 1945 0030 BB60     	 str r3,[r7,#8]
 929:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 1946              	 .loc 2 929 0
 1947 0032 BA78     	 ldrb r2,[r7,#2]
 1948 0034 BB7B     	 ldrb r3,[r7,#14]
 1949 0036 02FA03F3 	 lsl r3,r2,r3
 1950 003a BA68     	 ldr r2,[r7,#8]
 1951 003c 1343     	 orrs r3,r3,r2
 1952 003e BB60     	 str r3,[r7,#8]
 930:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 931:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1953              	 .loc 2 931 0
 1954 0040 7B68     	 ldr r3,[r7,#4]
 1955 0042 BA68     	 ldr r2,[r7,#8]
 1956 0044 1A60     	 str r2,[r3]
 932:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 933:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1957              	 .loc 2 933 0
 1958 0046 1437     	 adds r7,r7,#20
 1959              	.LCFI158:
 1960              	 .cfi_def_cfa_offset 4
 1961 0048 BD46     	 mov sp,r7
 1962              	.LCFI159:
 1963              	 .cfi_def_cfa_register 13
 1964              	 
 1965 004a 5DF8047B 	 ldr r7,[sp],#4
 1966              	.LCFI160:
 1967              	 .cfi_restore 7
 1968              	 .cfi_def_cfa_offset 0
 1969 004e 7047     	 bx lr
 1970              	 .cfi_endproc
 1971              	.LFE230:
 1973              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 1974              	 .align 2
 1975              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 1976              	 .thumb
 1977              	 .thumb_func
 1979              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 1980              	.LFB231:
 934:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 935:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 936:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 937:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 938:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1981              	 .loc 2 938 0
 1982              	 .cfi_startproc
 1983              	 
 1984              	 
 1985              	 
 1986 0000 80B4     	 push {r7}
 1987              	.LCFI161:
 1988              	 .cfi_def_cfa_offset 4
 1989              	 .cfi_offset 7,-4
 1990 0002 85B0     	 sub sp,sp,#20
 1991              	.LCFI162:
 1992              	 .cfi_def_cfa_offset 24
 1993 0004 00AF     	 add r7,sp,#0
 1994              	.LCFI163:
 1995              	 .cfi_def_cfa_register 7
 1996 0006 7860     	 str r0,[r7,#4]
 1997 0008 0B46     	 mov r3,r1
 1998 000a FB70     	 strb r3,[r7,#3]
 939:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 940:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 941:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 942:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 943:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 944:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 945:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 946:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1999              	 .loc 2 946 0
 2000 000c 7B68     	 ldr r3,[r7,#4]
 2001 000e 5B69     	 ldr r3,[r3,#20]
 2002 0010 FB60     	 str r3,[r7,#12]
 947:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 948:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2003              	 .loc 2 948 0
 2004 0012 FB78     	 ldrb r3,[r7,#3]
 2005 0014 002B     	 cmp r3,#0
 2006 0016 04D1     	 bne .L52
 949:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 950:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 2007              	 .loc 2 950 0
 2008 0018 FB68     	 ldr r3,[r7,#12]
 2009 001a 23F00203 	 bic r3,r3,#2
 2010 001e FB60     	 str r3,[r7,#12]
 2011 0020 03E0     	 b .L53
 2012              	.L52:
 951:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 952:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 953:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 2013              	 .loc 2 954 0
 2014 0022 FB68     	 ldr r3,[r7,#12]
 2015 0024 43F00203 	 orr r3,r3,#2
 2016 0028 FB60     	 str r3,[r7,#12]
 2017              	.L53:
 955:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 956:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 957:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2018              	 .loc 2 957 0
 2019 002a 7B68     	 ldr r3,[r7,#4]
 2020 002c FA68     	 ldr r2,[r7,#12]
 2021 002e 5A61     	 str r2,[r3,#20]
 958:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2022              	 .loc 2 958 0
 2023 0030 1437     	 adds r7,r7,#20
 2024              	.LCFI164:
 2025              	 .cfi_def_cfa_offset 4
 2026 0032 BD46     	 mov sp,r7
 2027              	.LCFI165:
 2028              	 .cfi_def_cfa_register 13
 2029              	 
 2030 0034 5DF8047B 	 ldr r7,[sp],#4
 2031              	.LCFI166:
 2032              	 .cfi_restore 7
 2033              	 .cfi_def_cfa_offset 0
 2034 0038 7047     	 bx lr
 2035              	 .cfi_endproc
 2036              	.LFE231:
 2038 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 2039              	 .align 2
 2040              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 2041              	 .thumb
 2042              	 .thumb_func
 2044              	XMC_CCU8_SLICE_SetTimerCountingMode:
 2045              	.LFB232:
 959:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 960:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 961:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 962:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2046              	 .loc 2 962 0
 2047              	 .cfi_startproc
 2048              	 
 2049              	 
 2050              	 
 2051 0000 80B4     	 push {r7}
 2052              	.LCFI167:
 2053              	 .cfi_def_cfa_offset 4
 2054              	 .cfi_offset 7,-4
 2055 0002 85B0     	 sub sp,sp,#20
 2056              	.LCFI168:
 2057              	 .cfi_def_cfa_offset 24
 2058 0004 00AF     	 add r7,sp,#0
 2059              	.LCFI169:
 2060              	 .cfi_def_cfa_register 7
 2061 0006 7860     	 str r0,[r7,#4]
 2062 0008 0B46     	 mov r3,r1
 2063 000a FB70     	 strb r3,[r7,#3]
 963:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 964:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 965:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 966:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 967:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 968:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 969:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 970:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2064              	 .loc 2 970 0
 2065 000c 7B68     	 ldr r3,[r7,#4]
 2066 000e 5B69     	 ldr r3,[r3,#20]
 2067 0010 FB60     	 str r3,[r7,#12]
 971:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 972:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 2068              	 .loc 2 972 0
 2069 0012 FB78     	 ldrb r3,[r7,#3]
 2070 0014 002B     	 cmp r3,#0
 2071 0016 04D1     	 bne .L55
 973:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 974:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 2072              	 .loc 2 974 0
 2073 0018 FB68     	 ldr r3,[r7,#12]
 2074 001a 23F00103 	 bic r3,r3,#1
 2075 001e FB60     	 str r3,[r7,#12]
 2076 0020 03E0     	 b .L56
 2077              	.L55:
 975:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 976:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 977:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 978:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2078              	 .loc 2 978 0
 2079 0022 FB68     	 ldr r3,[r7,#12]
 2080 0024 43F00103 	 orr r3,r3,#1
 2081 0028 FB60     	 str r3,[r7,#12]
 2082              	.L56:
 979:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 980:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 981:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2083              	 .loc 2 981 0
 2084 002a 7B68     	 ldr r3,[r7,#4]
 2085 002c FA68     	 ldr r2,[r7,#12]
 2086 002e 5A61     	 str r2,[r3,#20]
 982:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2087              	 .loc 2 982 0
 2088 0030 1437     	 adds r7,r7,#20
 2089              	.LCFI170:
 2090              	 .cfi_def_cfa_offset 4
 2091 0032 BD46     	 mov sp,r7
 2092              	.LCFI171:
 2093              	 .cfi_def_cfa_register 13
 2094              	 
 2095 0034 5DF8047B 	 ldr r7,[sp],#4
 2096              	.LCFI172:
 2097              	 .cfi_restore 7
 2098              	 .cfi_def_cfa_offset 0
 2099 0038 7047     	 bx lr
 2100              	 .cfi_endproc
 2101              	.LFE232:
 2103 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2104              	 .align 2
 2105              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2106              	 .thumb
 2107              	 .thumb_func
 2109              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2110              	.LFB233:
 983:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 984:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 985:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 986:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2111              	 .loc 2 986 0
 2112              	 .cfi_startproc
 2113              	 
 2114              	 
 2115              	 
 2116 0000 80B4     	 push {r7}
 2117              	.LCFI173:
 2118              	 .cfi_def_cfa_offset 4
 2119              	 .cfi_offset 7,-4
 2120 0002 83B0     	 sub sp,sp,#12
 2121              	.LCFI174:
 2122              	 .cfi_def_cfa_offset 16
 2123 0004 00AF     	 add r7,sp,#0
 2124              	.LCFI175:
 2125              	 .cfi_def_cfa_register 7
 2126 0006 7860     	 str r0,[r7,#4]
 2127 0008 0B46     	 mov r3,r1
 2128 000a 7B80     	 strh r3,[r7,#2]
 987:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 988:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2129              	 .loc 2 988 0
 2130 000c 7A88     	 ldrh r2,[r7,#2]
 2131 000e 7B68     	 ldr r3,[r7,#4]
 2132 0010 5A63     	 str r2,[r3,#52]
 989:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2133              	 .loc 2 989 0
 2134 0012 0C37     	 adds r7,r7,#12
 2135              	.LCFI176:
 2136              	 .cfi_def_cfa_offset 4
 2137 0014 BD46     	 mov sp,r7
 2138              	.LCFI177:
 2139              	 .cfi_def_cfa_register 13
 2140              	 
 2141 0016 5DF8047B 	 ldr r7,[sp],#4
 2142              	.LCFI178:
 2143              	 .cfi_restore 7
 2144              	 .cfi_def_cfa_offset 0
 2145 001a 7047     	 bx lr
 2146              	 .cfi_endproc
 2147              	.LFE233:
 2149              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2150              	 .align 2
 2151              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2152              	 .thumb
 2153              	 .thumb_func
 2155              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2156              	.LFB234:
 990:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 991:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 992:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 993:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2157              	 .loc 2 993 0
 2158              	 .cfi_startproc
 2159              	 
 2160              	 
 2161              	 
 2162 0000 80B4     	 push {r7}
 2163              	.LCFI179:
 2164              	 .cfi_def_cfa_offset 4
 2165              	 .cfi_offset 7,-4
 2166 0002 83B0     	 sub sp,sp,#12
 2167              	.LCFI180:
 2168              	 .cfi_def_cfa_offset 16
 2169 0004 00AF     	 add r7,sp,#0
 2170              	.LCFI181:
 2171              	 .cfi_def_cfa_register 7
 2172 0006 7860     	 str r0,[r7,#4]
 2173 0008 0B46     	 mov r3,r1
 2174 000a FB70     	 strb r3,[r7,#3]
 994:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 995:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 996:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(slice->CV[reg_num]);
 2175              	 .loc 2 996 0
 2176 000c FB78     	 ldrb r3,[r7,#3]
 2177 000e 7A68     	 ldr r2,[r7,#4]
 2178 0010 1C33     	 adds r3,r3,#28
 2179 0012 9B00     	 lsls r3,r3,#2
 2180 0014 1344     	 add r3,r3,r2
 2181 0016 5B68     	 ldr r3,[r3,#4]
 997:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2182              	 .loc 2 997 0
 2183 0018 1846     	 mov r0,r3
 2184 001a 0C37     	 adds r7,r7,#12
 2185              	.LCFI182:
 2186              	 .cfi_def_cfa_offset 4
 2187 001c BD46     	 mov sp,r7
 2188              	.LCFI183:
 2189              	 .cfi_def_cfa_register 13
 2190              	 
 2191 001e 5DF8047B 	 ldr r7,[sp],#4
 2192              	.LCFI184:
 2193              	 .cfi_restore 7
 2194              	 .cfi_def_cfa_offset 0
 2195 0022 7047     	 bx lr
 2196              	 .cfi_endproc
 2197              	.LFE234:
 2199              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2200              	 .align 2
 2201              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2202              	 .thumb
 2203              	 .thumb_func
 2205              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2206              	.LFB235:
 998:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 999:../Libraries/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
1000:../Libraries/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
1001:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1002:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1003:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2207              	 .loc 2 1003 0
 2208              	 .cfi_startproc
 2209              	 
 2210              	 
 2211              	 
 2212 0000 80B4     	 push {r7}
 2213              	.LCFI185:
 2214              	 .cfi_def_cfa_offset 4
 2215              	 .cfi_offset 7,-4
 2216 0002 87B0     	 sub sp,sp,#28
 2217              	.LCFI186:
 2218              	 .cfi_def_cfa_offset 32
 2219 0004 00AF     	 add r7,sp,#0
 2220              	.LCFI187:
 2221              	 .cfi_def_cfa_register 7
 2222 0006 F860     	 str r0,[r7,#12]
 2223 0008 0B46     	 mov r3,r1
 2224 000a 7A60     	 str r2,[r7,#4]
 2225 000c FB72     	 strb r3,[r7,#11]
1004:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1005:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1006:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1007:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1008:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1009:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1010:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1011:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1012:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1013:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1014:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1015:../Libraries/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2226              	 .loc 2 1015 0
 2227 000e 0123     	 movs r3,#1
 2228 0010 FB75     	 strb r3,[r7,#23]
1016:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1017:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1018:../Libraries/XMCLib/src/xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2229              	 .loc 2 1018 0
 2230 0012 FB68     	 ldr r3,[r7,#12]
 2231 0014 5B69     	 ldr r3,[r3,#20]
 2232 0016 03F01003 	 and r3,r3,#16
 2233 001a 002B     	 cmp r3,#0
 2234 001c 04D0     	 beq .L61
1019:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1020:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1021:../Libraries/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2235              	 .loc 2 1021 0
 2236 001e 0023     	 movs r3,#0
 2237 0020 7B75     	 strb r3,[r7,#21]
1022:../Libraries/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2238              	 .loc 2 1022 0
 2239 0022 0423     	 movs r3,#4
 2240 0024 3B75     	 strb r3,[r7,#20]
 2241 0026 0BE0     	 b .L62
 2242              	.L61:
1023:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1024:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1025:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1026:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1027:../Libraries/XMCLib/src/xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2243              	 .loc 2 1027 0
 2244 0028 FB7A     	 ldrb r3,[r7,#11]
 2245 002a 012B     	 cmp r3,#1
 2246 002c 04D1     	 bne .L63
1028:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1029:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2247              	 .loc 2 1029 0
 2248 002e 0223     	 movs r3,#2
 2249 0030 7B75     	 strb r3,[r7,#21]
1030:../Libraries/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2250              	 .loc 2 1030 0
 2251 0032 0423     	 movs r3,#4
 2252 0034 3B75     	 strb r3,[r7,#20]
 2253 0036 03E0     	 b .L62
 2254              	.L63:
1031:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1032:../Libraries/XMCLib/src/xmc_ccu8.c ****     else
1033:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1034:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2255              	 .loc 2 1034 0
 2256 0038 0023     	 movs r3,#0
 2257 003a 7B75     	 strb r3,[r7,#21]
1035:../Libraries/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2258              	 .loc 2 1035 0
 2259 003c 0223     	 movs r3,#2
 2260 003e 3B75     	 strb r3,[r7,#20]
 2261              	.L62:
1036:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1038:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   for(i=start; i<end; i++)
 2262              	 .loc 2 1039 0
 2263 0040 7B7D     	 ldrb r3,[r7,#21]
 2264 0042 BB75     	 strb r3,[r7,#22]
 2265 0044 17E0     	 b .L64
 2266              	.L67:
1040:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1041:../Libraries/XMCLib/src/xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2267              	 .loc 2 1041 0
 2268 0046 BB7D     	 ldrb r3,[r7,#22]
 2269 0048 FA68     	 ldr r2,[r7,#12]
 2270 004a 1C33     	 adds r3,r3,#28
 2271 004c 9B00     	 lsls r3,r3,#2
 2272 004e 1344     	 add r3,r3,r2
 2273 0050 5B68     	 ldr r3,[r3,#4]
 2274 0052 03F48013 	 and r3,r3,#1048576
 2275 0056 002B     	 cmp r3,#0
 2276 0058 0AD0     	 beq .L65
1042:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1043:../Libraries/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2277              	 .loc 2 1043 0
 2278 005a BB7D     	 ldrb r3,[r7,#22]
 2279 005c FA68     	 ldr r2,[r7,#12]
 2280 005e 1C33     	 adds r3,r3,#28
 2281 0060 9B00     	 lsls r3,r3,#2
 2282 0062 1344     	 add r3,r3,r2
 2283 0064 5A68     	 ldr r2,[r3,#4]
 2284 0066 7B68     	 ldr r3,[r7,#4]
 2285 0068 1A60     	 str r2,[r3]
1044:../Libraries/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2286              	 .loc 2 1044 0
 2287 006a 0023     	 movs r3,#0
 2288 006c FB75     	 strb r3,[r7,#23]
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2289              	 .loc 2 1045 0
 2290 006e 06E0     	 b .L66
 2291              	.L65:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2292              	 .loc 2 1039 0 discriminator 2
 2293 0070 BB7D     	 ldrb r3,[r7,#22]
 2294 0072 0133     	 adds r3,r3,#1
 2295 0074 BB75     	 strb r3,[r7,#22]
 2296              	.L64:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2297              	 .loc 2 1039 0 is_stmt 0 discriminator 1
 2298 0076 BA7D     	 ldrb r2,[r7,#22]
 2299 0078 3B7D     	 ldrb r3,[r7,#20]
 2300 007a 9A42     	 cmp r2,r3
 2301 007c E3D3     	 bcc .L67
 2302              	.L66:
1046:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1047:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1048:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1049:../Libraries/XMCLib/src/xmc_ccu8.c ****   return retval;
 2303              	 .loc 2 1049 0 is_stmt 1
 2304 007e FB7D     	 ldrb r3,[r7,#23]
1050:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2305              	 .loc 2 1050 0
 2306 0080 1846     	 mov r0,r3
 2307 0082 1C37     	 adds r7,r7,#28
 2308              	.LCFI188:
 2309              	 .cfi_def_cfa_offset 4
 2310 0084 BD46     	 mov sp,r7
 2311              	.LCFI189:
 2312              	 .cfi_def_cfa_register 13
 2313              	 
 2314 0086 5DF8047B 	 ldr r7,[sp],#4
 2315              	.LCFI190:
 2316              	 .cfi_restore 7
 2317              	 .cfi_def_cfa_offset 0
 2318 008a 7047     	 bx lr
 2319              	 .cfi_endproc
 2320              	.LFE235:
 2322              	 .section .text.XMC_CCU8_GetCapturedValueFromFifo,"ax",%progbits
 2323              	 .align 2
 2324              	 .global XMC_CCU8_GetCapturedValueFromFifo
 2325              	 .thumb
 2326              	 .thumb_func
 2328              	XMC_CCU8_GetCapturedValueFromFifo:
 2329              	.LFB236:
1051:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1052:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1053:../Libraries/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1054:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2330              	 .loc 2 1054 0
 2331              	 .cfi_startproc
 2332              	 
 2333              	 
 2334              	 
 2335 0000 80B4     	 push {r7}
 2336              	.LCFI191:
 2337              	 .cfi_def_cfa_offset 4
 2338              	 .cfi_offset 7,-4
 2339 0002 85B0     	 sub sp,sp,#20
 2340              	.LCFI192:
 2341              	 .cfi_def_cfa_offset 24
 2342 0004 00AF     	 add r7,sp,#0
 2343              	.LCFI193:
 2344              	 .cfi_def_cfa_register 7
 2345 0006 7860     	 str r0,[r7,#4]
 2346 0008 0B46     	 mov r3,r1
 2347 000a FB70     	 strb r3,[r7,#3]
1055:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1056:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1057:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1058:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1059:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1060:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1061:../Libraries/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
 2348              	 .loc 2 1061 0
 2349 000c 7B68     	 ldr r3,[r7,#4]
 2350 000e 1B6D     	 ldr r3,[r3,#80]
 2351 0010 FB60     	 str r3,[r7,#12]
1062:../Libraries/XMCLib/src/xmc_ccu8.c ****     
1063:../Libraries/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
 2352              	 .loc 2 1063 0
 2353 0012 FB68     	 ldr r3,[r7,#12]
 2354 0014 03F44013 	 and r3,r3,#3145728
 2355 0018 1B0D     	 lsrs r3,r3,#20
 2356 001a BB60     	 str r3,[r7,#8]
1064:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1065:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1066:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
 2357              	 .loc 2 1066 0
 2358 001c FA78     	 ldrb r2,[r7,#3]
 2359 001e BB68     	 ldr r3,[r7,#8]
 2360 0020 9A42     	 cmp r2,r3
 2361 0022 02D0     	 beq .L70
1067:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1068:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = -1;
 2362              	 .loc 2 1068 0
 2363 0024 4FF0FF33 	 mov r3,#-1
 2364 0028 FB60     	 str r3,[r7,#12]
 2365              	.L70:
1069:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1070:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1071:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (cap);
 2366              	 .loc 2 1071 0
 2367 002a FB68     	 ldr r3,[r7,#12]
1072:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2368              	 .loc 2 1072 0
 2369 002c 1846     	 mov r0,r3
 2370 002e 1437     	 adds r7,r7,#20
 2371              	.LCFI194:
 2372              	 .cfi_def_cfa_offset 4
 2373 0030 BD46     	 mov sp,r7
 2374              	.LCFI195:
 2375              	 .cfi_def_cfa_register 13
 2376              	 
 2377 0032 5DF8047B 	 ldr r7,[sp],#4
 2378              	.LCFI196:
 2379              	 .cfi_restore 7
 2380              	 .cfi_def_cfa_offset 0
 2381 0036 7047     	 bx lr
 2382              	 .cfi_endproc
 2383              	.LFE236:
 2385              	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2386              	 .align 2
 2387              	 .global XMC_CCU8_SLICE_EnableDithering
 2388              	 .thumb
 2389              	 .thumb_func
 2391              	XMC_CCU8_SLICE_EnableDithering:
 2392              	.LFB237:
1073:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
1074:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1075:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1076:../Libraries/XMCLib/src/xmc_ccu8.c **** {
1077:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1078:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1079:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1080:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1081:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1082:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1083:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1084:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
1085:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1086:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD0;
1087:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1088:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1089:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1090:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD1;
1091:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1092:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1093:../Libraries/XMCLib/src/xmc_ccu8.c ****   return cap;
1094:../Libraries/XMCLib/src/xmc_ccu8.c **** }
1095:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
1096:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1097:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1098:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1099:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1100:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1101:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1102:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2393              	 .loc 2 1102 0
 2394              	 .cfi_startproc
 2395              	 
 2396              	 
 2397 0000 80B5     	 push {r7,lr}
 2398              	.LCFI197:
 2399              	 .cfi_def_cfa_offset 8
 2400              	 .cfi_offset 7,-8
 2401              	 .cfi_offset 14,-4
 2402 0002 84B0     	 sub sp,sp,#16
 2403              	.LCFI198:
 2404              	 .cfi_def_cfa_offset 24
 2405 0004 00AF     	 add r7,sp,#0
 2406              	.LCFI199:
 2407              	 .cfi_def_cfa_register 7
 2408 0006 7860     	 str r0,[r7,#4]
 2409 0008 0846     	 mov r0,r1
 2410 000a 1146     	 mov r1,r2
 2411 000c 1A46     	 mov r2,r3
 2412 000e 0346     	 mov r3,r0
 2413 0010 FB70     	 strb r3,[r7,#3]
 2414 0012 0B46     	 mov r3,r1
 2415 0014 BB70     	 strb r3,[r7,#2]
 2416 0016 1346     	 mov r3,r2
 2417 0018 7B70     	 strb r3,[r7,#1]
1103:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1104:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1105:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1107:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2418              	 .loc 2 1107 0
 2419 001a 7B68     	 ldr r3,[r7,#4]
 2420 001c 5B69     	 ldr r3,[r3,#20]
 2421 001e FB60     	 str r3,[r7,#12]
1108:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2422              	 .loc 2 1108 0
 2423 0020 FB68     	 ldr r3,[r7,#12]
 2424 0022 23F4C043 	 bic r3,r3,#24576
 2425 0026 FB60     	 str r3,[r7,#12]
1109:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1110:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == period_dither)
 2426              	 .loc 2 1110 0
 2427 0028 FB78     	 ldrb r3,[r7,#3]
 2428 002a 002B     	 cmp r3,#0
 2429 002c 03D0     	 beq .L73
1111:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1112:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2430              	 .loc 2 1112 0
 2431 002e FB68     	 ldr r3,[r7,#12]
 2432 0030 43F40053 	 orr r3,r3,#8192
 2433 0034 FB60     	 str r3,[r7,#12]
 2434              	.L73:
1113:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1114:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == duty_dither)
 2435              	 .loc 2 1114 0
 2436 0036 BB78     	 ldrb r3,[r7,#2]
 2437 0038 002B     	 cmp r3,#0
 2438 003a 03D0     	 beq .L74
1115:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1116:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2439              	 .loc 2 1116 0
 2440 003c FB68     	 ldr r3,[r7,#12]
 2441 003e 43F48043 	 orr r3,r3,#16384
 2442 0042 FB60     	 str r3,[r7,#12]
 2443              	.L74:
1117:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1118:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1119:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2444              	 .loc 2 1119 0
 2445 0044 7B68     	 ldr r3,[r7,#4]
 2446 0046 FA68     	 ldr r2,[r7,#12]
 2447 0048 5A61     	 str r2,[r3,#20]
1120:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1121:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2448              	 .loc 2 1121 0
 2449 004a 7B78     	 ldrb r3,[r7,#1]
 2450 004c 7868     	 ldr r0,[r7,#4]
 2451 004e 1946     	 mov r1,r3
 2452 0050 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1122:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2453              	 .loc 2 1122 0
 2454 0054 1037     	 adds r7,r7,#16
 2455              	.LCFI200:
 2456              	 .cfi_def_cfa_offset 8
 2457 0056 BD46     	 mov sp,r7
 2458              	.LCFI201:
 2459              	 .cfi_def_cfa_register 13
 2460              	 
 2461 0058 80BD     	 pop {r7,pc}
 2462              	 .cfi_endproc
 2463              	.LFE237:
 2465 005a 00BF     	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2466              	 .align 2
 2467              	 .global XMC_CCU8_SLICE_SetPrescaler
 2468              	 .thumb
 2469              	 .thumb_func
 2471              	XMC_CCU8_SLICE_SetPrescaler:
 2472              	.LFB238:
1123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1124:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1125:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const uint8_t div_val)
1126:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2473              	 .loc 2 1126 0
 2474              	 .cfi_startproc
 2475              	 
 2476              	 
 2477              	 
 2478 0000 80B4     	 push {r7}
 2479              	.LCFI202:
 2480              	 .cfi_def_cfa_offset 4
 2481              	 .cfi_offset 7,-4
 2482 0002 85B0     	 sub sp,sp,#20
 2483              	.LCFI203:
 2484              	 .cfi_def_cfa_offset 24
 2485 0004 00AF     	 add r7,sp,#0
 2486              	.LCFI204:
 2487              	 .cfi_def_cfa_register 7
 2488 0006 7860     	 str r0,[r7,#4]
 2489 0008 0B46     	 mov r3,r1
 2490 000a FB70     	 strb r3,[r7,#3]
1127:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1128:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1129:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1130:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1131:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1132:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2491              	 .loc 2 1132 0
 2492 000c 7B68     	 ldr r3,[r7,#4]
 2493 000e 9B6A     	 ldr r3,[r3,#40]
 2494 0010 FB60     	 str r3,[r7,#12]
1133:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2495              	 .loc 2 1133 0
 2496 0012 FB68     	 ldr r3,[r7,#12]
 2497 0014 23F47063 	 bic r3,r3,#3840
 2498 0018 FB60     	 str r3,[r7,#12]
1134:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2499              	 .loc 2 1134 0
 2500 001a FB78     	 ldrb r3,[r7,#3]
 2501 001c 1B02     	 lsls r3,r3,#8
 2502 001e FA68     	 ldr r2,[r7,#12]
 2503 0020 1343     	 orrs r3,r3,r2
 2504 0022 FB60     	 str r3,[r7,#12]
1135:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2505              	 .loc 2 1135 0
 2506 0024 7B68     	 ldr r3,[r7,#4]
 2507 0026 FA68     	 ldr r2,[r7,#12]
 2508 0028 9A62     	 str r2,[r3,#40]
1136:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1137:../Libraries/XMCLib/src/xmc_ccu8.c ****   /*
1138:../Libraries/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1139:../Libraries/XMCLib/src/xmc_ccu8.c ****    * compare value.
1140:../Libraries/XMCLib/src/xmc_ccu8.c ****    */
1141:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2509              	 .loc 2 1141 0
 2510 002a FA78     	 ldrb r2,[r7,#3]
 2511 002c 7B68     	 ldr r3,[r7,#4]
 2512 002e 5A62     	 str r2,[r3,#36]
1142:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2513              	 .loc 2 1142 0
 2514 0030 1437     	 adds r7,r7,#20
 2515              	.LCFI205:
 2516              	 .cfi_def_cfa_offset 4
 2517 0032 BD46     	 mov sp,r7
 2518              	.LCFI206:
 2519              	 .cfi_def_cfa_register 13
 2520              	 
 2521 0034 5DF8047B 	 ldr r7,[sp],#4
 2522              	.LCFI207:
 2523              	 .cfi_restore 7
 2524              	 .cfi_def_cfa_offset 0
 2525 0038 7047     	 bx lr
 2526              	 .cfi_endproc
 2527              	.LFE238:
 2529 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2530              	 .align 2
 2531              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2532              	 .thumb
 2533              	 .thumb_func
 2535              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2536              	.LFB239:
1143:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1144:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1145:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1146:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1147:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const uint16_t compare_val)
1148:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2537              	 .loc 2 1148 0
 2538              	 .cfi_startproc
 2539              	 
 2540              	 
 2541              	 
 2542 0000 80B4     	 push {r7}
 2543              	.LCFI208:
 2544              	 .cfi_def_cfa_offset 4
 2545              	 .cfi_offset 7,-4
 2546 0002 83B0     	 sub sp,sp,#12
 2547              	.LCFI209:
 2548              	 .cfi_def_cfa_offset 16
 2549 0004 00AF     	 add r7,sp,#0
 2550              	.LCFI210:
 2551              	 .cfi_def_cfa_register 7
 2552 0006 7860     	 str r0,[r7,#4]
 2553 0008 0B46     	 mov r3,r1
 2554 000a FB70     	 strb r3,[r7,#3]
 2555 000c 1346     	 mov r3,r2
 2556 000e 3B80     	 strh r3,[r7]
1149:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1150:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1151:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1152:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2557              	 .loc 2 1152 0
 2558 0010 FB78     	 ldrb r3,[r7,#3]
 2559 0012 002B     	 cmp r3,#0
 2560 0014 03D1     	 bne .L77
1153:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1154:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2561              	 .loc 2 1154 0
 2562 0016 3A88     	 ldrh r2,[r7]
 2563 0018 7B68     	 ldr r3,[r7,#4]
 2564 001a DA63     	 str r2,[r3,#60]
 2565 001c 02E0     	 b .L76
 2566              	.L77:
1155:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1156:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1157:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1158:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2567              	 .loc 2 1158 0
 2568 001e 3A88     	 ldrh r2,[r7]
 2569 0020 7B68     	 ldr r3,[r7,#4]
 2570 0022 5A64     	 str r2,[r3,#68]
 2571              	.L76:
1159:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1160:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2572              	 .loc 2 1160 0
 2573 0024 0C37     	 adds r7,r7,#12
 2574              	.LCFI211:
 2575              	 .cfi_def_cfa_offset 4
 2576 0026 BD46     	 mov sp,r7
 2577              	.LCFI212:
 2578              	 .cfi_def_cfa_register 13
 2579              	 
 2580 0028 5DF8047B 	 ldr r7,[sp],#4
 2581              	.LCFI213:
 2582              	 .cfi_restore 7
 2583              	 .cfi_def_cfa_offset 0
 2584 002c 7047     	 bx lr
 2585              	 .cfi_endproc
 2586              	.LFE239:
 2588 002e 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2589              	 .align 2
 2590              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2591              	 .thumb
 2592              	 .thumb_func
 2594              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2595              	.LFB240:
1161:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1162:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1163:../Libraries/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1164:../Libraries/XMCLib/src/xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1165:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2596              	 .loc 2 1165 0
 2597              	 .cfi_startproc
 2598              	 
 2599              	 
 2600              	 
 2601 0000 80B4     	 push {r7}
 2602              	.LCFI214:
 2603              	 .cfi_def_cfa_offset 4
 2604              	 .cfi_offset 7,-4
 2605 0002 85B0     	 sub sp,sp,#20
 2606              	.LCFI215:
 2607              	 .cfi_def_cfa_offset 24
 2608 0004 00AF     	 add r7,sp,#0
 2609              	.LCFI216:
 2610              	 .cfi_def_cfa_register 7
 2611 0006 7860     	 str r0,[r7,#4]
 2612 0008 0B46     	 mov r3,r1
 2613 000a FB70     	 strb r3,[r7,#3]
1166:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1167:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1168:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1169:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1170:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1171:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2614              	 .loc 2 1171 0
 2615 000c FB78     	 ldrb r3,[r7,#3]
 2616 000e 002B     	 cmp r3,#0
 2617 0010 03D1     	 bne .L80
1172:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1173:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2618              	 .loc 2 1173 0
 2619 0012 7B68     	 ldr r3,[r7,#4]
 2620 0014 9B6B     	 ldr r3,[r3,#56]
 2621 0016 FB81     	 strh r3,[r7,#14]
 2622 0018 02E0     	 b .L81
 2623              	.L80:
1174:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1175:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1176:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1177:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2624              	 .loc 2 1177 0
 2625 001a 7B68     	 ldr r3,[r7,#4]
 2626 001c 1B6C     	 ldr r3,[r3,#64]
 2627 001e FB81     	 strh r3,[r7,#14]
 2628              	.L81:
1178:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1179:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1180:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(compare_value);
 2629              	 .loc 2 1180 0
 2630 0020 FB89     	 ldrh r3,[r7,#14]
1181:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2631              	 .loc 2 1181 0
 2632 0022 1846     	 mov r0,r3
 2633 0024 1437     	 adds r7,r7,#20
 2634              	.LCFI217:
 2635              	 .cfi_def_cfa_offset 4
 2636 0026 BD46     	 mov sp,r7
 2637              	.LCFI218:
 2638              	 .cfi_def_cfa_register 13
 2639              	 
 2640 0028 5DF8047B 	 ldr r7,[sp],#4
 2641              	.LCFI219:
 2642              	 .cfi_restore 7
 2643              	 .cfi_def_cfa_offset 0
 2644 002c 7047     	 bx lr
 2645              	 .cfi_endproc
 2646              	.LFE240:
 2648 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2649              	 .align 2
 2650              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2651              	 .thumb
 2652              	 .thumb_func
 2654              	XMC_CCU8_SLICE_SetInterruptNode:
 2655              	.LFB241:
1182:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1183:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1184:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1185:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1186:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1187:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2656              	 .loc 2 1187 0
 2657              	 .cfi_startproc
 2658              	 
 2659              	 
 2660              	 
 2661 0000 80B4     	 push {r7}
 2662              	.LCFI220:
 2663              	 .cfi_def_cfa_offset 4
 2664              	 .cfi_offset 7,-4
 2665 0002 87B0     	 sub sp,sp,#28
 2666              	.LCFI221:
 2667              	 .cfi_def_cfa_offset 32
 2668 0004 00AF     	 add r7,sp,#0
 2669              	.LCFI222:
 2670              	 .cfi_def_cfa_register 7
 2671 0006 7860     	 str r0,[r7,#4]
 2672 0008 0B46     	 mov r3,r1
 2673 000a FB70     	 strb r3,[r7,#3]
 2674 000c 1346     	 mov r3,r2
 2675 000e BB70     	 strb r3,[r7,#2]
1188:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1189:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1190:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t pos;
1191:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1192:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1193:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1194:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1196:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs = slice->SRS;
 2676              	 .loc 2 1196 0
 2677 0010 7B68     	 ldr r3,[r7,#4]
 2678 0012 D3F8A830 	 ldr r3,[r3,#168]
 2679 0016 FB60     	 str r3,[r7,#12]
1197:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch(event)
 2680              	 .loc 2 1198 0
 2681 0018 FB78     	 ldrb r3,[r7,#3]
 2682 001a 092B     	 cmp r3,#9
 2683 001c 31D8     	 bhi .L84
 2684 001e 01A2     	 adr r2,.L86
 2685 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2686              	 .p2align 2
 2687              	.L86:
 2688 0024 4D000000 	 .word .L85+1
 2689 0028 4D000000 	 .word .L85+1
 2690 002c 57000000 	 .word .L87+1
 2691 0030 57000000 	 .word .L87+1
 2692 0034 61000000 	 .word .L88+1
 2693 0038 61000000 	 .word .L88+1
 2694 003c 83000000 	 .word .L84+1
 2695 0040 83000000 	 .word .L84+1
 2696 0044 6B000000 	 .word .L89+1
 2697 0048 77000000 	 .word .L90+1
 2698              	 .p2align 1
 2699              	.L85:
1199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1201:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1202:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2700              	 .loc 2 1202 0
 2701 004c 0323     	 movs r3,#3
 2702 004e 7B61     	 str r3,[r7,#20]
1203:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2703              	 .loc 2 1203 0
 2704 0050 0023     	 movs r3,#0
 2705 0052 3B61     	 str r3,[r7,#16]
1204:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2706              	 .loc 2 1204 0
 2707 0054 1BE0     	 b .L91
 2708              	.L87:
1205:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1206:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1207:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1208:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2709              	 .loc 2 1208 0
 2710 0056 0C23     	 movs r3,#12
 2711 0058 7B61     	 str r3,[r7,#20]
1209:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2712              	 .loc 2 1209 0
 2713 005a 0223     	 movs r3,#2
 2714 005c 3B61     	 str r3,[r7,#16]
1210:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2715              	 .loc 2 1210 0
 2716 005e 16E0     	 b .L91
 2717              	.L88:
1211:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1212:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1213:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1214:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2718              	 .loc 2 1214 0
 2719 0060 3023     	 movs r3,#48
 2720 0062 7B61     	 str r3,[r7,#20]
1215:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2721              	 .loc 2 1215 0
 2722 0064 0423     	 movs r3,#4
 2723 0066 3B61     	 str r3,[r7,#16]
1216:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2724              	 .loc 2 1216 0
 2725 0068 11E0     	 b .L91
 2726              	.L89:
1217:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1218:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1219:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2727              	 .loc 2 1219 0
 2728 006a 4FF44073 	 mov r3,#768
 2729 006e 7B61     	 str r3,[r7,#20]
1220:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2730              	 .loc 2 1220 0
 2731 0070 0823     	 movs r3,#8
 2732 0072 3B61     	 str r3,[r7,#16]
1221:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2733              	 .loc 2 1221 0
 2734 0074 0BE0     	 b .L91
 2735              	.L90:
1222:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1223:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1224:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2736              	 .loc 2 1224 0
 2737 0076 4FF44063 	 mov r3,#3072
 2738 007a 7B61     	 str r3,[r7,#20]
1225:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2739              	 .loc 2 1225 0
 2740 007c 0A23     	 movs r3,#10
 2741 007e 3B61     	 str r3,[r7,#16]
1226:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2742              	 .loc 2 1226 0
 2743 0080 05E0     	 b .L91
 2744              	.L84:
1227:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1228:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
1229:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2745              	 .loc 2 1229 0
 2746 0082 4FF44053 	 mov r3,#12288
 2747 0086 7B61     	 str r3,[r7,#20]
1230:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2748              	 .loc 2 1230 0
 2749 0088 0C23     	 movs r3,#12
 2750 008a 3B61     	 str r3,[r7,#16]
1231:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2751              	 .loc 2 1231 0
 2752 008c 00BF     	 nop
 2753              	.L91:
1232:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1233:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1234:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs &= ~mask;
 2754              	 .loc 2 1234 0
 2755 008e 7B69     	 ldr r3,[r7,#20]
 2756 0090 DB43     	 mvns r3,r3
 2757 0092 FA68     	 ldr r2,[r7,#12]
 2758 0094 1340     	 ands r3,r3,r2
 2759 0096 FB60     	 str r3,[r7,#12]
1235:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 2760              	 .loc 2 1235 0
 2761 0098 BA78     	 ldrb r2,[r7,#2]
 2762 009a 3B69     	 ldr r3,[r7,#16]
 2763 009c 02FA03F3 	 lsl r3,r2,r3
 2764 00a0 FA68     	 ldr r2,[r7,#12]
 2765 00a2 1343     	 orrs r3,r3,r2
 2766 00a4 FB60     	 str r3,[r7,#12]
1236:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1237:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->SRS = srs;
 2767              	 .loc 2 1237 0
 2768 00a6 7B68     	 ldr r3,[r7,#4]
 2769 00a8 FA68     	 ldr r2,[r7,#12]
 2770 00aa C3F8A820 	 str r2,[r3,#168]
1238:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2771              	 .loc 2 1238 0
 2772 00ae 1C37     	 adds r7,r7,#28
 2773              	.LCFI223:
 2774              	 .cfi_def_cfa_offset 4
 2775 00b0 BD46     	 mov sp,r7
 2776              	.LCFI224:
 2777              	 .cfi_def_cfa_register 13
 2778              	 
 2779 00b2 5DF8047B 	 ldr r7,[sp],#4
 2780              	.LCFI225:
 2781              	 .cfi_restore 7
 2782              	 .cfi_def_cfa_offset 0
 2783 00b6 7047     	 bx lr
 2784              	 .cfi_endproc
 2785              	.LFE241:
 2787              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 2788              	 .align 2
 2789              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 2790              	 .thumb
 2791              	 .thumb_func
 2793              	XMC_CCU8_SLICE_SetPassiveLevel:
 2794              	.LFB242:
1239:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1240:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1241:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1242:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1243:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1244:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2795              	 .loc 2 1244 0
 2796              	 .cfi_startproc
 2797              	 
 2798              	 
 2799              	 
 2800 0000 80B4     	 push {r7}
 2801              	.LCFI226:
 2802              	 .cfi_def_cfa_offset 4
 2803              	 .cfi_offset 7,-4
 2804 0002 85B0     	 sub sp,sp,#20
 2805              	.LCFI227:
 2806              	 .cfi_def_cfa_offset 24
 2807 0004 00AF     	 add r7,sp,#0
 2808              	.LCFI228:
 2809              	 .cfi_def_cfa_register 7
 2810 0006 7860     	 str r0,[r7,#4]
 2811 0008 0B46     	 mov r3,r1
 2812 000a FB70     	 strb r3,[r7,#3]
 2813 000c 1346     	 mov r3,r2
 2814 000e BB70     	 strb r3,[r7,#2]
1245:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1246:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1247:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1248:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1249:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1250:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1251:../Libraries/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1252:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1253:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 2815              	 .loc 2 1253 0
 2816 0010 7B68     	 ldr r3,[r7,#4]
 2817 0012 9B69     	 ldr r3,[r3,#24]
 2818 0014 FB60     	 str r3,[r7,#12]
1254:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1255:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 2819              	 .loc 2 1255 0
 2820 0016 FB78     	 ldrb r3,[r7,#3]
 2821 0018 DB43     	 mvns r3,r3
 2822 001a FA68     	 ldr r2,[r7,#12]
 2823 001c 1340     	 ands r3,r3,r2
 2824 001e FB60     	 str r3,[r7,#12]
1256:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 2825              	 .loc 2 1256 0
 2826 0020 BB78     	 ldrb r3,[r7,#2]
 2827 0022 FA78     	 ldrb r2,[r7,#3]
 2828 0024 5208     	 lsrs r2,r2,#1
 2829 0026 D2B2     	 uxtb r2,r2
 2830 0028 9340     	 lsls r3,r3,r2
 2831 002a FA68     	 ldr r2,[r7,#12]
 2832 002c 1343     	 orrs r3,r3,r2
 2833 002e FB60     	 str r3,[r7,#12]
1257:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1258:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1259:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 2834              	 .loc 2 1259 0
 2835 0030 7B68     	 ldr r3,[r7,#4]
 2836 0032 FA68     	 ldr r2,[r7,#12]
 2837 0034 9A61     	 str r2,[r3,#24]
1260:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2838              	 .loc 2 1260 0
 2839 0036 1437     	 adds r7,r7,#20
 2840              	.LCFI229:
 2841              	 .cfi_def_cfa_offset 4
 2842 0038 BD46     	 mov sp,r7
 2843              	.LCFI230:
 2844              	 .cfi_def_cfa_register 13
 2845              	 
 2846 003a 5DF8047B 	 ldr r7,[sp],#4
 2847              	.LCFI231:
 2848              	 .cfi_restore 7
 2849              	 .cfi_def_cfa_offset 0
 2850 003e 7047     	 bx lr
 2851              	 .cfi_endproc
 2852              	.LFE242:
 2854              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 2855              	 .align 2
 2856              	 .global XMC_CCU8_SLICE_DeadTimeInit
 2857              	 .thumb
 2858              	 .thumb_func
 2860              	XMC_CCU8_SLICE_DeadTimeInit:
 2861              	.LFB243:
1261:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1262:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1263:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1264:../Libraries/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1265:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2862              	 .loc 2 1265 0
 2863              	 .cfi_startproc
 2864              	 
 2865              	 
 2866              	 
 2867 0000 80B4     	 push {r7}
 2868              	.LCFI232:
 2869              	 .cfi_def_cfa_offset 4
 2870              	 .cfi_offset 7,-4
 2871 0002 83B0     	 sub sp,sp,#12
 2872              	.LCFI233:
 2873              	 .cfi_def_cfa_offset 16
 2874 0004 00AF     	 add r7,sp,#0
 2875              	.LCFI234:
 2876              	 .cfi_def_cfa_register 7
 2877 0006 7860     	 str r0,[r7,#4]
 2878 0008 3960     	 str r1,[r7]
1266:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1267:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1268:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1269:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 2879              	 .loc 2 1269 0
 2880 000a 3B68     	 ldr r3,[r7]
 2881 000c 5A68     	 ldr r2,[r3,#4]
 2882 000e 7B68     	 ldr r3,[r7,#4]
 2883 0010 1A65     	 str r2,[r3,#80]
1270:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1271:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 2884              	 .loc 2 1271 0
 2885 0012 3B68     	 ldr r3,[r7]
 2886 0014 9A68     	 ldr r2,[r3,#8]
 2887 0016 7B68     	 ldr r3,[r7,#4]
 2888 0018 5A65     	 str r2,[r3,#84]
1272:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1273:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 2889              	 .loc 2 1273 0
 2890 001a 3B68     	 ldr r3,[r7]
 2891 001c 1A68     	 ldr r2,[r3]
 2892 001e 7B68     	 ldr r3,[r7,#4]
 2893 0020 DA64     	 str r2,[r3,#76]
1274:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2894              	 .loc 2 1274 0
 2895 0022 0C37     	 adds r7,r7,#12
 2896              	.LCFI235:
 2897              	 .cfi_def_cfa_offset 4
 2898 0024 BD46     	 mov sp,r7
 2899              	.LCFI236:
 2900              	 .cfi_def_cfa_register 13
 2901              	 
 2902 0026 5DF8047B 	 ldr r7,[sp],#4
 2903              	.LCFI237:
 2904              	 .cfi_restore 7
 2905              	 .cfi_def_cfa_offset 0
 2906 002a 7047     	 bx lr
 2907              	 .cfi_endproc
 2908              	.LFE243:
 2910              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 2911              	 .align 2
 2912              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 2913              	 .thumb
 2914              	 .thumb_func
 2916              	XMC_CCU8_SLICE_ConfigureDeadTime:
 2917              	.LFB244:
1275:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1276:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1277:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1278:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2918              	 .loc 2 1278 0
 2919              	 .cfi_startproc
 2920              	 
 2921              	 
 2922              	 
 2923 0000 80B4     	 push {r7}
 2924              	.LCFI238:
 2925              	 .cfi_def_cfa_offset 4
 2926              	 .cfi_offset 7,-4
 2927 0002 83B0     	 sub sp,sp,#12
 2928              	.LCFI239:
 2929              	 .cfi_def_cfa_offset 16
 2930 0004 00AF     	 add r7,sp,#0
 2931              	.LCFI240:
 2932              	 .cfi_def_cfa_register 7
 2933 0006 7860     	 str r0,[r7,#4]
 2934 0008 0B46     	 mov r3,r1
 2935 000a FB70     	 strb r3,[r7,#3]
1279:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1281:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1282:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 2936              	 .loc 2 1282 0
 2937 000c 7B68     	 ldr r3,[r7,#4]
 2938 000e DB6C     	 ldr r3,[r3,#76]
 2939 0010 23F03F02 	 bic r2,r3,#63
 2940 0014 7B68     	 ldr r3,[r7,#4]
 2941 0016 DA64     	 str r2,[r3,#76]
1283:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 2942              	 .loc 2 1283 0
 2943 0018 7B68     	 ldr r3,[r7,#4]
 2944 001a DA6C     	 ldr r2,[r3,#76]
 2945 001c FB78     	 ldrb r3,[r7,#3]
 2946 001e 1A43     	 orrs r2,r2,r3
 2947 0020 7B68     	 ldr r3,[r7,#4]
 2948 0022 DA64     	 str r2,[r3,#76]
1284:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2949              	 .loc 2 1284 0
 2950 0024 0C37     	 adds r7,r7,#12
 2951              	.LCFI241:
 2952              	 .cfi_def_cfa_offset 4
 2953 0026 BD46     	 mov sp,r7
 2954              	.LCFI242:
 2955              	 .cfi_def_cfa_register 13
 2956              	 
 2957 0028 5DF8047B 	 ldr r7,[sp],#4
 2958              	.LCFI243:
 2959              	 .cfi_restore 7
 2960              	 .cfi_def_cfa_offset 0
 2961 002c 7047     	 bx lr
 2962              	 .cfi_endproc
 2963              	.LFE244:
 2965 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 2966              	 .align 2
 2967              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 2968              	 .thumb
 2969              	 .thumb_func
 2971              	XMC_CCU8_SLICE_SetDeadTimeValue:
 2972              	.LFB245:
1285:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1286:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1287:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1288:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1289:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1290:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1291:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2973              	 .loc 2 1291 0
 2974              	 .cfi_startproc
 2975              	 
 2976              	 
 2977              	 
 2978 0000 80B4     	 push {r7}
 2979              	.LCFI244:
 2980              	 .cfi_def_cfa_offset 4
 2981              	 .cfi_offset 7,-4
 2982 0002 83B0     	 sub sp,sp,#12
 2983              	.LCFI245:
 2984              	 .cfi_def_cfa_offset 16
 2985 0004 00AF     	 add r7,sp,#0
 2986              	.LCFI246:
 2987              	 .cfi_def_cfa_register 7
 2988 0006 7860     	 str r0,[r7,#4]
 2989 0008 0846     	 mov r0,r1
 2990 000a 1146     	 mov r1,r2
 2991 000c 1A46     	 mov r2,r3
 2992 000e 0346     	 mov r3,r0
 2993 0010 FB70     	 strb r3,[r7,#3]
 2994 0012 0B46     	 mov r3,r1
 2995 0014 BB70     	 strb r3,[r7,#2]
 2996 0016 1346     	 mov r3,r2
 2997 0018 7B70     	 strb r3,[r7,#1]
1292:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1293:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1294:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1295:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2998              	 .loc 2 1295 0
 2999 001a FB78     	 ldrb r3,[r7,#3]
 3000 001c 002B     	 cmp r3,#0
 3001 001e 06D1     	 bne .L96
1296:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1297:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 3002              	 .loc 2 1297 0
 3003 0020 7B78     	 ldrb r3,[r7,#1]
 3004 0022 1A02     	 lsls r2,r3,#8
 3005 0024 BB78     	 ldrb r3,[r7,#2]
 3006 0026 1A43     	 orrs r2,r2,r3
 3007 0028 7B68     	 ldr r3,[r7,#4]
 3008 002a 1A65     	 str r2,[r3,#80]
 3009 002c 05E0     	 b .L95
 3010              	.L96:
1298:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1299:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1300:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1301:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 3011              	 .loc 2 1301 0
 3012 002e 7B78     	 ldrb r3,[r7,#1]
 3013 0030 1A02     	 lsls r2,r3,#8
 3014 0032 BB78     	 ldrb r3,[r7,#2]
 3015 0034 1A43     	 orrs r2,r2,r3
 3016 0036 7B68     	 ldr r3,[r7,#4]
 3017 0038 5A65     	 str r2,[r3,#84]
 3018              	.L95:
1302:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1303:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3019              	 .loc 2 1303 0
 3020 003a 0C37     	 adds r7,r7,#12
 3021              	.LCFI247:
 3022              	 .cfi_def_cfa_offset 4
 3023 003c BD46     	 mov sp,r7
 3024              	.LCFI248:
 3025              	 .cfi_def_cfa_register 13
 3026              	 
 3027 003e 5DF8047B 	 ldr r7,[sp],#4
 3028              	.LCFI249:
 3029              	 .cfi_restore 7
 3030              	 .cfi_def_cfa_offset 0
 3031 0042 7047     	 bx lr
 3032              	 .cfi_endproc
 3033              	.LFE245:
 3035              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 3036              	 .align 2
 3037              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 3038              	 .thumb
 3039              	 .thumb_func
 3041              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 3042              	.LFB246:
1304:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1305:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1306:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1307:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3043              	 .loc 2 1307 0
 3044              	 .cfi_startproc
 3045              	 
 3046              	 
 3047              	 
 3048 0000 80B4     	 push {r7}
 3049              	.LCFI250:
 3050              	 .cfi_def_cfa_offset 4
 3051              	 .cfi_offset 7,-4
 3052 0002 83B0     	 sub sp,sp,#12
 3053              	.LCFI251:
 3054              	 .cfi_def_cfa_offset 16
 3055 0004 00AF     	 add r7,sp,#0
 3056              	.LCFI252:
 3057              	 .cfi_def_cfa_register 7
 3058 0006 7860     	 str r0,[r7,#4]
 3059 0008 0B46     	 mov r3,r1
 3060 000a FB70     	 strb r3,[r7,#3]
1308:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1309:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1311:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 3061              	 .loc 2 1311 0
 3062 000c 7B68     	 ldr r3,[r7,#4]
 3063 000e DB6C     	 ldr r3,[r3,#76]
 3064 0010 23F0C002 	 bic r2,r3,#192
 3065 0014 7B68     	 ldr r3,[r7,#4]
 3066 0016 DA64     	 str r2,[r3,#76]
1312:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3067              	 .loc 2 1312 0
 3068 0018 7B68     	 ldr r3,[r7,#4]
 3069 001a DA6C     	 ldr r2,[r3,#76]
 3070 001c FB78     	 ldrb r3,[r7,#3]
 3071 001e 9B01     	 lsls r3,r3,#6
 3072 0020 1A43     	 orrs r2,r2,r3
 3073 0022 7B68     	 ldr r3,[r7,#4]
 3074 0024 DA64     	 str r2,[r3,#76]
1313:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3075              	 .loc 2 1313 0
 3076 0026 0C37     	 adds r7,r7,#12
 3077              	.LCFI253:
 3078              	 .cfi_def_cfa_offset 4
 3079 0028 BD46     	 mov sp,r7
 3080              	.LCFI254:
 3081              	 .cfi_def_cfa_register 13
 3082              	 
 3083 002a 5DF8047B 	 ldr r7,[sp],#4
 3084              	.LCFI255:
 3085              	 .cfi_restore 7
 3086              	 .cfi_def_cfa_offset 0
 3087 002e 7047     	 bx lr
 3088              	 .cfi_endproc
 3089              	.LFE246:
 3091              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3092              	 .align 2
 3093              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3094              	 .thumb
 3095              	 .thumb_func
 3097              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3098              	.LFB247:
1314:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1315:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1316:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1317:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3099              	 .loc 2 1317 0
 3100              	 .cfi_startproc
 3101              	 
 3102              	 
 3103              	 
 3104 0000 80B4     	 push {r7}
 3105              	.LCFI256:
 3106              	 .cfi_def_cfa_offset 4
 3107              	 .cfi_offset 7,-4
 3108 0002 83B0     	 sub sp,sp,#12
 3109              	.LCFI257:
 3110              	 .cfi_def_cfa_offset 16
 3111 0004 00AF     	 add r7,sp,#0
 3112              	.LCFI258:
 3113              	 .cfi_def_cfa_register 7
 3114 0006 7860     	 str r0,[r7,#4]
 3115 0008 0B46     	 mov r3,r1
 3116 000a FB70     	 strb r3,[r7,#3]
1318:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1319:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1320:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1321:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3117              	 .loc 2 1321 0
 3118 000c 7B68     	 ldr r3,[r7,#4]
 3119 000e 5B69     	 ldr r3,[r3,#20]
 3120 0010 23F0C042 	 bic r2,r3,#1610612736
 3121 0014 7B68     	 ldr r3,[r7,#4]
 3122 0016 5A61     	 str r2,[r3,#20]
1322:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3123              	 .loc 2 1322 0
 3124 0018 7B68     	 ldr r3,[r7,#4]
 3125 001a 5A69     	 ldr r2,[r3,#20]
 3126 001c FB78     	 ldrb r3,[r7,#3]
 3127 001e 5B07     	 lsls r3,r3,#29
 3128 0020 1A43     	 orrs r2,r2,r3
 3129 0022 7B68     	 ldr r3,[r7,#4]
 3130 0024 5A61     	 str r2,[r3,#20]
1323:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3131              	 .loc 2 1323 0
 3132 0026 0C37     	 adds r7,r7,#12
 3133              	.LCFI259:
 3134              	 .cfi_def_cfa_offset 4
 3135 0028 BD46     	 mov sp,r7
 3136              	.LCFI260:
 3137              	 .cfi_def_cfa_register 13
 3138              	 
 3139 002a 5DF8047B 	 ldr r7,[sp],#4
 3140              	.LCFI261:
 3141              	 .cfi_restore 7
 3142              	 .cfi_def_cfa_offset 0
 3143 002e 7047     	 bx lr
 3144              	 .cfi_endproc
 3145              	.LFE247:
 3147              	 .text
 3148              	.Letext0:
 3149              	 .file 3 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3150              	 .file 4 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3151              	 .file 5 "D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3152              	 .file 6 "D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/XMCLib/inc/xmc4_scu.h"
 3153              	 .file 7 "D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/CMSIS/Include/core_cm4.h"
 3154              	 .file 8 "D:/XMC_HandController/DAVE_HandController/UART_Serial_Test/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:20     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:66     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:70     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:109    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:113    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:154    .text.XMC_CCU8_lAssertReset:00000000 $t
    {standard input}:158    .text.XMC_CCU8_lAssertReset:00000000 XMC_CCU8_lAssertReset
    {standard input}:212    .text.XMC_CCU8_lAssertReset:00000030 $d
    {standard input}:218    .text.XMC_CCU8_lDeassertReset:00000000 $t
    {standard input}:222    .text.XMC_CCU8_lDeassertReset:00000000 XMC_CCU8_lDeassertReset
    {standard input}:275    .text.XMC_CCU8_lDeassertReset:00000030 $d
    {standard input}:281    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:286    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:323    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:328    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:362    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:367    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:424    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:429    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:484    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:489    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:572    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:577    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:641    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:646    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:703    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:708    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:765    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:770    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:849    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:854    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:929    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:934    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:989    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:994    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:1049   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:1054   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1164   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1169   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1224   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1229   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1284   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1289   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1344   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1349   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1404   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1409   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1464   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1469   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1520   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1525   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1618   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1623   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1756   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1761   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:1899   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:1904   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:1974   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1979   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:2039   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2044   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2104   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2109   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2150   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2155   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2200   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2205   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2323   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2328   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 XMC_CCU8_GetCapturedValueFromFifo
    {standard input}:2386   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2391   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2466   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2471   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2530   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2535   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2589   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2594   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2649   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2654   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2688   .text.XMC_CCU8_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2698   .text.XMC_CCU8_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2788   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2793   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:2855   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:2860   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:2911   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:2916   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:2966   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:2971   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:3036   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:3041   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3092   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3097   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_EnableClock
