   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbh.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              	 .file 1 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V4.30
   5:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  * @date     20. October 2015
   6:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
   9:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    All rights reserved.
  10:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      to endorse or promote products derived from this software without
  19:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      specific prior written permission.
  20:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    *
  21:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  35:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
  40:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  41:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  45:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  46:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  47:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  48:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
  49:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
  51:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  57:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  59:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  60:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
  63:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  64:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  66:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  67:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  68:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
  69:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  70:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
  71:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
  72:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*  CMSIS CM4 definitions */
  74:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  79:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  81:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  82:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __CC_ARM )
  83:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  87:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  92:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
  93:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
  97:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
  98:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 102:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 103:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 106:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 107:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 111:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 112:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __packed
 113:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 117:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #else
 118:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #error Unknown compiler
 119:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 120:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 121:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
 124:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
 125:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 149:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 161:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 162:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 164:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 165:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 167:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 168:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 169:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 170:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 171:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 172:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 173:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 176:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 177:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 179:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 180:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 181:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 182:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 183:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 184:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 185:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 186:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 188:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 189:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 191:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 192:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 193:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 194:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 195:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 196:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 197:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 200:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #else
 201:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 203:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 204:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #else
 205:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 206:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 207:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 208:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 209:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 210:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 214:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 215:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
 216:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 217:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 218:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 220:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 222:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 225:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 226:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 227:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 228:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 230:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 232:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 233:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 235:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 236:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 237:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 238:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 240:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 241:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 242:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 243:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 245:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 246:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 250:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 251:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 255:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 256:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 257:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 259:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 261:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 263:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
 265:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 266:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #else
 268:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
 270:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 273:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 274:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 278:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 279:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 280:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 281:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 282:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 283:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 284:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 285:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 286:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 287:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 288:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 289:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 290:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 291:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 292:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 293:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 294:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
 297:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 298:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 299:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 300:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 302:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 303:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 304:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 305:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 306:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 308:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 309:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 310:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   struct
 311:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
 312:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 323:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 324:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 325:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 328:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 331:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 334:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 337:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 340:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 343:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 344:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 345:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 347:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 348:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 349:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   struct
 350:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
 351:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 356:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 357:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 358:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 362:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 363:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 365:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 366:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 367:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   struct
 368:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
 369:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 383:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 384:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 385:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 388:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 391:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 394:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 397:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 400:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 403:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 406:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 409:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 412:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 413:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 414:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 416:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 417:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 418:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   struct
 419:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
 420:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 427:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 428:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 429:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 432:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 435:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 438:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 440:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 441:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 442:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 443:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 446:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 447:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 448:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 449:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 451:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 452:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 453:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 455:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 457:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 459:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 461:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 463:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 465:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 467:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 468:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 472:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 474:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 476:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 477:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 480:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 481:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 482:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 483:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 485:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 486:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 487:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 507:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 509:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 510:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 511:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 514:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 517:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 520:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 523:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 530:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 533:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 536:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 539:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 542:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 545:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 548:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 551:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 554:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 557:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 561:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 565:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 568:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 571:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 574:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 577:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 580:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 583:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 584:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 587:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 590:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 593:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 597:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 600:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 603:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 606:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 609:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 612:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 616:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 619:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 622:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 625:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 628:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 631:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 634:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 637:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 640:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 643:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 646:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 649:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 652:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 655:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 659:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 662:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 669:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 672:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 675:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 679:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 682:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 685:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 688:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 691:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 693:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 694:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 695:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 696:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 699:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 700:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 701:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 702:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 704:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 705:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 706:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 707:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 710:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 711:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 715:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 719:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 722:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 725:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 728:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 731:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 733:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 734:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 735:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 736:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 739:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 740:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 741:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 742:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 744:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 745:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 746:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 751:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 752:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 759:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 762:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 765:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 766:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 769:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 770:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 773:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 777:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 783:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 785:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 786:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 787:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 788:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 791:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 792:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 793:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 794:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 796:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 797:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 798:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 799:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
 800:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 805:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 807:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 809:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 811:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 815:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 818:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 831:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 832:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 836:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 840:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 843:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 846:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 849:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 852:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 855:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 858:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 861:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 864:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 868:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 872:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 876:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 880:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 886:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 889:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 896:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 901:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 926:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 930:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 933:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 936:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 939:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 942:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 945:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 948:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 951:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 954:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 957:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 960:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 963:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 966:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 969:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 972:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 975:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 981:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 985:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 989:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 993:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
 997:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1001:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1005:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1009:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1012:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1015:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1018:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1021:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1024:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1027:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1030:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1033:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1043:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1048:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1074:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1078:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1082:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1086:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1089:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1092:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1095:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1099:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1102:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1106:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1110:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1113:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1116:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1119:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1122:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1128:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1132:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1136:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1139:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1142:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1145:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1148:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1151:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1154:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1158:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1162:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1163:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1166:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1169:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1172:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1175:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1178:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1181:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1185:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1188:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1190:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1191:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1193:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1194:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1197:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1198:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1199:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1200:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1202:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1203:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1204:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1216:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1217:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1218:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1221:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1224:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1227:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1228:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1231:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1234:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1237:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1238:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1241:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1245:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1248:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1251:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1255:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1258:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1261:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1267:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1270:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1273:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1276:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1279:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1282:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
1284:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1285:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1286:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1288:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1289:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1292:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1293:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1294:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1297:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1298:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1299:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1300:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1306:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1307:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1311:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1314:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1317:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1320:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1323:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1326:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1329:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1332:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1335:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1339:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1343:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1346:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1349:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1352:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1356:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1359:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1362:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1365:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1368:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1371:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1374:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1377:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
1392:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1393:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1394:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1395:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1396:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1399:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1400:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1401:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1402:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1404:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1405:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1406:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1411:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1412:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1416:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1419:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1422:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1425:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1428:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1431:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1434:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1437:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1440:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1446:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1449:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1453:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1456:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1460:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1463:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1466:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1469:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1472:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1475:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1478:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1481:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1484:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1493:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1496:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1498:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1499:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1500:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1501:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1504:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1505:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1506:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1507:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field.
1510:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1511:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
1512:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1514:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1515:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register.
1518:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1519:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
1520:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1522:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1524:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1525:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1526:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1527:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1530:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1531:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1532:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1542:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1551:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
1555:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1556:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** #endif
1560:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1561:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1562:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1563:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1564:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1565:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1566:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1567:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1568:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1569:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1570:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1571:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1572:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1573:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1574:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** */
1576:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1577:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1578:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1579:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1581:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   @{
1585:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1586:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1587:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1588:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1589:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1592:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1593:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1598:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1599:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1601:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
1608:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1609:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1610:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1611:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1612:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1615:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1617:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
1619:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1620:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1621:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1622:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable External Interrupt
1623:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1626:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1627 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
1628:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  44              	 .loc 1 1628 0
  45 000a 0849     	 ldr r1,.L2
  46 000c 97F90730 	 ldrsb r3,[r7,#7]
  47 0010 5B09     	 lsrs r3,r3,#5
  48 0012 FA79     	 ldrb r2,[r7,#7]
  49 0014 02F01F02 	 and r2,r2,#31
  50 0018 0120     	 movs r0,#1
  51 001a 00FA02F2 	 lsl r2,r0,r2
  52 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1629:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
  53              	 .loc 1 1629 0
  54 0022 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0024 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0026 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 002a 7047     	 bx lr
  66              	.L3:
  67              	 .align 2
  68              	.L2:
  69 002c 00E100E0 	 .word -536813312
  70              	 .cfi_endproc
  71              	.LFE108:
  73              	 .section .text.NVIC_DisableIRQ,"ax",%progbits
  74              	 .align 2
  75              	 .thumb
  76              	 .thumb_func
  78              	NVIC_DisableIRQ:
  79              	.LFB109:
1630:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1631:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1632:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1633:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable External Interrupt
1634:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1637:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
  80              	 .loc 1 1638 0
  81              	 .cfi_startproc
  82              	 
  83              	 
  84              	 
  85 0000 80B4     	 push {r7}
  86              	.LCFI6:
  87              	 .cfi_def_cfa_offset 4
  88              	 .cfi_offset 7,-4
  89 0002 83B0     	 sub sp,sp,#12
  90              	.LCFI7:
  91              	 .cfi_def_cfa_offset 16
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI8:
  94              	 .cfi_def_cfa_register 7
  95 0006 0346     	 mov r3,r0
  96 0008 FB71     	 strb r3,[r7,#7]
1639:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  97              	 .loc 1 1639 0
  98 000a 0949     	 ldr r1,.L5
  99 000c 97F90730 	 ldrsb r3,[r7,#7]
 100 0010 5B09     	 lsrs r3,r3,#5
 101 0012 FA79     	 ldrb r2,[r7,#7]
 102 0014 02F01F02 	 and r2,r2,#31
 103 0018 0120     	 movs r0,#1
 104 001a 00FA02F2 	 lsl r2,r0,r2
 105 001e 2033     	 adds r3,r3,#32
 106 0020 41F82320 	 str r2,[r1,r3,lsl#2]
1640:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
 107              	 .loc 1 1640 0
 108 0024 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0026 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 0028 5DF8047B 	 ldr r7,[sp],#4
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 002c 7047     	 bx lr
 120              	.L6:
 121 002e 00BF     	 .align 2
 122              	.L5:
 123 0030 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE109:
 127              	 .section .text.NVIC_ClearPendingIRQ,"ax",%progbits
 128              	 .align 2
 129              	 .thumb
 130              	 .thumb_func
 132              	NVIC_ClearPendingIRQ:
 133              	.LFB112:
1641:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1642:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1643:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1644:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1645:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1649:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1650:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1652:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
1654:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1655:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1656:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1657:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1658:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1661:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1663:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
1665:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1666:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1667:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1668:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1669:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1672:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 134              	 .loc 1 1673 0
 135              	 .cfi_startproc
 136              	 
 137              	 
 138              	 
 139 0000 80B4     	 push {r7}
 140              	.LCFI12:
 141              	 .cfi_def_cfa_offset 4
 142              	 .cfi_offset 7,-4
 143 0002 83B0     	 sub sp,sp,#12
 144              	.LCFI13:
 145              	 .cfi_def_cfa_offset 16
 146 0004 00AF     	 add r7,sp,#0
 147              	.LCFI14:
 148              	 .cfi_def_cfa_register 7
 149 0006 0346     	 mov r3,r0
 150 0008 FB71     	 strb r3,[r7,#7]
1674:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 151              	 .loc 1 1674 0
 152 000a 0949     	 ldr r1,.L8
 153 000c 97F90730 	 ldrsb r3,[r7,#7]
 154 0010 5B09     	 lsrs r3,r3,#5
 155 0012 FA79     	 ldrb r2,[r7,#7]
 156 0014 02F01F02 	 and r2,r2,#31
 157 0018 0120     	 movs r0,#1
 158 001a 00FA02F2 	 lsl r2,r0,r2
 159 001e 6033     	 adds r3,r3,#96
 160 0020 41F82320 	 str r2,[r1,r3,lsl#2]
1675:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
 161              	 .loc 1 1675 0
 162 0024 0C37     	 adds r7,r7,#12
 163              	.LCFI15:
 164              	 .cfi_def_cfa_offset 4
 165 0026 BD46     	 mov sp,r7
 166              	.LCFI16:
 167              	 .cfi_def_cfa_register 13
 168              	 
 169 0028 5DF8047B 	 ldr r7,[sp],#4
 170              	.LCFI17:
 171              	 .cfi_restore 7
 172              	 .cfi_def_cfa_offset 0
 173 002c 7047     	 bx lr
 174              	.L9:
 175 002e 00BF     	 .align 2
 176              	.L8:
 177 0030 00E100E0 	 .word -536813312
 178              	 .cfi_endproc
 179              	.LFE112:
 181              	 .section .text.NVIC_SetPriority,"ax",%progbits
 182              	 .align 2
 183              	 .thumb
 184              	 .thumb_func
 186              	NVIC_SetPriority:
 187              	.LFB114:
1676:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1677:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1678:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1679:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1680:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1683:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1684:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1685:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
1687:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
1689:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1690:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** 
1691:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** /**
1692:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1693:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of an interrupt.
1694:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1697:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****  */
1698:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** {
 188              	 .loc 1 1699 0
 189              	 .cfi_startproc
 190              	 
 191              	 
 192              	 
 193 0000 80B4     	 push {r7}
 194              	.LCFI18:
 195              	 .cfi_def_cfa_offset 4
 196              	 .cfi_offset 7,-4
 197 0002 83B0     	 sub sp,sp,#12
 198              	.LCFI19:
 199              	 .cfi_def_cfa_offset 16
 200 0004 00AF     	 add r7,sp,#0
 201              	.LCFI20:
 202              	 .cfi_def_cfa_register 7
 203 0006 0346     	 mov r3,r0
 204 0008 3960     	 str r1,[r7]
 205 000a FB71     	 strb r3,[r7,#7]
1700:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) < 0)
 206              	 .loc 1 1700 0
 207 000c 97F90730 	 ldrsb r3,[r7,#7]
 208 0010 002B     	 cmp r3,#0
 209 0012 0BDA     	 bge .L11
1701:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
1702:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 210              	 .loc 1 1702 0
 211 0014 0D49     	 ldr r1,.L13
 212 0016 FB79     	 ldrb r3,[r7,#7]
 213 0018 03F00F03 	 and r3,r3,#15
 214 001c 043B     	 subs r3,r3,#4
 215 001e 3A68     	 ldr r2,[r7]
 216 0020 D2B2     	 uxtb r2,r2
 217 0022 9200     	 lsls r2,r2,#2
 218 0024 D2B2     	 uxtb r2,r2
 219 0026 0B44     	 add r3,r3,r1
 220 0028 1A76     	 strb r2,[r3,#24]
 221 002a 09E0     	 b .L10
 222              	.L11:
1703:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   }
1704:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   else
1705:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   {
1706:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 223              	 .loc 1 1706 0
 224 002c 0849     	 ldr r1,.L13+4
 225 002e 97F90730 	 ldrsb r3,[r7,#7]
 226 0032 3A68     	 ldr r2,[r7]
 227 0034 D2B2     	 uxtb r2,r2
 228 0036 9200     	 lsls r2,r2,#2
 229 0038 D2B2     	 uxtb r2,r2
 230 003a 0B44     	 add r3,r3,r1
 231 003c 83F80023 	 strb r2,[r3,#768]
 232              	.L10:
1707:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h ****   }
1708:C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Include\core_cm4.h **** }
 233              	 .loc 1 1708 0
 234 0040 0C37     	 adds r7,r7,#12
 235              	.LCFI21:
 236              	 .cfi_def_cfa_offset 4
 237 0042 BD46     	 mov sp,r7
 238              	.LCFI22:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 0044 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI23:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 0048 7047     	 bx lr
 246              	.L14:
 247 004a 00BF     	 .align 2
 248              	.L13:
 249 004c 00ED00E0 	 .word -536810240
 250 0050 00E100E0 	 .word -536813312
 251              	 .cfi_endproc
 252              	.LFE114:
 254              	 .section .rodata.xmc_usbh_driver_version,"a",%progbits
 255              	 .align 2
 258              	xmc_usbh_driver_version:
 259 0000 0102     	 .short 513
 260 0002 0801     	 .short 264
 261              	 .global VBUS_port
 262              	 .section .data.VBUS_port,"aw",%progbits
 263              	 .align 2
 266              	VBUS_port:
 267 0000 00830248 	 .word 1208124160
 268              	 .global VBUS_pin
 269              	 .section .data.VBUS_pin,"aw",%progbits
 270              	 .align 2
 273              	VBUS_pin:
 274 0000 02000000 	 .word 2
 275              	 .comm is_nack,14,4
 276              	 .section .rodata.xmc_usbh_driver_capabilities,"a",%progbits
 277              	 .align 2
 280              	xmc_usbh_driver_capabilities:
 281 0000 01       	 .byte 1
 282 0001 00       	 .byte 0
 283 0002 03       	 .byte 3
 284 0003 00       	 .space 1
 285              	 .section .data.XMC_USBH0_device,"aw",%progbits
 286              	 .align 2
 289              	XMC_USBH0_device:
 290 0000 00000450 	 .word 1342439424
 291 0004 00050450 	 .word 1342440704
 292 0008 00000000 	 .word 0
 293 000c 00000000 	 .word 0
 294 0010 00       	 .byte 0
 295 0011 00       	 .byte 0
 296 0012 00       	 .byte 0
 297 0013 00       	 .space 1
 298              	 .comm pipe,448,4
 299              	 .section .bss.XMC_USBH0_dfifo_ptr,"aw",%nobits
 300              	 .align 2
 303              	XMC_USBH0_dfifo_ptr:
 304 0000 00000000 	 .space 56
 304      00000000 
 304      00000000 
 304      00000000 
 304      00000000 
 305              	 .section .text.XMC_lClockGating,"ax",%progbits
 306              	 .align 2
 307              	 .thumb
 308              	 .thumb_func
 310              	XMC_lClockGating:
 311              	.LFB172:
 312              	 .file 2 "../Libraries/XMCLib/src/xmc_usbh.c"
   1:../Libraries/XMCLib/src/xmc_usbh.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbh.c ****  * @file xmc_usbh.c
   3:../Libraries/XMCLib/src/xmc_usbh.c ****  * @date 2016-06-30
   4:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbh.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbh.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbh.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbh.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usbh.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usbh.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usbh.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usbh.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usbh.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usbh.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usbh.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usbh.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usbh.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usbh.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usbh.c ****  * (To improve the quality of the software, users are encouraged to share modifications, enhancemen
  33:../Libraries/XMCLib/src/xmc_usbh.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  35:../Libraries/XMCLib/src/xmc_usbh.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  37:../Libraries/XMCLib/src/xmc_usbh.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_usbh.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  40:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-06-30:
  41:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-09-01:
  43:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Removed Keil specific exclusion<br>
  44:../Libraries/XMCLib/src/xmc_usbh.c ****  *      
  45:../Libraries/XMCLib/src/xmc_usbh.c ****  * @endcond 
  46:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  47:../Libraries/XMCLib/src/xmc_usbh.c ****  */
  48:../Libraries/XMCLib/src/xmc_usbh.c **** 
  49:../Libraries/XMCLib/src/xmc_usbh.c **** #include <stdint.h>
  50:../Libraries/XMCLib/src/xmc_usbh.c **** #include <string.h>
  51:../Libraries/XMCLib/src/xmc_usbh.c **** 
  52:../Libraries/XMCLib/src/xmc_usbh.c **** #include "xmc_usbh.h"
  53:../Libraries/XMCLib/src/xmc_usbh.c **** 
  54:../Libraries/XMCLib/src/xmc_usbh.c **** #if((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC43) || (UC_SERIES == XMC47) ||
  55:../Libraries/XMCLib/src/xmc_usbh.c **** 
  56:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides transfer result*/
  57:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl);
  58:../Libraries/XMCLib/src/xmc_usbh.c **** /*Updates the power state of the driver*/
  59:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state);
  60:../Libraries/XMCLib/src/xmc_usbh.c **** 
  61:../Libraries/XMCLib/src/xmc_usbh.c **** /*********************************************************** USBH Driver **************************
  62:../Libraries/XMCLib/src/xmc_usbh.c **** 
  63:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro to represent USB host driver version*/
  64:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_DRV_VERSION ((uint16_t)((uint16_t)XMC_LIB_MINOR_VERSION << 8U)|XMC_LIB_PATCH_VERSI
  65:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to gate PHY clock and AHB clock*/
  66:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_STOP  (0x03U)
  67:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to ungate PHY clock and AHB clock*/
  68:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_UNGATE  (0x100U)
  69:../Libraries/XMCLib/src/xmc_usbh.c **** 
  70:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Version */
  71:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_DRIVER_VERSION_t xmc_usbh_driver_version = { XMC_USBH_API_VERSION, XMC_USBH_D
  72:../Libraries/XMCLib/src/xmc_usbh.c **** 
  73:../Libraries/XMCLib/src/xmc_usbh.c **** /*Variables to hold selected VBUS port pin*/
  74:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_GPIO_PORT_t * VBUS_port = XMC_GPIO_PORT3;
  75:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t VBUS_pin = 2U;
  76:../Libraries/XMCLib/src/xmc_usbh.c **** 
  77:../Libraries/XMCLib/src/xmc_usbh.c **** /*Array to track nack events on each pipe*/
  78:../Libraries/XMCLib/src/xmc_usbh.c **** bool is_nack[USBH0_MAX_PIPE_NUM];
  79:../Libraries/XMCLib/src/xmc_usbh.c **** 
  80:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Capabilities */
  81:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_CAPABILITIES_t xmc_usbh_driver_capabilities = {
  82:../Libraries/XMCLib/src/xmc_usbh.c ****   0x0001U,      /* Root HUB available Ports Mask */
  83:../Libraries/XMCLib/src/xmc_usbh.c ****   0U,           /* Automatic SPLIT packet handling */
  84:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Connect event */
  85:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Disconnect event */
  86:../Libraries/XMCLib/src/xmc_usbh.c ****   0U            /* Signal Overcurrent event */
  87:../Libraries/XMCLib/src/xmc_usbh.c **** };
  88:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver state and registers */
  89:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH0_DEVICE_t XMC_USBH0_device/* __attribute__((section ("RW_IRAM1")))*/ = {
  90:../Libraries/XMCLib/src/xmc_usbh.c ****    (USB0_GLOBAL_TypeDef *)(USB0_BASE),    /** Global register interface            */
  91:../Libraries/XMCLib/src/xmc_usbh.c ****    ((USB0_CH_TypeDef *)(USB0_CH0_BASE)),  /** Host channel interface               */
  92:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Port event callback; set during init */
  93:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Pipe event callback; set during init */
  94:../Libraries/XMCLib/src/xmc_usbh.c ****    false,                                 /** init status */
  95:../Libraries/XMCLib/src/xmc_usbh.c ****    XMC_USBH_POWER_OFF,                    /** USB Power status */
  96:../Libraries/XMCLib/src/xmc_usbh.c ****    false                                  /** Port reset state */
  97:../Libraries/XMCLib/src/xmc_usbh.c **** };
  98:../Libraries/XMCLib/src/xmc_usbh.c **** 
  99:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host pipe information. The array stores information related to packet id, data toggle,
 100:../Libraries/XMCLib/src/xmc_usbh.c ****  * pending data transfer information, periodic transfer interval, received data size etc for each
 101:../Libraries/XMCLib/src/xmc_usbh.c ****  * pipe.*/
 102:../Libraries/XMCLib/src/xmc_usbh.c **** volatile XMC_USBH0_pipe_t pipe[USBH0_MAX_PIPE_NUM];
 103:../Libraries/XMCLib/src/xmc_usbh.c **** 
 104:../Libraries/XMCLib/src/xmc_usbh.c **** /* FIFO sizes in bytes (total available memory for FIFOs is 1.25 kB) */
 105:../Libraries/XMCLib/src/xmc_usbh.c **** #define RX_FIFO_SIZE           (1128U)   /* RxFIFO size */
 106:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_NON_PERI  (64U)     /* Non-periodic Tx FIFO size */
 107:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_PERI      (1024U)   /* Periodic Tx FIFO size */
 108:../Libraries/XMCLib/src/xmc_usbh.c **** 
 109:../Libraries/XMCLib/src/xmc_usbh.c **** /*Stores data FIFO pointer for each pipe*/
 110:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t *XMC_USBH0_dfifo_ptr[USBH0_MAX_PIPE_NUM];
 111:../Libraries/XMCLib/src/xmc_usbh.c **** 
 112:../Libraries/XMCLib/src/xmc_usbh.c **** /* Local functions */
 113:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 114:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   enable Enable (XMC_USBH_CLOCK_GATING_ENABLE) or disable(XMC_USBH_CLOCK_GATING_DISABLE) 
 115:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 116:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 117:../Libraries/XMCLib/src/xmc_usbh.c ****  * Enable/disable clock gating depending if feature is supported.
 118:../Libraries/XMCLib/src/xmc_usbh.c **** */
 119:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lClockGating(uint8_t enable)
 120:../Libraries/XMCLib/src/xmc_usbh.c **** {
 313              	 .loc 2 120 0
 314              	 .cfi_startproc
 315              	 
 316              	 
 317              	 
 318 0000 80B4     	 push {r7}
 319              	.LCFI24:
 320              	 .cfi_def_cfa_offset 4
 321              	 .cfi_offset 7,-4
 322 0002 83B0     	 sub sp,sp,#12
 323              	.LCFI25:
 324              	 .cfi_def_cfa_offset 16
 325 0004 00AF     	 add r7,sp,#0
 326              	.LCFI26:
 327              	 .cfi_def_cfa_register 7
 328 0006 0346     	 mov r3,r0
 329 0008 FB71     	 strb r3,[r7,#7]
 121:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined(CLOCK_GATING_SUPPORTED)
 122:../Libraries/XMCLib/src/xmc_usbh.c **** if (enable == XMC_USBH_CLOCK_GATING_ENABLE)
 123:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 124:../Libraries/XMCLib/src/xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_DISABLE)
 125:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 126:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 330              	 .loc 2 127 0
 331 000a 00BF     	 nop
 128:../Libraries/XMCLib/src/xmc_usbh.c **** }
 332              	 .loc 2 128 0
 333 000c 0C37     	 adds r7,r7,#12
 334              	.LCFI27:
 335              	 .cfi_def_cfa_offset 4
 336 000e BD46     	 mov sp,r7
 337              	.LCFI28:
 338              	 .cfi_def_cfa_register 13
 339              	 
 340 0010 5DF8047B 	 ldr r7,[sp],#4
 341              	.LCFI29:
 342              	 .cfi_restore 7
 343              	 .cfi_def_cfa_offset 0
 344 0014 7047     	 bx lr
 345              	 .cfi_endproc
 346              	.LFE172:
 348 0016 00BF     	 .section .text.XMC_lTriggerHaltChannel,"ax",%progbits
 349              	 .align 2
 350              	 .thumb
 351              	 .thumb_func
 353              	XMC_lTriggerHaltChannel:
 354              	.LFB173:
 129:../Libraries/XMCLib/src/xmc_usbh.c **** 
 130:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 131:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch Pointer to Channel
 132:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 133:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 134:../Libraries/XMCLib/src/xmc_usbh.c ****  * Triggers halt of a channel.
 135:../Libraries/XMCLib/src/xmc_usbh.c **** */
 136:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lTriggerHaltChannel(USB0_CH_TypeDef *ptr_ch)
 137:../Libraries/XMCLib/src/xmc_usbh.c **** {
 355              	 .loc 2 137 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359              	 
 360 0000 80B4     	 push {r7}
 361              	.LCFI30:
 362              	 .cfi_def_cfa_offset 4
 363              	 .cfi_offset 7,-4
 364 0002 83B0     	 sub sp,sp,#12
 365              	.LCFI31:
 366              	 .cfi_def_cfa_offset 16
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI32:
 369              	 .cfi_def_cfa_register 7
 370 0006 7860     	 str r0,[r7,#4]
 138:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk; /* Enable halt interrupt */
 371              	 .loc 2 138 0
 372 0008 7B68     	 ldr r3,[r7,#4]
 373 000a 0222     	 movs r2,#2
 374 000c DA60     	 str r2,[r3,#12]
 139:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 375              	 .loc 2 139 0
 376 000e 7B68     	 ldr r3,[r7,#4]
 377 0010 1B68     	 ldr r3,[r3]
 378 0012 43F04042 	 orr r2,r3,#-1073741824
 379 0016 7B68     	 ldr r3,[r7,#4]
 380 0018 1A60     	 str r2,[r3]
 140:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 381              	 .loc 2 140 0
 382 001a 00BF     	 nop
 141:../Libraries/XMCLib/src/xmc_usbh.c **** }
 383              	 .loc 2 141 0
 384 001c 0C37     	 adds r7,r7,#12
 385              	.LCFI33:
 386              	 .cfi_def_cfa_offset 4
 387 001e BD46     	 mov sp,r7
 388              	.LCFI34:
 389              	 .cfi_def_cfa_register 13
 390              	 
 391 0020 5DF8047B 	 ldr r7,[sp],#4
 392              	.LCFI35:
 393              	 .cfi_restore 7
 394              	 .cfi_def_cfa_offset 0
 395 0024 7047     	 bx lr
 396              	 .cfi_endproc
 397              	.LFE173:
 399 0026 00BF     	 .section .text.XMC_lStartTransfer,"ax",%progbits
 400              	 .align 2
 401              	 .thumb
 402              	 .thumb_func
 404              	XMC_lStartTransfer:
 405              	.LFB174:
 142:../Libraries/XMCLib/src/xmc_usbh.c **** 
 143:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 144:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_pipe Pointer to Pipe
 145:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch   Pointer to Channel
 146:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  bool \n
 147:../Libraries/XMCLib/src/xmc_usbh.c ****  *          true = success,\n
 148:../Libraries/XMCLib/src/xmc_usbh.c ****  *          false = fail
 149:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 150:../Libraries/XMCLib/src/xmc_usbh.c ****  * Start transfer on Pipe. The function uses transfer complete interrupts to transfer data more tha
 151:../Libraries/XMCLib/src/xmc_usbh.c ****  * packet size. It takes care of updating data toggle information in subsequent packets related to 
 152:../Libraries/XMCLib/src/xmc_usbh.c **** */
 153:../Libraries/XMCLib/src/xmc_usbh.c **** static bool XMC_lStartTransfer (XMC_USBH0_pipe_t *ptr_pipe, USB0_CH_TypeDef *ptr_ch) {
 406              	 .loc 2 153 0
 407              	 .cfi_startproc
 408              	 
 409              	 
 410 0000 80B5     	 push {r7,lr}
 411              	.LCFI36:
 412              	 .cfi_def_cfa_offset 8
 413              	 .cfi_offset 7,-8
 414              	 .cfi_offset 14,-4
 415 0002 90B0     	 sub sp,sp,#64
 416              	.LCFI37:
 417              	 .cfi_def_cfa_offset 72
 418 0004 00AF     	 add r7,sp,#0
 419              	.LCFI38:
 420              	 .cfi_def_cfa_register 7
 421 0006 7860     	 str r0,[r7,#4]
 422 0008 3960     	 str r1,[r7]
 154:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcchar;
 155:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hctsiz;
 156:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcintmsk;
 157:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_transfer;
 158:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_fifo;
 159:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_queue;
 160:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  txsts = 0U;
 423              	 .loc 2 160 0
 424 000a 0023     	 movs r3,#0
 425 000c FB62     	 str r3,[r7,#44]
 161:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  pckt_num;
 162:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  max_pckt_size;
 163:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t   *ptr_src = ptr_pipe->data;
 426              	 .loc 2 163 0
 427 000e 7B68     	 ldr r3,[r7,#4]
 428 0010 5B68     	 ldr r3,[r3,#4]
 429 0012 7B62     	 str r3,[r7,#36]
 164:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  *ptr_dest = NULL;
 430              	 .loc 2 164 0
 431 0014 0023     	 movs r3,#0
 432 0016 3B62     	 str r3,[r7,#32]
 165:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t  cnt;
 166:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_index;
 167:../Libraries/XMCLib/src/xmc_usbh.c ****   bool status;
 168:../Libraries/XMCLib/src/xmc_usbh.c **** 
 169:../Libraries/XMCLib/src/xmc_usbh.c ****   if (!(XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk))
 433              	 .loc 2 169 0
 434 0018 914B     	 ldr r3,.L52
 435 001a 1B68     	 ldr r3,[r3]
 436 001c D3F84034 	 ldr r3,[r3,#1088]
 437 0020 03F00103 	 and r3,r3,#1
 438 0024 002B     	 cmp r3,#0
 439 0026 02D1     	 bne .L20
 170:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 171:../Libraries/XMCLib/src/xmc_usbh.c ****     status = false;
 440              	 .loc 2 171 0
 441 0028 0023     	 movs r3,#0
 442 002a 7B77     	 strb r3,[r7,#29]
 443 002c 12E1     	 b .L21
 444              	.L20:
 172:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 173:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 174:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 175:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save channel characteristic register to local variable */
 176:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar   = ptr_ch->HCCHAR;
 445              	 .loc 2 176 0
 446 002e 3B68     	 ldr r3,[r7]
 447 0030 1B68     	 ldr r3,[r3]
 448 0032 FB63     	 str r3,[r7,#60]
 177:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save transfer size register to local variable */
 178:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz   = ptr_ch->HCTSIZ_BUFFERMODE;
 449              	 .loc 2 178 0
 450 0034 3B68     	 ldr r3,[r7]
 451 0036 1B69     	 ldr r3,[r3,#16]
 452 0038 BB63     	 str r3,[r7,#56]
 179:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk = 0U;
 453              	 .loc 2 179 0
 454 003a 0023     	 movs r3,#0
 455 003c 7B63     	 str r3,[r7,#52]
 180:../Libraries/XMCLib/src/xmc_usbh.c ****     cnt      = 0U;
 456              	 .loc 2 180 0
 457 003e 0023     	 movs r3,#0
 458 0040 FB83     	 strh r3,[r7,#30]
 181:../Libraries/XMCLib/src/xmc_usbh.c **** 
 182:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare transfer */
 183:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Reset EPDir (transfer direction = output) and enable channel */
 184:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar &= (uint32_t)(~(uint32_t)(USB_CH_HCCHAR_EPDir_Msk | USB_CH_HCCHAR_ChDis_Msk));
 459              	 .loc 2 184 0
 460 0042 FB6B     	 ldr r3,[r7,#60]
 461 0044 23F08043 	 bic r3,r3,#1073741824
 462 0048 23F40043 	 bic r3,r3,#32768
 463 004c FB63     	 str r3,[r7,#60]
 185:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
 464              	 .loc 2 185 0
 465 004e FB6B     	 ldr r3,[r7,#60]
 466 0050 43F00043 	 orr r3,r3,#-2147483648
 467 0054 FB63     	 str r3,[r7,#60]
 186:../Libraries/XMCLib/src/xmc_usbh.c **** 
 187:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Enable default interrupts needed for all transfers */
 188:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk  = (USB_CH_HCINTMSK_XactErrMsk_Msk  |
 468              	 .loc 2 188 0
 469 0056 9923     	 movs r3,#153
 470 0058 7B63     	 str r3,[r7,#52]
 189:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 190:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_NakMsk_Msk    |
 191:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_StallMsk_Msk)  ;
 192:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Keep PID */
 193:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz &=  (uint32_t)USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 471              	 .loc 2 193 0
 472 005a BB6B     	 ldr r3,[r7,#56]
 473 005c 03F0C043 	 and r3,r3,#1610612736
 474 0060 BB63     	 str r3,[r7,#56]
 194:../Libraries/XMCLib/src/xmc_usbh.c **** 
 195:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Packet specific setup */
 196:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_TOKEN_Msk) {
 475              	 .loc 2 196 0
 476 0062 7B68     	 ldr r3,[r7,#4]
 477 0064 1B68     	 ldr r3,[r3]
 478 0066 03F00F03 	 and r3,r3,#15
 479 006a 022B     	 cmp r3,#2
 480 006c 16D0     	 beq .L50
 481 006e 032B     	 cmp r3,#3
 482 0070 02D0     	 beq .L24
 483 0072 012B     	 cmp r3,#1
 484 0074 09D0     	 beq .L25
 197:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 198:../Libraries/XMCLib/src/xmc_usbh.c ****         /* set transfer direction to input */
 199:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar   |=  (uint32_t)USB_CH_HCCHAR_EPDir_Msk;
 200:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 201:../Libraries/XMCLib/src/xmc_usbh.c ****         hcintmsk  |= (uint32_t)( USB_CH_HCINTMSK_DataTglErrMsk_Msk  |
 202:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 203:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_AckMsk_Msk    |
 204:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_NakMsk_Msk )  ;
 205:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 206:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 207:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 208:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_SETUP:
 209:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk  ;
 210:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_MDATA;
 211:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 212:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 213:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 485              	 .loc 2 213 0
 486 0076 12E0     	 b .L26
 487              	.L24:
 199:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 488              	 .loc 2 199 0
 489 0078 FB6B     	 ldr r3,[r7,#60]
 490 007a 43F40043 	 orr r3,r3,#32768
 491 007e FB63     	 str r3,[r7,#60]
 201:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 492              	 .loc 2 201 0
 493 0080 7B6B     	 ldr r3,[r7,#52]
 494 0082 43F4A663 	 orr r3,r3,#1328
 495 0086 7B63     	 str r3,[r7,#52]
 205:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 496              	 .loc 2 205 0
 497 0088 09E0     	 b .L26
 498              	.L25:
 209:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_MDATA;
 499              	 .loc 2 209 0
 500 008a BB6B     	 ldr r3,[r7,#56]
 501 008c 23F0C043 	 bic r3,r3,#1610612736
 502 0090 BB63     	 str r3,[r7,#56]
 210:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 503              	 .loc 2 210 0
 504 0092 BB6B     	 ldr r3,[r7,#56]
 505 0094 43F0C043 	 orr r3,r3,#1610612736
 506 0098 BB63     	 str r3,[r7,#56]
 211:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 507              	 .loc 2 211 0
 508 009a 00E0     	 b .L26
 509              	.L50:
 207:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_SETUP:
 510              	 .loc 2 207 0
 511 009c 00BF     	 nop
 512              	.L26:
 214:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 215:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare PID */
 216:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_DATA_Msk) {
 513              	 .loc 2 216 0
 514 009e 7B68     	 ldr r3,[r7,#4]
 515 00a0 1B68     	 ldr r3,[r3]
 516 00a2 03F0F003 	 and r3,r3,#240
 517 00a6 102B     	 cmp r3,#16
 518 00a8 02D0     	 beq .L28
 519 00aa 202B     	 cmp r3,#32
 520 00ac 05D0     	 beq .L29
 217:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA0:
 218:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 219:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA0;
 220:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 221:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA1:
 222:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 223:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA1;
 224:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 225:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 226:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 521              	 .loc 2 226 0
 522 00ae 0DE0     	 b .L30
 523              	.L28:
 218:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA0;
 524              	 .loc 2 218 0
 525 00b0 BB6B     	 ldr r3,[r7,#56]
 526 00b2 23F0C043 	 bic r3,r3,#1610612736
 527 00b6 BB63     	 str r3,[r7,#56]
 220:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA1:
 528              	 .loc 2 220 0
 529 00b8 08E0     	 b .L30
 530              	.L29:
 222:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA1;
 531              	 .loc 2 222 0
 532 00ba BB6B     	 ldr r3,[r7,#56]
 533 00bc 23F0C043 	 bic r3,r3,#1610612736
 534 00c0 BB63     	 str r3,[r7,#56]
 223:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 535              	 .loc 2 223 0
 536 00c2 BB6B     	 ldr r3,[r7,#56]
 537 00c4 43F08043 	 orr r3,r3,#1073741824
 538 00c8 BB63     	 str r3,[r7,#56]
 224:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 539              	 .loc 2 224 0
 540 00ca 00BF     	 nop
 541              	.L30:
 227:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 228:../Libraries/XMCLib/src/xmc_usbh.c **** 
 229:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare odd/even frame */
 230:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((XMC_USBH0_device.global_register->HFNUM & 1U) != 0U) {
 542              	 .loc 2 230 0
 543 00cc 644B     	 ldr r3,.L52
 544 00ce 1B68     	 ldr r3,[r3]
 545 00d0 D3F80834 	 ldr r3,[r3,#1032]
 546 00d4 03F00103 	 and r3,r3,#1
 547 00d8 002B     	 cmp r3,#0
 548 00da 04D0     	 beq .L31
 231:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar &= (uint32_t)~USB_CH_HCCHAR_OddFrm_Msk;
 549              	 .loc 2 231 0
 550 00dc FB6B     	 ldr r3,[r7,#60]
 551 00de 23F00053 	 bic r3,r3,#536870912
 552 00e2 FB63     	 str r3,[r7,#60]
 553 00e4 03E0     	 b .L32
 554              	.L31:
 232:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {
 233:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar |= (uint32_t)USB_CH_HCCHAR_OddFrm_Msk;
 555              	 .loc 2 233 0
 556 00e6 FB6B     	 ldr r3,[r7,#60]
 557 00e8 43F00053 	 orr r3,r3,#536870912
 558 00ec FB63     	 str r3,[r7,#60]
 559              	.L32:
 234:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 235:../Libraries/XMCLib/src/xmc_usbh.c ****   
 236:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Get transfer type specific status */
 237:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->ep_type) {
 560              	 .loc 2 237 0
 561 00ee 7B68     	 ldr r3,[r7,#4]
 562 00f0 9B7E     	 ldrb r3,[r3,#26]
 563 00f2 032B     	 cmp r3,#3
 564 00f4 21D8     	 bhi .L51
 565 00f6 01A2     	 adr r2,.L35
 566 00f8 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 567              	 .p2align 2
 568              	.L35:
 569 00fc 0D010000 	 .word .L34+1
 570 0100 23010000 	 .word .L36+1
 571 0104 0D010000 	 .word .L34+1
 572 0108 23010000 	 .word .L36+1
 573              	 .p2align 1
 574              	.L34:
 238:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 239:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_BULK:
 240:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 575              	 .loc 2 240 0
 576 010c FB6B     	 ldr r3,[r7,#60]
 577 010e 03F40043 	 and r3,r3,#32768
 578 0112 002B     	 cmp r3,#0
 579 0114 04D1     	 bne .L37
 241:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->GNPTXSTS;
 580              	 .loc 2 241 0
 581 0116 524B     	 ldr r3,.L52
 582 0118 1B68     	 ldr r3,[r3]
 583 011a DB6A     	 ldr r3,[r3,#44]
 584 011c FB62     	 str r3,[r7,#44]
 242:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 243:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 585              	 .loc 2 243 0
 586 011e 0DE0     	 b .L38
 587              	.L37:
 588 0120 0CE0     	 b .L38
 589              	.L36:
 244:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 245:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_INTERRUPT:
 246:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 590              	 .loc 2 246 0
 591 0122 FB6B     	 ldr r3,[r7,#60]
 592 0124 03F40043 	 and r3,r3,#32768
 593 0128 002B     	 cmp r3,#0
 594 012a 05D1     	 bne .L39
 247:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->HPTXSTS;
 595              	 .loc 2 247 0
 596 012c 4C4B     	 ldr r3,.L52
 597 012e 1B68     	 ldr r3,[r3]
 598 0130 D3F81034 	 ldr r3,[r3,#1040]
 599 0134 FB62     	 str r3,[r7,#44]
 248:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 249:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 600              	 .loc 2 249 0
 601 0136 01E0     	 b .L38
 602              	.L39:
 603 0138 00E0     	 b .L38
 604              	.L51:
 250:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 251:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 605              	 .loc 2 251 0
 606 013a 00BF     	 nop
 607              	.L38:
 252:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 253:../Libraries/XMCLib/src/xmc_usbh.c ****   
 254:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Calculate remaining transfer size */
 255:../Libraries/XMCLib/src/xmc_usbh.c ****     num_remaining_transfer = ptr_pipe->num - ptr_pipe->num_transferred_total;
 608              	 .loc 2 255 0
 609 013c 7B68     	 ldr r3,[r7,#4]
 610 013e 9A68     	 ldr r2,[r3,#8]
 611 0140 7B68     	 ldr r3,[r7,#4]
 612 0142 DB68     	 ldr r3,[r3,#12]
 613 0144 D31A     	 subs r3,r2,r3
 614 0146 3B63     	 str r3,[r7,#48]
 256:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 257:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)(hcchar & USB_CH_HCCHAR_EPDir_Msk) == 0U) {
 615              	 .loc 2 257 0
 616 0148 FB6B     	 ldr r3,[r7,#60]
 617 014a 03F40043 	 and r3,r3,#32768
 618 014e 002B     	 cmp r3,#0
 619 0150 44D1     	 bne .L40
 258:../Libraries/XMCLib/src/xmc_usbh.c ****       max_pckt_size =  ptr_pipe->ep_max_packet_size;
 620              	 .loc 2 258 0
 621 0152 7B68     	 ldr r3,[r7,#4]
 622 0154 9B8A     	 ldrh r3,[r3,#20]
 623 0156 BB61     	 str r3,[r7,#24]
 259:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_fifo = (uint32_t)((uint32_t)(txsts & 0x0000FFFFU) <<  2);
 624              	 .loc 2 259 0
 625 0158 FB6A     	 ldr r3,[r7,#44]
 626 015a 9BB2     	 uxth r3,r3
 627 015c 9B00     	 lsls r3,r3,#2
 628 015e 7B61     	 str r3,[r7,#20]
 260:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 629              	 .loc 2 260 0
 630 0160 FB6A     	 ldr r3,[r7,#44]
 631 0162 03F47F03 	 and r3,r3,#16711680
 632 0166 1B0C     	 lsrs r3,r3,#16
 633 0168 3B61     	 str r3,[r7,#16]
 261:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > num_remaining_fifo) {
 634              	 .loc 2 261 0
 635 016a 3A6B     	 ldr r2,[r7,#48]
 636 016c 7B69     	 ldr r3,[r7,#20]
 637 016e 9A42     	 cmp r2,r3
 638 0170 01D9     	 bls .L41
 262:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = num_remaining_fifo;
 639              	 .loc 2 262 0
 640 0172 7B69     	 ldr r3,[r7,#20]
 641 0174 3B63     	 str r3,[r7,#48]
 642              	.L41:
 263:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 264:../Libraries/XMCLib/src/xmc_usbh.c ****       pckt_num = (uint32_t)((num_remaining_transfer + (max_pckt_size - 1U)) / max_pckt_size);
 643              	 .loc 2 264 0
 644 0176 BA69     	 ldr r2,[r7,#24]
 645 0178 3B6B     	 ldr r3,[r7,#48]
 646 017a 1344     	 add r3,r3,r2
 647 017c 5A1E     	 subs r2,r3,#1
 648 017e BB69     	 ldr r3,[r7,#24]
 649 0180 B2FBF3F3 	 udiv r3,r2,r3
 650 0184 BB62     	 str r3,[r7,#40]
 265:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pckt_num > num_remaining_queue) {
 651              	 .loc 2 265 0
 652 0186 BA6A     	 ldr r2,[r7,#40]
 653 0188 3B69     	 ldr r3,[r7,#16]
 654 018a 9A42     	 cmp r2,r3
 655 018c 01D9     	 bls .L42
 266:../Libraries/XMCLib/src/xmc_usbh.c ****         pckt_num = num_remaining_queue;
 656              	 .loc 2 266 0
 657 018e 3B69     	 ldr r3,[r7,#16]
 658 0190 BB62     	 str r3,[r7,#40]
 659              	.L42:
 267:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 268:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > (pckt_num * max_pckt_size)) {
 660              	 .loc 2 268 0
 661 0192 BB6A     	 ldr r3,[r7,#40]
 662 0194 BA69     	 ldr r2,[r7,#24]
 663 0196 02FB03F2 	 mul r2,r2,r3
 664 019a 3B6B     	 ldr r3,[r7,#48]
 665 019c 9A42     	 cmp r2,r3
 666 019e 04D2     	 bcs .L43
 269:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = pckt_num * max_pckt_size;
 667              	 .loc 2 269 0
 668 01a0 BB6A     	 ldr r3,[r7,#40]
 669 01a2 BA69     	 ldr r2,[r7,#24]
 670 01a4 02FB03F3 	 mul r3,r2,r3
 671 01a8 3B63     	 str r3,[r7,#48]
 672              	.L43:
 270:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 271:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt = (uint16_t)((num_remaining_transfer + 3U) / 4U);
 673              	 .loc 2 271 0
 674 01aa 3B6B     	 ldr r3,[r7,#48]
 675 01ac 0333     	 adds r3,r3,#3
 676 01ae 9B08     	 lsrs r3,r3,#2
 677 01b0 FB83     	 strh r3,[r7,#30]
 272:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 678              	 .loc 2 272 0
 679 01b2 7B68     	 ldr r3,[r7,#4]
 680 01b4 5A68     	 ldr r2,[r3,#4]
 681 01b6 7B68     	 ldr r3,[r7,#4]
 682 01b8 DB68     	 ldr r3,[r3,#12]
 683 01ba 1344     	 add r3,r3,r2
 684 01bc 7B62     	 str r3,[r7,#36]
 273:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_index = ((USB0_CH_TypeDef *)ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_re
 685              	 .loc 2 273 0
 686 01be 3B68     	 ldr r3,[r7]
 687 01c0 274A     	 ldr r2,.L52
 688 01c2 5268     	 ldr r2,[r2,#4]
 689 01c4 9B1A     	 subs r3,r3,r2
 690 01c6 5B11     	 asrs r3,r3,#5
 691 01c8 FB60     	 str r3,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 692              	 .loc 2 274 0
 693 01ca 264A     	 ldr r2,.L52+4
 694 01cc FB68     	 ldr r3,[r7,#12]
 695 01ce 52F82330 	 ldr r3,[r2,r3,lsl#2]
 696 01d2 3B62     	 str r3,[r7,#32]
 275:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 276:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = num_remaining_transfer;
 697              	 .loc 2 276 0
 698 01d4 7B68     	 ldr r3,[r7,#4]
 699 01d6 3A6B     	 ldr r2,[r7,#48]
 700 01d8 1A61     	 str r2,[r3,#16]
 701 01da 02E0     	 b .L44
 702              	.L40:
 277:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 278:../Libraries/XMCLib/src/xmc_usbh.c ****     else {
 279:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For IN transfer num_transferring is zero */
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = 0U;
 703              	 .loc 2 280 0
 704 01dc 7B68     	 ldr r3,[r7,#4]
 705 01de 0022     	 movs r2,#0
 706 01e0 1A61     	 str r2,[r3,#16]
 707              	.L44:
 281:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 282:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Set packet count and transfer size */
 283:../Libraries/XMCLib/src/xmc_usbh.c ****     if (num_remaining_transfer != 0U) {
 708              	 .loc 2 283 0
 709 01e2 3B6B     	 ldr r3,[r7,#48]
 710 01e4 002B     	 cmp r3,#0
 711 01e6 12D0     	 beq .L45
 284:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= (((num_remaining_transfer + ptr_pipe->ep_max_packet_size) - 1U) / ptr_pipe->ep_max_
 712              	 .loc 2 284 0
 713 01e8 7B68     	 ldr r3,[r7,#4]
 714 01ea 9B8A     	 ldrh r3,[r3,#20]
 715 01ec 1A46     	 mov r2,r3
 716 01ee 3B6B     	 ldr r3,[r7,#48]
 717 01f0 1344     	 add r3,r3,r2
 718 01f2 013B     	 subs r3,r3,#1
 719 01f4 7A68     	 ldr r2,[r7,#4]
 720 01f6 928A     	 ldrh r2,[r2,#20]
 721 01f8 B3FBF2F3 	 udiv r3,r3,r2
 722 01fc DB04     	 lsls r3,r3,#19
 723 01fe BA6B     	 ldr r2,[r7,#56]
 724 0200 1343     	 orrs r3,r3,r2
 725 0202 BB63     	 str r3,[r7,#56]
 285:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |=   num_remaining_transfer;
 726              	 .loc 2 285 0
 727 0204 BA6B     	 ldr r2,[r7,#56]
 728 0206 3B6B     	 ldr r3,[r7,#48]
 729 0208 1343     	 orrs r3,r3,r2
 730 020a BB63     	 str r3,[r7,#56]
 731 020c 03E0     	 b .L46
 732              	.L45:
 286:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {                                                 /* Zero length packet */
 287:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= ((uint32_t)1U << USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos); /* Packet count = 1 */
 733              	 .loc 2 287 0
 734 020e BB6B     	 ldr r3,[r7,#56]
 735 0210 43F40023 	 orr r3,r3,#524288
 736 0214 BB63     	 str r3,[r7,#56]
 737              	.L46:
 288:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= 0U;                                        /* Transfer size = 0 */
 289:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_DisableIRQ (USB0_0_IRQn);
 738              	 .loc 2 290 0
 739 0216 6B20     	 movs r0,#107
 740 0218 FFF7FEFF 	 bl NVIC_DisableIRQ
 291:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCINTMSK = hcintmsk;                  /* Enable channel interrupts */
 741              	 .loc 2 291 0
 742 021c 3B68     	 ldr r3,[r7]
 743 021e 7A6B     	 ldr r2,[r7,#52]
 744 0220 DA60     	 str r2,[r3,#12]
 292:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCTSIZ_BUFFERMODE = hctsiz;           /* Write ch transfer size */
 745              	 .loc 2 292 0
 746 0222 3B68     	 ldr r3,[r7]
 747 0224 BA6B     	 ldr r2,[r7,#56]
 748 0226 1A61     	 str r2,[r3,#16]
 293:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCCHAR = hcchar;                      /* Write ch characteristics */
 749              	 .loc 2 293 0
 750 0228 3B68     	 ldr r3,[r7]
 751 022a FA6B     	 ldr r2,[r7,#60]
 752 022c 1A60     	 str r2,[r3]
 294:../Libraries/XMCLib/src/xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 753              	 .loc 2 294 0
 754 022e 09E0     	 b .L47
 755              	.L48:
 295:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 296:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__unaligned uint32_t *)ptr_src);
 297:../Libraries/XMCLib/src/xmc_usbh.c **** #else/* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
 298:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__packed uint32_t *)ptr_src);
 756              	 .loc 2 298 0
 757 0230 7B6A     	 ldr r3,[r7,#36]
 758 0232 1A68     	 ldr r2,[r3]
 759 0234 3B6A     	 ldr r3,[r7,#32]
 760 0236 1A60     	 str r2,[r3]
 299:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 300:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  += 4U;
 761              	 .loc 2 300 0
 762 0238 7B6A     	 ldr r3,[r7,#36]
 763 023a 0433     	 adds r3,r3,#4
 764 023c 7B62     	 str r3,[r7,#36]
 301:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt--;
 765              	 .loc 2 301 0
 766 023e FB8B     	 ldrh r3,[r7,#30]
 767 0240 013B     	 subs r3,r3,#1
 768 0242 FB83     	 strh r3,[r7,#30]
 769              	.L47:
 294:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 770              	 .loc 2 294 0
 771 0244 FB8B     	 ldrh r3,[r7,#30]
 772 0246 002B     	 cmp r3,#0
 773 0248 F2D1     	 bne .L48
 302:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 303:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_EnableIRQ  (USB0_0_IRQn);                /* Enable OTG interrupt */
 774              	 .loc 2 303 0
 775 024a 6B20     	 movs r0,#107
 776 024c FFF7FEFF 	 bl NVIC_EnableIRQ
 304:../Libraries/XMCLib/src/xmc_usbh.c ****     status = true;
 777              	 .loc 2 304 0
 778 0250 0123     	 movs r3,#1
 779 0252 7B77     	 strb r3,[r7,#29]
 780              	.L21:
 305:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 306:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 781              	 .loc 2 306 0
 782 0254 7B7F     	 ldrb r3,[r7,#29]
 307:../Libraries/XMCLib/src/xmc_usbh.c **** }
 783              	 .loc 2 307 0
 784 0256 1846     	 mov r0,r3
 785 0258 4037     	 adds r7,r7,#64
 786              	.LCFI39:
 787              	 .cfi_def_cfa_offset 8
 788 025a BD46     	 mov sp,r7
 789              	.LCFI40:
 790              	 .cfi_def_cfa_register 13
 791              	 
 792 025c 80BD     	 pop {r7,pc}
 793              	.L53:
 794 025e 00BF     	 .align 2
 795              	.L52:
 796 0260 00000000 	 .word XMC_USBH0_device
 797 0264 00000000 	 .word XMC_USBH0_dfifo_ptr
 798              	 .cfi_endproc
 799              	.LFE174:
 801              	 .section .text.XMC_USBH_GetVersion,"ax",%progbits
 802              	 .align 2
 803              	 .thumb
 804              	 .thumb_func
 806              	XMC_USBH_GetVersion:
 807              	.LFB175:
 308:../Libraries/XMCLib/src/xmc_usbh.c **** 
 309:../Libraries/XMCLib/src/xmc_usbh.c **** /* USB driver API functions */
 310:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 311:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref XMC_USBH_DRIVER_VERSION_t
 312:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 313:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver version.
 314:../Libraries/XMCLib/src/xmc_usbh.c **** */
 315:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_DRIVER_VERSION_t XMC_USBH_GetVersion (void) { return xmc_usbh_driver_version; }
 808              	 .loc 2 315 0
 809              	 .cfi_startproc
 810              	 
 811              	 
 812              	 
 813 0000 80B4     	 push {r7}
 814              	.LCFI41:
 815              	 .cfi_def_cfa_offset 4
 816              	 .cfi_offset 7,-4
 817 0002 83B0     	 sub sp,sp,#12
 818              	.LCFI42:
 819              	 .cfi_def_cfa_offset 16
 820 0004 00AF     	 add r7,sp,#0
 821              	.LCFI43:
 822              	 .cfi_def_cfa_register 7
 823              	 .loc 2 315 0
 824 0006 084B     	 ldr r3,.L56
 825 0008 1B68     	 ldr r3,[r3]
 826 000a 7B60     	 str r3,[r7,#4]
 827 000c 0023     	 movs r3,#0
 828 000e BA88     	 ldrh r2,[r7,#4]
 829 0010 62F30F03 	 bfi r3,r2,#0,#16
 830 0014 FA88     	 ldrh r2,[r7,#6]
 831 0016 62F31F43 	 bfi r3,r2,#16,#16
 832 001a 1846     	 mov r0,r3
 833 001c 0C37     	 adds r7,r7,#12
 834              	.LCFI44:
 835              	 .cfi_def_cfa_offset 4
 836 001e BD46     	 mov sp,r7
 837              	.LCFI45:
 838              	 .cfi_def_cfa_register 13
 839              	 
 840 0020 5DF8047B 	 ldr r7,[sp],#4
 841              	.LCFI46:
 842              	 .cfi_restore 7
 843              	 .cfi_def_cfa_offset 0
 844 0024 7047     	 bx lr
 845              	.L57:
 846 0026 00BF     	 .align 2
 847              	.L56:
 848 0028 00000000 	 .word xmc_usbh_driver_version
 849              	 .cfi_endproc
 850              	.LFE175:
 852              	 .section .text.XMC_USBH_GetCapabilities,"ax",%progbits
 853              	 .align 2
 854              	 .thumb
 855              	 .thumb_func
 857              	XMC_USBH_GetCapabilities:
 858              	.LFB176:
 316:../Libraries/XMCLib/src/xmc_usbh.c **** 
 317:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 318:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  \ref XMC_USBH_CAPABILITIES_t
 319:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 320:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver capabilities.
 321:../Libraries/XMCLib/src/xmc_usbh.c **** */
 322:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_CAPABILITIES_t XMC_USBH_GetCapabilities (void) { return xmc_usbh_driver_capabilitie
 859              	 .loc 2 322 0
 860              	 .cfi_startproc
 861              	 
 862              	 
 863              	 
 864 0000 80B4     	 push {r7}
 865              	.LCFI47:
 866              	 .cfi_def_cfa_offset 4
 867              	 .cfi_offset 7,-4
 868 0002 00AF     	 add r7,sp,#0
 869              	.LCFI48:
 870              	 .cfi_def_cfa_register 7
 871              	 .loc 2 322 0
 872 0004 0122     	 movs r2,#1
 873 0006 62F30E03 	 bfi r3,r2,#0,#15
 874 000a 6FF3CF33 	 bfc r3,#15,#1
 875 000e 43F48033 	 orr r3,r3,#65536
 876 0012 43F40033 	 orr r3,r3,#131072
 877 0016 6FF39243 	 bfc r3,#18,#1
 878 001a 1846     	 mov r0,r3
 879 001c BD46     	 mov sp,r7
 880              	.LCFI49:
 881              	 .cfi_def_cfa_register 13
 882              	 
 883 001e 5DF8047B 	 ldr r7,[sp],#4
 884              	.LCFI50:
 885              	 .cfi_restore 7
 886              	 .cfi_def_cfa_offset 0
 887 0022 7047     	 bx lr
 888              	 .cfi_endproc
 889              	.LFE176:
 891              	 .section .text.XMC_USBH_Initialize,"ax",%progbits
 892              	 .align 2
 893              	 .thumb
 894              	 .thumb_func
 896              	XMC_USBH_Initialize:
 897              	.LFB177:
 323:../Libraries/XMCLib/src/xmc_usbh.c **** 
 324:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 325:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_port_event  Pointer to port event callback function \ref ARM_USBH_SignalPortEvent
 326:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_pipe_event  Pointer to pipe event callback function \ref ARM_USBH_SignalPipeEvent
 327:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  int32_t \ref Execution_status. 0 if execution is successful.
 328:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 329:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 330:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initialize USB Host Interface. Registers callback functions to be executed on port event and pip
 331:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initializes FIFO address for each pipe. Configures P3.2 as the VBUS charge pump enable pin.\n
 332:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 333:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Related APIs:</b><BR>
 334:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Uninitialize() \n
 335:../Libraries/XMCLib/src/xmc_usbh.c **** */
 336:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Initialize (XMC_USBH_SignalPortEvent_t cb_port_event,
 337:../Libraries/XMCLib/src/xmc_usbh.c ****                                 XMC_USBH_SignalPipeEvent_t cb_pipe_event) {
 898              	 .loc 2 337 0
 899              	 .cfi_startproc
 900              	 
 901              	 
 902 0000 80B5     	 push {r7,lr}
 903              	.LCFI51:
 904              	 .cfi_def_cfa_offset 8
 905              	 .cfi_offset 7,-8
 906              	 .cfi_offset 14,-4
 907 0002 84B0     	 sub sp,sp,#16
 908              	.LCFI52:
 909              	 .cfi_def_cfa_offset 24
 910 0004 00AF     	 add r7,sp,#0
 911              	.LCFI53:
 912              	 .cfi_def_cfa_register 7
 913 0006 7860     	 str r0,[r7,#4]
 914 0008 3960     	 str r1,[r7]
 338:../Libraries/XMCLib/src/xmc_usbh.c **** 
 339:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t channel;
 340:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 915              	 .loc 2 340 0
 916 000a 0023     	 movs r3,#0
 917 000c BB60     	 str r3,[r7,#8]
 341:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.init_done == true)
 918              	 .loc 2 341 0
 919 000e 174B     	 ldr r3,.L65
 920 0010 1B7C     	 ldrb r3,[r3,#16]
 921 0012 002B     	 cmp r3,#0
 922 0014 25D1     	 bne .L61
 342:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbh.c ****     /*return ok since initialized*/
 344:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 346:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 347:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign callbacks */
 348:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb = cb_port_event;
 923              	 .loc 2 348 0
 924 0016 154A     	 ldr r2,.L65
 925 0018 7B68     	 ldr r3,[r7,#4]
 926 001a 9360     	 str r3,[r2,#8]
 349:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 927              	 .loc 2 349 0
 928 001c 134A     	 ldr r2,.L65
 929 001e 3B68     	 ldr r3,[r7]
 930 0020 D360     	 str r3,[r2,#12]
 350:../Libraries/XMCLib/src/xmc_usbh.c **** 
 351:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign fifo start addresses */
 352:../Libraries/XMCLib/src/xmc_usbh.c ****     for (channel = 0U; channel < USBH0_MAX_PIPE_NUM; channel++) {
 931              	 .loc 2 352 0
 932 0022 0023     	 movs r3,#0
 933 0024 FB60     	 str r3,[r7,#12]
 934 0026 0CE0     	 b .L62
 935              	.L63:
 353:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 936              	 .loc 2 353 0 discriminator 3
 937 0028 FB68     	 ldr r3,[r7,#12]
 938 002a 03F5A023 	 add r3,r3,#327680
 939 002e 4133     	 adds r3,r3,#65
 940 0030 1B03     	 lsls r3,r3,#12
 941 0032 1946     	 mov r1,r3
 942 0034 0E4A     	 ldr r2,.L65+4
 943 0036 FB68     	 ldr r3,[r7,#12]
 944 0038 42F82310 	 str r1,[r2,r3,lsl#2]
 352:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 945              	 .loc 2 352 0 discriminator 3
 946 003c FB68     	 ldr r3,[r7,#12]
 947 003e 0133     	 adds r3,r3,#1
 948 0040 FB60     	 str r3,[r7,#12]
 949              	.L62:
 352:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 950              	 .loc 2 352 0 is_stmt 0 discriminator 1
 951 0042 FB68     	 ldr r3,[r7,#12]
 952 0044 0D2B     	 cmp r3,#13
 953 0046 EFD9     	 bls .L63
 354:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 355:../Libraries/XMCLib/src/xmc_usbh.c **** 
 356:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 954              	 .loc 2 356 0 is_stmt 1
 955 0048 0A4B     	 ldr r3,.L65+8
 956 004a 1A68     	 ldr r2,[r3]
 957 004c 0A4B     	 ldr r3,.L65+12
 958 004e 1B68     	 ldr r3,[r3]
 959 0050 DBB2     	 uxtb r3,r3
 960 0052 1046     	 mov r0,r2
 961 0054 1946     	 mov r1,r3
 962 0056 8822     	 movs r2,#136
 963 0058 FFF7FEFF 	 bl XMC_GPIO_SetMode
 357:../Libraries/XMCLib/src/xmc_usbh.c ****   
 358:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.init_done = true;
 964              	 .loc 2 358 0
 965 005c 034B     	 ldr r3,.L65
 966 005e 0122     	 movs r2,#1
 967 0060 1A74     	 strb r2,[r3,#16]
 968              	.L61:
 359:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 360:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 969              	 .loc 2 360 0
 970 0062 BB68     	 ldr r3,[r7,#8]
 361:../Libraries/XMCLib/src/xmc_usbh.c **** }
 971              	 .loc 2 361 0
 972 0064 1846     	 mov r0,r3
 973 0066 1037     	 adds r7,r7,#16
 974              	.LCFI54:
 975              	 .cfi_def_cfa_offset 8
 976 0068 BD46     	 mov sp,r7
 977              	.LCFI55:
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 006a 80BD     	 pop {r7,pc}
 981              	.L66:
 982              	 .align 2
 983              	.L65:
 984 006c 00000000 	 .word XMC_USBH0_device
 985 0070 00000000 	 .word XMC_USBH0_dfifo_ptr
 986 0074 00000000 	 .word VBUS_port
 987 0078 00000000 	 .word VBUS_pin
 988              	 .cfi_endproc
 989              	.LFE177:
 991              	 .section .text.XMC_USBH_Uninitialize,"ax",%progbits
 992              	 .align 2
 993              	 .thumb
 994              	 .thumb_func
 996              	XMC_USBH_Uninitialize:
 997              	.LFB178:
 362:../Libraries/XMCLib/src/xmc_usbh.c **** 
 363:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 364:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 to indicate success.
 365:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 366:../Libraries/XMCLib/src/xmc_usbh.c ****  * De-initialize USB Host Interface. Sets the driver power state as powered off. Disables VBUS.\n
 367:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 368:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 369:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff() \n
 370:../Libraries/XMCLib/src/xmc_usbh.c **** */
 371:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Uninitialize (void) {
 998              	 .loc 2 371 0
 999              	 .cfi_startproc
 1000              	 
 1001              	 
 1002 0000 80B5     	 push {r7,lr}
 1003              	.LCFI56:
 1004              	 .cfi_def_cfa_offset 8
 1005              	 .cfi_offset 7,-8
 1006              	 .cfi_offset 14,-4
 1007 0002 00AF     	 add r7,sp,#0
 1008              	.LCFI57:
 1009              	 .cfi_def_cfa_register 7
 372:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 1010              	 .loc 2 372 0
 1011 0004 044B     	 ldr r3,.L69
 1012 0006 0022     	 movs r2,#0
 1013 0008 1A74     	 strb r2,[r3,#16]
 373:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 1014              	 .loc 2 373 0
 1015 000a 0020     	 movs r0,#0
 1016 000c FFF7FEFF 	 bl XMC_USBH_PowerControl
 374:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 1017              	 .loc 2 374 0
 1018 0010 0023     	 movs r3,#0
 375:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1019              	 .loc 2 375 0
 1020 0012 1846     	 mov r0,r3
 1021 0014 80BD     	 pop {r7,pc}
 1022              	.L70:
 1023 0016 00BF     	 .align 2
 1024              	.L69:
 1025 0018 00000000 	 .word XMC_USBH0_device
 1026              	 .cfi_endproc
 1027              	.LFE178:
 1029              	 .section .text.XMC_USBH_PowerControl,"ax",%progbits
 1030              	 .align 2
 1031              	 .thumb
 1032              	 .thumb_func
 1034              	XMC_USBH_PowerControl:
 1035              	.LFB179:
 376:../Libraries/XMCLib/src/xmc_usbh.c **** 
 377:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 378:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param  state  Power state. \ref XMC_USBH_POWER_STATE_t
 379:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 380:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 381:../Libraries/XMCLib/src/xmc_usbh.c ****  * Control USB Host Interface Power. If power state is set to \ref XMC_USBH_POWER_FULL,
 382:../Libraries/XMCLib/src/xmc_usbh.c ****  * it initializes the peripheral and enables VBUS. If power state is set to \ref XMC_USBH_POWER_OFF
 383:../Libraries/XMCLib/src/xmc_usbh.c ****  * disables the peripheral and the VBUS.\n
 384:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 385:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 386:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff(), XMC_USBH_Uninitialize(
 387:../Libraries/XMCLib/src/xmc_usbh.c **** */
 388:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state) {
 1036              	 .loc 2 388 0
 1037              	 .cfi_startproc
 1038              	 
 1039              	 
 1040 0000 80B5     	 push {r7,lr}
 1041              	.LCFI58:
 1042              	 .cfi_def_cfa_offset 8
 1043              	 .cfi_offset 7,-8
 1044              	 .cfi_offset 14,-4
 1045 0002 84B0     	 sub sp,sp,#16
 1046              	.LCFI59:
 1047              	 .cfi_def_cfa_offset 24
 1048 0004 00AF     	 add r7,sp,#0
 1049              	.LCFI60:
 1050              	 .cfi_def_cfa_register 7
 1051 0006 0346     	 mov r3,r0
 1052 0008 FB71     	 strb r3,[r7,#7]
 389:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 1053              	 .loc 2 389 0
 1054 000a 0023     	 movs r3,#0
 1055 000c FB60     	 str r3,[r7,#12]
 390:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_value;
 391:../Libraries/XMCLib/src/xmc_usbh.c ****   switch (state) {
 1056              	 .loc 2 391 0
 1057 000e FB79     	 ldrb r3,[r7,#7]
 1058 0010 012B     	 cmp r3,#1
 1059 0012 04D0     	 beq .L73
 1060 0014 022B     	 cmp r3,#2
 1061 0016 33D0     	 beq .L74
 1062 0018 002B     	 cmp r3,#0
 1063 001a 04D0     	 beq .L75
 1064 001c DDE0     	 b .L84
 1065              	.L73:
 392:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 393:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 1066              	 .loc 2 393 0
 1067 001e 6FF00303 	 mvn r3,#3
 1068 0022 FB60     	 str r3,[r7,#12]
 394:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 1069              	 .loc 2 394 0
 1070 0024 DCE0     	 b .L76
 1071              	.L75:
 395:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_OFF:
 396:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_DisableIRQ  (USB0_0_IRQn);
 1072              	 .loc 2 396 0
 1073 0026 6B20     	 movs r0,#107
 1074 0028 FFF7FEFF 	 bl NVIC_DisableIRQ
 397:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_ClearPendingIRQ (USB0_0_IRQn); /* Clear pending interrupt */
 1075              	 .loc 2 397 0
 1076 002c 6B20     	 movs r0,#107
 1077 002e FFF7FEFF 	 bl NVIC_ClearPendingIRQ
 398:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state =  state; /* Clear powered flag */
 1078              	 .loc 2 398 0
 1079 0032 6E4A     	 ldr r2,.L85
 1080 0034 FB79     	 ldrb r3,[r7,#7]
 1081 0036 5374     	 strb r3,[r2,#17]
 399:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 1082              	 .loc 2 399 0
 1083 0038 6C4B     	 ldr r3,.L85
 1084 003a 1B68     	 ldr r3,[r3]
 1085 003c 6B4A     	 ldr r2,.L85
 1086 003e 1268     	 ldr r2,[r2]
 1087 0040 9268     	 ldr r2,[r2,#8]
 1088 0042 22F00102 	 bic r2,r2,#1
 1089 0046 9A60     	 str r2,[r3,#8]
 400:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 1090              	 .loc 2 400 0
 1091 0048 0120     	 movs r0,#1
 1092 004a FFF7FEFF 	 bl XMC_lClockGating
 401:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  |=  (uint32_t)USB_PCGCCTL_StopPclk_Msk; /* Stop PH
 1093              	 .loc 2 401 0
 1094 004e 674B     	 ldr r3,.L85
 1095 0050 1B68     	 ldr r3,[r3]
 1096 0052 664A     	 ldr r2,.L85
 1097 0054 1268     	 ldr r2,[r2]
 1098 0056 D2F8002E 	 ldr r2,[r2,#3584]
 1099 005a 42F00102 	 orr r2,r2,#1
 1100 005e C3F8002E 	 str r2,[r3,#3584]
 402:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 1101              	 .loc 2 402 0
 1102 0062 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 403:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 1103              	 .loc 2 403 0
 1104 0066 6248     	 ldr r0,.L85+4
 1105 0068 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 404:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 1106              	 .loc 2 404 0
 1107 006c 5F4B     	 ldr r3,.L85
 1108 006e 0022     	 movs r2,#0
 1109 0070 9A74     	 strb r2,[r3,#18]
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 1110              	 .loc 2 405 0
 1111 0072 6048     	 ldr r0,.L85+8
 1112 0074 0021     	 movs r1,#0
 1113 0076 4FF4E072 	 mov r2,#448
 1114 007a FFF7FEFF 	 bl memset
 406:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 1115              	 .loc 2 406 0
 1116 007e AFE0     	 b .L76
 1117              	.L74:
 407:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 408:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.init_done == false)
 1118              	 .loc 2 408 0
 1119 0080 5A4B     	 ldr r3,.L85
 1120 0082 1B7C     	 ldrb r3,[r3,#16]
 1121 0084 83F00103 	 eor r3,r3,#1
 1122 0088 DBB2     	 uxtb r3,r3
 1123 008a 002B     	 cmp r3,#0
 1124 008c 03D0     	 beq .L77
 409:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 410:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR;
 1125              	 .loc 2 410 0
 1126 008e 4FF0FF33 	 mov r3,#-1
 1127 0092 FB60     	 str r3,[r7,#12]
 411:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 1128              	 .loc 2 411 0
 1129 0094 A4E0     	 b .L76
 1130              	.L77:
 412:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* not initialized */
 413:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.power_state == XMC_USBH_POWER_FULL)
 1131              	 .loc 2 413 0
 1132 0096 554B     	 ldr r3,.L85
 1133 0098 5B7C     	 ldrb r3,[r3,#17]
 1134 009a 022B     	 cmp r3,#2
 1135 009c 02D1     	 bne .L78
 414:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 415:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_OK;
 1136              	 .loc 2 415 0
 1137 009e 0023     	 movs r3,#0
 1138 00a0 FB60     	 str r3,[r7,#12]
 416:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 1139              	 .loc 2 416 0
 1140 00a2 9DE0     	 b .L76
 1141              	.L78:
 417:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* already powered */
 418:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_DISABLE); /* disable clock gating */
 1142              	 .loc 2 418 0
 1143 00a4 0020     	 movs r0,#0
 1144 00a6 FFF7FEFF 	 bl XMC_lClockGating
 419:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 1145              	 .loc 2 419 0
 1146 00aa 0220     	 movs r0,#2
 1147 00ac FFF7FEFF 	 bl XMC_USBH_osDelay
 420:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 1148              	 .loc 2 420 0
 1149 00b0 4F48     	 ldr r0,.L85+4
 1150 00b2 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 421:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 1151              	 .loc 2 421 0
 1152 00b6 0220     	 movs r0,#2
 1153 00b8 FFF7FEFF 	 bl XMC_USBH_osDelay
 422:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 1154              	 .loc 2 422 0
 1155 00bc 6420     	 movs r0,#100
 1156 00be FFF7FEFF 	 bl XMC_USBH_osDelay
 423:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 1157              	 .loc 2 423 0
 1158 00c2 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 424:../Libraries/XMCLib/src/xmc_usbh.c **** 
 425:../Libraries/XMCLib/src/xmc_usbh.c ****       /* On-chip Full-speed PHY */
 426:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  &=  (uint32_t)~USB_PCGCCTL_StopPclk_Msk;  /* Start
 1159              	 .loc 2 426 0
 1160 00c6 494B     	 ldr r3,.L85
 1161 00c8 1B68     	 ldr r3,[r3]
 1162 00ca 484A     	 ldr r2,.L85
 1163 00cc 1268     	 ldr r2,[r2]
 1164 00ce D2F8002E 	 ldr r2,[r2,#3584]
 1165 00d2 22F00102 	 bic r2,r2,#1
 1166 00d6 C3F8002E 	 str r2,[r3,#3584]
 427:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 1167              	 .loc 2 427 0
 1168 00da 444B     	 ldr r3,.L85
 1169 00dc 1B68     	 ldr r3,[r3]
 1170 00de 434A     	 ldr r2,.L85
 1171 00e0 1268     	 ldr r2,[r2]
 1172 00e2 D268     	 ldr r2,[r2,#12]
 1173 00e4 42F04002 	 orr r2,r2,#64
 1174 00e8 DA60     	 str r2,[r3,#12]
 428:../Libraries/XMCLib/src/xmc_usbh.c **** 
 429:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_AHBIdle_Msk) == 0U) /* wait u
 1175              	 .loc 2 429 0
 1176 00ea 00BF     	 nop
 1177              	.L79:
 1178              	 .loc 2 429 0 is_stmt 0 discriminator 1
 1179 00ec 3F4B     	 ldr r3,.L85
 1180 00ee 1B68     	 ldr r3,[r3]
 1181 00f0 1B69     	 ldr r3,[r3,#16]
 1182 00f2 002B     	 cmp r3,#0
 1183 00f4 FADA     	 bge .L79
 430:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 431:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 432:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 433:../Libraries/XMCLib/src/xmc_usbh.c **** 
 434:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRSTCTL |=  (uint32_t)USB_GRSTCTL_CSftRst_Msk; /* Core soft
 1184              	 .loc 2 434 0 is_stmt 1
 1185 00f6 3D4B     	 ldr r3,.L85
 1186 00f8 1B68     	 ldr r3,[r3]
 1187 00fa 3C4A     	 ldr r2,.L85
 1188 00fc 1268     	 ldr r2,[r2]
 1189 00fe 1269     	 ldr r2,[r2,#16]
 1190 0100 42F00102 	 orr r2,r2,#1
 1191 0104 1A61     	 str r2,[r3,#16]
 435:../Libraries/XMCLib/src/xmc_usbh.c **** 
 436:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_CSftRst_Msk)  != 0U) /* wait 
 1192              	 .loc 2 436 0
 1193 0106 00BF     	 nop
 1194              	.L80:
 1195              	 .loc 2 436 0 is_stmt 0 discriminator 1
 1196 0108 384B     	 ldr r3,.L85
 1197 010a 1B68     	 ldr r3,[r3]
 1198 010c 1B69     	 ldr r3,[r3,#16]
 1199 010e 03F00103 	 and r3,r3,#1
 1200 0112 002B     	 cmp r3,#0
 1201 0114 F8D1     	 bne .L80
 437:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 438:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 439:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 440:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 1202              	 .loc 2 440 0 is_stmt 1
 1203 0116 6420     	 movs r0,#100
 1204 0118 FFF7FEFF 	 bl XMC_USBH_osDelay
 441:../Libraries/XMCLib/src/xmc_usbh.c **** 
 442:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 1205              	 .loc 2 442 0
 1206 011c 334B     	 ldr r3,.L85
 1207 011e 0022     	 movs r2,#0
 1208 0120 9A74     	 strb r2,[r3,#18]
 443:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 1209              	 .loc 2 443 0
 1210 0122 3448     	 ldr r0,.L85+8
 1211 0124 0021     	 movs r1,#0
 1212 0126 4FF4E072 	 mov r2,#448
 1213 012a FFF7FEFF 	 bl memset
 444:../Libraries/XMCLib/src/xmc_usbh.c **** 
 445:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Created local copy of GUSBCFG to avoid side effects*/
 446:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_value = XMC_USBH0_device.global_register->GUSBCFG;
 1214              	 .loc 2 446 0
 1215 012e 2F4B     	 ldr r3,.L85
 1216 0130 1B68     	 ldr r3,[r3]
 1217 0132 DB68     	 ldr r3,[r3,#12]
 1218 0134 BB60     	 str r3,[r7,#8]
 447:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 1219              	 .loc 2 447 0
 1220 0136 BB68     	 ldr r3,[r7,#8]
 1221 0138 03F00053 	 and r3,r3,#536870912
 1222 013c 002B     	 cmp r3,#0
 1223 013e 04D0     	 beq .L81
 448:../Libraries/XMCLib/src/xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 1224              	 .loc 2 448 0 discriminator 1
 1225 0140 BB68     	 ldr r3,[r7,#8]
 1226 0142 03F08043 	 and r3,r3,#1073741824
 447:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 1227              	 .loc 2 447 0 discriminator 1
 1228 0146 002B     	 cmp r3,#0
 1229 0148 12D0     	 beq .L82
 1230              	.L81:
 449:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 450:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG &= (uint32_t)~USB_GUSBCFG_ForceDevMode_Msk;      
 1231              	 .loc 2 450 0
 1232 014a 284B     	 ldr r3,.L85
 1233 014c 1B68     	 ldr r3,[r3]
 1234 014e 274A     	 ldr r2,.L85
 1235 0150 1268     	 ldr r2,[r2]
 1236 0152 D268     	 ldr r2,[r2,#12]
 1237 0154 22F08042 	 bic r2,r2,#1073741824
 1238 0158 DA60     	 str r2,[r3,#12]
 451:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 1239              	 .loc 2 451 0
 1240 015a 244B     	 ldr r3,.L85
 1241 015c 1B68     	 ldr r3,[r3]
 1242 015e 234A     	 ldr r2,.L85
 1243 0160 1268     	 ldr r2,[r2]
 1244 0162 D268     	 ldr r2,[r2,#12]
 1245 0164 42F00052 	 orr r2,r2,#536870912
 1246 0168 DA60     	 str r2,[r3,#12]
 452:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 1247              	 .loc 2 452 0
 1248 016a 6420     	 movs r0,#100
 1249 016c FFF7FEFF 	 bl XMC_USBH_osDelay
 1250              	.L82:
 453:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 454:../Libraries/XMCLib/src/xmc_usbh.c **** 
 455:../Libraries/XMCLib/src/xmc_usbh.c ****       /* FS only, even if HS is supported */
 456:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG     |=  (uint32_t)(0x200U | USB_CH_HCFG_FSLSSUP(1));
 1251              	 .loc 2 456 0
 1252 0170 1E4B     	 ldr r3,.L85
 1253 0172 1B68     	 ldr r3,[r3]
 1254 0174 1D4A     	 ldr r2,.L85
 1255 0176 1268     	 ldr r2,[r2]
 1256 0178 D2F80024 	 ldr r2,[r2,#1024]
 1257 017c 42F40172 	 orr r2,r2,#516
 1258 0180 C3F80024 	 str r2,[r3,#1024]
 457:../Libraries/XMCLib/src/xmc_usbh.c **** 
 458:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Rx FIFO setting */
 459:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRXFSIZ   = (RX_FIFO_SIZE/4U);
 1259              	 .loc 2 459 0
 1260 0184 194B     	 ldr r3,.L85
 1261 0186 1B68     	 ldr r3,[r3]
 1262 0188 4FF48D72 	 mov r2,#282
 1263 018c 5A62     	 str r2,[r3,#36]
 460:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 461:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GNPTXFSIZ_HOSTMODE = (((uint32_t)(TX_FIFO_SIZE_NON_PERI/4U)
 1264              	 .loc 2 461 0
 1265 018e 174B     	 ldr r3,.L85
 1266 0190 1B68     	 ldr r3,[r3]
 1267 0192 194A     	 ldr r2,.L85+12
 1268 0194 9A62     	 str r2,[r3,#40]
 462:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 463:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPTXFSIZ  = ((uint32_t)(TX_FIFO_SIZE_PERI / 4U) << 16U) | (
 1269              	 .loc 2 463 0
 1270 0196 154B     	 ldr r3,.L85
 1271 0198 1B68     	 ldr r3,[r3]
 1272 019a 184A     	 ldr r2,.L85+16
 1273 019c C3F80021 	 str r2,[r3,#256]
 464:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable channel interrupts */
 465:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HAINTMSK  = ((uint32_t)1U << USBH0_MAX_PIPE_NUM) - 1U;
 1274              	 .loc 2 465 0
 1275 01a0 124B     	 ldr r3,.L85
 1276 01a2 1B68     	 ldr r3,[r3]
 1277 01a4 43F6FF72 	 movw r2,#16383
 1278 01a8 C3F81824 	 str r2,[r3,#1048]
 466:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Unmask interrupts */
 467:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GINTMSK_HOSTMODE   = (
 1279              	 .loc 2 467 0
 1280 01ac 0F4B     	 ldr r3,.L85
 1281 01ae 1B68     	 ldr r3,[r3]
 1282 01b0 134A     	 ldr r2,.L85+20
 1283 01b2 9A61     	 str r2,[r3,#24]
 468:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 469:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_HChIntMsk_Msk    |
 470:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_PrtIntMsk_Msk   |
 471:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_RxFLvlMsk_Msk |
 472:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_SofMsk_Msk  |
 473:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_WkUpIntMsk_Msk
 474:../Libraries/XMCLib/src/xmc_usbh.c ****                        )   ;
 475:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set powered state */
 476:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state = state;
 1284              	 .loc 2 476 0
 1285 01b4 0D4A     	 ldr r2,.L85
 1286 01b6 FB79     	 ldrb r3,[r7,#7]
 1287 01b8 5374     	 strb r3,[r2,#17]
 477:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable interrupts */
 478:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  |=  (uint32_t)USB_GAHBCFG_GlblIntrMsk_Msk;
 1288              	 .loc 2 478 0
 1289 01ba 0C4B     	 ldr r3,.L85
 1290 01bc 1B68     	 ldr r3,[r3]
 1291 01be 0B4A     	 ldr r2,.L85
 1292 01c0 1268     	 ldr r2,[r2]
 1293 01c2 9268     	 ldr r2,[r2,#8]
 1294 01c4 42F00102 	 orr r2,r2,#1
 1295 01c8 9A60     	 str r2,[r3,#8]
 479:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set highest interrupt priority */
 480:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_SetPriority (USB0_0_IRQn, 0U);
 1296              	 .loc 2 480 0
 1297 01ca 6B20     	 movs r0,#107
 1298 01cc 0021     	 movs r1,#0
 1299 01ce FFF7FEFF 	 bl NVIC_SetPriority
 481:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_EnableIRQ   (USB0_0_IRQn);
 1300              	 .loc 2 481 0
 1301 01d2 6B20     	 movs r0,#107
 1302 01d4 FFF7FEFF 	 bl NVIC_EnableIRQ
 482:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 1303              	 .loc 2 482 0
 1304 01d8 02E0     	 b .L76
 1305              	.L84:
 483:../Libraries/XMCLib/src/xmc_usbh.c ****     default:
 484:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 1306              	 .loc 2 484 0
 1307 01da 6FF00303 	 mvn r3,#3
 1308 01de FB60     	 str r3,[r7,#12]
 1309              	.L76:
 485:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 486:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 1310              	 .loc 2 486 0
 1311 01e0 FB68     	 ldr r3,[r7,#12]
 487:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1312              	 .loc 2 487 0
 1313 01e2 1846     	 mov r0,r3
 1314 01e4 1037     	 adds r7,r7,#16
 1315              	.LCFI61:
 1316              	 .cfi_def_cfa_offset 8
 1317 01e6 BD46     	 mov sp,r7
 1318              	.LCFI62:
 1319              	 .cfi_def_cfa_register 13
 1320              	 
 1321 01e8 80BD     	 pop {r7,pc}
 1322              	.L86:
 1323 01ea 00BF     	 .align 2
 1324              	.L85:
 1325 01ec 00000000 	 .word XMC_USBH0_device
 1326 01f0 80000020 	 .word 536871040
 1327 01f4 00000000 	 .word pipe
 1328 01f8 1A011000 	 .word 1048858
 1329 01fc 2A010001 	 .word 16777514
 1330 0200 180000A3 	 .word -1560281064
 1331              	 .cfi_endproc
 1332              	.LFE179:
 1334              	 .section .text.XMC_USBH_PortVbusOnOff,"ax",%progbits
 1335              	 .align 2
 1336              	 .thumb
 1337              	 .thumb_func
 1339              	XMC_USBH_PortVbusOnOff:
 1340              	.LFB180:
 488:../Libraries/XMCLib/src/xmc_usbh.c **** 
 489:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 490:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 491:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param vbus VBUS state - \n
 492:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b false VBUS off
 493:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b true  VBUS on
 494:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 495:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 496:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 497:../Libraries/XMCLib/src/xmc_usbh.c ****  * Set USB port VBUS on/off.
 498:../Libraries/XMCLib/src/xmc_usbh.c **** */
 499:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortVbusOnOff (uint8_t port, bool vbus) {
 1341              	 .loc 2 499 0
 1342              	 .cfi_startproc
 1343              	 
 1344              	 
 1345 0000 80B5     	 push {r7,lr}
 1346              	.LCFI63:
 1347              	 .cfi_def_cfa_offset 8
 1348              	 .cfi_offset 7,-8
 1349              	 .cfi_offset 14,-4
 1350 0002 84B0     	 sub sp,sp,#16
 1351              	.LCFI64:
 1352              	 .cfi_def_cfa_offset 24
 1353 0004 00AF     	 add r7,sp,#0
 1354              	.LCFI65:
 1355              	 .cfi_def_cfa_register 7
 1356 0006 0346     	 mov r3,r0
 1357 0008 0A46     	 mov r2,r1
 1358 000a FB71     	 strb r3,[r7,#7]
 1359 000c 1346     	 mov r3,r2
 1360 000e BB71     	 strb r3,[r7,#6]
 500:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 1361              	 .loc 2 500 0
 1362 0010 0023     	 movs r3,#0
 1363 0012 FB60     	 str r3,[r7,#12]
 501:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1364              	 .loc 2 501 0
 1365 0014 1F4B     	 ldr r3,.L93
 1366 0016 5B7C     	 ldrb r3,[r3,#17]
 1367 0018 002B     	 cmp r3,#0
 1368 001a 03D1     	 bne .L88
 502:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 503:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 1369              	 .loc 2 503 0
 1370 001c 4FF0FF33 	 mov r3,#-1
 1371 0020 FB60     	 str r3,[r7,#12]
 1372 0022 32E0     	 b .L89
 1373              	.L88:
 504:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 505:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 506:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 507:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 1374              	 .loc 2 507 0
 1375 0024 FB79     	 ldrb r3,[r7,#7]
 1376 0026 002B     	 cmp r3,#0
 1377 0028 03D0     	 beq .L90
 508:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 509:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 1378              	 .loc 2 509 0
 1379 002a 6FF00403 	 mvn r3,#4
 1380 002e FB60     	 str r3,[r7,#12]
 1381 0030 2BE0     	 b .L89
 1382              	.L90:
 510:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 511:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 512:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 513:../Libraries/XMCLib/src/xmc_usbh.c ****       if (vbus != 0U) {
 1383              	 .loc 2 513 0
 1384 0032 BB79     	 ldrb r3,[r7,#6]
 1385 0034 002B     	 cmp r3,#0
 1386 0036 14D0     	 beq .L91
 514:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power on */
 515:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT |=  (uint32_t)USB_HPRT_PrtPwr_Msk;
 1387              	 .loc 2 515 0
 1388 0038 164B     	 ldr r3,.L93
 1389 003a 1B68     	 ldr r3,[r3]
 1390 003c 154A     	 ldr r2,.L93
 1391 003e 1268     	 ldr r2,[r2]
 1392 0040 D2F84024 	 ldr r2,[r2,#1088]
 1393 0044 42F48052 	 orr r2,r2,#4096
 1394 0048 C3F84024 	 str r2,[r3,#1088]
 516:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 1395              	 .loc 2 516 0
 1396 004c 124B     	 ldr r3,.L93+4
 1397 004e 1A68     	 ldr r2,[r3]
 1398 0050 124B     	 ldr r3,.L93+8
 1399 0052 1B68     	 ldr r3,[r3]
 1400 0054 DBB2     	 uxtb r3,r3
 1401 0056 1046     	 mov r0,r2
 1402 0058 1946     	 mov r1,r3
 1403 005a 8822     	 movs r2,#136
 1404 005c FFF7FEFF 	 bl XMC_GPIO_SetMode
 1405 0060 13E0     	 b .L89
 1406              	.L91:
 517:../Libraries/XMCLib/src/xmc_usbh.c ****       } else {
 518:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power off */
 519:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT &= (uint32_t)~USB_HPRT_PrtPwr_Msk;
 1407              	 .loc 2 519 0
 1408 0062 0C4B     	 ldr r3,.L93
 1409 0064 1B68     	 ldr r3,[r3]
 1410 0066 0B4A     	 ldr r2,.L93
 1411 0068 1268     	 ldr r2,[r2]
 1412 006a D2F84024 	 ldr r2,[r2,#1088]
 1413 006e 22F48052 	 bic r2,r2,#4096
 1414 0072 C3F84024 	 str r2,[r3,#1088]
 520:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 1415              	 .loc 2 520 0
 1416 0076 084B     	 ldr r3,.L93+4
 1417 0078 1A68     	 ldr r2,[r3]
 1418 007a 084B     	 ldr r3,.L93+8
 1419 007c 1B68     	 ldr r3,[r3]
 1420 007e DBB2     	 uxtb r3,r3
 1421 0080 1046     	 mov r0,r2
 1422 0082 1946     	 mov r1,r3
 1423 0084 0022     	 movs r2,#0
 1424 0086 FFF7FEFF 	 bl XMC_GPIO_SetMode
 1425              	.L89:
 521:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 522:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 523:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 524:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 1426              	 .loc 2 524 0
 1427 008a FB68     	 ldr r3,[r7,#12]
 525:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1428              	 .loc 2 525 0
 1429 008c 1846     	 mov r0,r3
 1430 008e 1037     	 adds r7,r7,#16
 1431              	.LCFI66:
 1432              	 .cfi_def_cfa_offset 8
 1433 0090 BD46     	 mov sp,r7
 1434              	.LCFI67:
 1435              	 .cfi_def_cfa_register 13
 1436              	 
 1437 0092 80BD     	 pop {r7,pc}
 1438              	.L94:
 1439              	 .align 2
 1440              	.L93:
 1441 0094 00000000 	 .word XMC_USBH0_device
 1442 0098 00000000 	 .word VBUS_port
 1443 009c 00000000 	 .word VBUS_pin
 1444              	 .cfi_endproc
 1445              	.LFE180:
 1447              	 .section .text.XMC_USBH_PortReset,"ax",%progbits
 1448              	 .align 2
 1449              	 .thumb
 1450              	 .thumb_func
 1452              	XMC_USBH_PortReset:
 1453              	.LFB181:
 526:../Libraries/XMCLib/src/xmc_usbh.c **** 
 527:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 528:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 529:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t Execution status. \ref Execution_status
 530:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 531:../Libraries/XMCLib/src/xmc_usbh.c ****  * Do USB port reset. Port reset should honor the requirement of 50ms delay before enabling.
 532:../Libraries/XMCLib/src/xmc_usbh.c ****  * The function depends on implementation of XMC_USBH_osDelay() for 1ms delay to achieve required d
 533:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 534:../Libraries/XMCLib/src/xmc_usbh.c **** */
 535:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortReset (uint8_t port) {
 1454              	 .loc 2 535 0
 1455              	 .cfi_startproc
 1456              	 
 1457              	 
 1458 0000 80B5     	 push {r7,lr}
 1459              	.LCFI68:
 1460              	 .cfi_def_cfa_offset 8
 1461              	 .cfi_offset 7,-8
 1462              	 .cfi_offset 14,-4
 1463 0002 84B0     	 sub sp,sp,#16
 1464              	.LCFI69:
 1465              	 .cfi_def_cfa_offset 24
 1466 0004 00AF     	 add r7,sp,#0
 1467              	.LCFI70:
 1468              	 .cfi_def_cfa_register 7
 1469 0006 0346     	 mov r3,r0
 1470 0008 FB71     	 strb r3,[r7,#7]
 536:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 537:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 1471              	 .loc 2 537 0
 1472 000a 0023     	 movs r3,#0
 1473 000c FB60     	 str r3,[r7,#12]
 538:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1474              	 .loc 2 538 0
 1475 000e 254B     	 ldr r3,.L101
 1476 0010 5B7C     	 ldrb r3,[r3,#17]
 1477 0012 002B     	 cmp r3,#0
 1478 0014 03D1     	 bne .L96
 539:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 540:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 1479              	 .loc 2 540 0
 1480 0016 4FF0FF33 	 mov r3,#-1
 1481 001a FB60     	 str r3,[r7,#12]
 1482 001c 3CE0     	 b .L97
 1483              	.L96:
 541:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 543:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 544:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 1484              	 .loc 2 544 0
 1485 001e FB79     	 ldrb r3,[r7,#7]
 1486 0020 002B     	 cmp r3,#0
 1487 0022 02D0     	 beq .L98
 545:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 546:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 1488              	 .loc 2 546 0
 1489 0024 6FF00403 	 mvn r3,#4
 1490 0028 FB60     	 str r3,[r7,#12]
 1491              	.L98:
 547:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 548:../Libraries/XMCLib/src/xmc_usbh.c **** 
 549:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.port_reset_active = true;
 1492              	 .loc 2 549 0
 1493 002a 1E4B     	 ldr r3,.L101
 1494 002c 0122     	 movs r2,#1
 1495 002e 9A74     	 strb r2,[r3,#18]
 550:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 1496              	 .loc 2 550 0
 1497 0030 1C4B     	 ldr r3,.L101
 1498 0032 1B68     	 ldr r3,[r3]
 1499 0034 D3F84034 	 ldr r3,[r3,#1088]
 1500 0038 BB60     	 str r3,[r7,#8]
 551:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 1501              	 .loc 2 551 0
 1502 003a BB68     	 ldr r3,[r7,#8]
 1503 003c 23F00403 	 bic r3,r3,#4
 1504 0040 BB60     	 str r3,[r7,#8]
 552:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 1505              	 .loc 2 552 0
 1506 0042 BB68     	 ldr r3,[r7,#8]
 1507 0044 43F48073 	 orr r3,r3,#256
 1508 0048 BB60     	 str r3,[r7,#8]
 553:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 1509              	 .loc 2 553 0
 1510 004a 164B     	 ldr r3,.L101
 1511 004c 1B68     	 ldr r3,[r3]
 1512 004e BA68     	 ldr r2,[r7,#8]
 1513 0050 C3F84024 	 str r2,[r3,#1088]
 554:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 1514              	 .loc 2 554 0
 1515 0054 3220     	 movs r0,#50
 1516 0056 FFF7FEFF 	 bl XMC_USBH_osDelay
 555:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 1517              	 .loc 2 555 0
 1518 005a BB68     	 ldr r3,[r7,#8]
 1519 005c 23F48073 	 bic r3,r3,#256
 1520 0060 BB60     	 str r3,[r7,#8]
 556:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 1521              	 .loc 2 556 0
 1522 0062 104B     	 ldr r3,.L101
 1523 0064 1B68     	 ldr r3,[r3]
 1524 0066 BA68     	 ldr r2,[r7,#8]
 1525 0068 C3F84024 	 str r2,[r3,#1088]
 557:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 1526              	 .loc 2 557 0
 1527 006c 3220     	 movs r0,#50
 1528 006e FFF7FEFF 	 bl XMC_USBH_osDelay
 558:../Libraries/XMCLib/src/xmc_usbh.c **** 
 559:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait for the port to be enabled*/
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     while ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtEna_Msk) == 0U)
 1529              	 .loc 2 560 0
 1530 0072 00BF     	 nop
 1531              	.L99:
 1532              	 .loc 2 560 0 is_stmt 0 discriminator 1
 1533 0074 0B4B     	 ldr r3,.L101
 1534 0076 1B68     	 ldr r3,[r3]
 1535 0078 D3F84034 	 ldr r3,[r3,#1088]
 1536 007c 03F00403 	 and r3,r3,#4
 1537 0080 002B     	 cmp r3,#0
 1538 0082 F7D0     	 beq .L99
 561:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 562:../Libraries/XMCLib/src/xmc_usbh.c ****       /*wait*/
 563:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 564:../Libraries/XMCLib/src/xmc_usbh.c **** 
 565:../Libraries/XMCLib/src/xmc_usbh.c ****     if (XMC_USBH0_device.port_reset_active == true)
 1539              	 .loc 2 565 0 is_stmt 1
 1540 0084 074B     	 ldr r3,.L101
 1541 0086 9B7C     	 ldrb r3,[r3,#18]
 1542 0088 002B     	 cmp r3,#0
 1543 008a 05D0     	 beq .L97
 566:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 567:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active = false;
 1544              	 .loc 2 567 0
 1545 008c 054B     	 ldr r3,.L101
 1546 008e 0022     	 movs r2,#0
 1547 0090 9A74     	 strb r2,[r3,#18]
 568:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 1548              	 .loc 2 568 0
 1549 0092 4FF0FF33 	 mov r3,#-1
 1550 0096 FB60     	 str r3,[r7,#12]
 1551              	.L97:
 569:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 570:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 571:../Libraries/XMCLib/src/xmc_usbh.c **** 
 572:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 1552              	 .loc 2 572 0
 1553 0098 FB68     	 ldr r3,[r7,#12]
 573:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1554              	 .loc 2 573 0
 1555 009a 1846     	 mov r0,r3
 1556 009c 1037     	 adds r7,r7,#16
 1557              	.LCFI71:
 1558              	 .cfi_def_cfa_offset 8
 1559 009e BD46     	 mov sp,r7
 1560              	.LCFI72:
 1561              	 .cfi_def_cfa_register 13
 1562              	 
 1563 00a0 80BD     	 pop {r7,pc}
 1564              	.L102:
 1565 00a2 00BF     	 .align 2
 1566              	.L101:
 1567 00a4 00000000 	 .word XMC_USBH0_device
 1568              	 .cfi_endproc
 1569              	.LFE181:
 1571              	 .section .text.XMC_USBH_PortSuspend,"ax",%progbits
 1572              	 .align 2
 1573              	 .thumb
 1574              	 .thumb_func
 1576              	XMC_USBH_PortSuspend:
 1577              	.LFB182:
 574:../Libraries/XMCLib/src/xmc_usbh.c **** 
 575:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 576:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 577:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref Execution_status
 578:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 579:../Libraries/XMCLib/src/xmc_usbh.c ****  * Suspend USB Port (stop generating SOFs).\n
 580:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 581:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 582:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortResume() \n
 583:../Libraries/XMCLib/src/xmc_usbh.c **** */
 584:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortSuspend (uint8_t port)
 585:../Libraries/XMCLib/src/xmc_usbh.c **** {
 1578              	 .loc 2 585 0
 1579              	 .cfi_startproc
 1580              	 
 1581              	 
 1582              	 
 1583 0000 80B4     	 push {r7}
 1584              	.LCFI73:
 1585              	 .cfi_def_cfa_offset 4
 1586              	 .cfi_offset 7,-4
 1587 0002 85B0     	 sub sp,sp,#20
 1588              	.LCFI74:
 1589              	 .cfi_def_cfa_offset 24
 1590 0004 00AF     	 add r7,sp,#0
 1591              	.LCFI75:
 1592              	 .cfi_def_cfa_register 7
 1593 0006 0346     	 mov r3,r0
 1594 0008 FB71     	 strb r3,[r7,#7]
 586:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 1595              	 .loc 2 586 0
 1596 000a 0023     	 movs r3,#0
 1597 000c FB60     	 str r3,[r7,#12]
 587:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 588:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1598              	 .loc 2 588 0
 1599 000e 194B     	 ldr r3,.L108
 1600 0010 5B7C     	 ldrb r3,[r3,#17]
 1601 0012 002B     	 cmp r3,#0
 1602 0014 03D1     	 bne .L104
 589:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 590:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 1603              	 .loc 2 590 0
 1604 0016 4FF0FF33 	 mov r3,#-1
 1605 001a FB60     	 str r3,[r7,#12]
 1606 001c 22E0     	 b .L105
 1607              	.L104:
 591:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 592:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 593:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 594:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 1608              	 .loc 2 594 0
 1609 001e FB79     	 ldrb r3,[r7,#7]
 1610 0020 002B     	 cmp r3,#0
 1611 0022 03D0     	 beq .L106
 595:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 596:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 1612              	 .loc 2 596 0
 1613 0024 6FF00403 	 mvn r3,#4
 1614 0028 FB60     	 str r3,[r7,#12]
 1615 002a 1BE0     	 b .L105
 1616              	.L106:
 597:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 598:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 599:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 600:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 1617              	 .loc 2 600 0
 1618 002c 114B     	 ldr r3,.L108
 1619 002e 1B68     	 ldr r3,[r3]
 1620 0030 D3F84034 	 ldr r3,[r3,#1088]
 1621 0034 BB60     	 str r3,[r7,#8]
 601:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 1622              	 .loc 2 601 0
 1623 0036 BB68     	 ldr r3,[r7,#8]
 1624 0038 23F00403 	 bic r3,r3,#4
 1625 003c BB60     	 str r3,[r7,#8]
 602:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtSusp_Msk;
 1626              	 .loc 2 602 0
 1627 003e BB68     	 ldr r3,[r7,#8]
 1628 0040 43F08003 	 orr r3,r3,#128
 1629 0044 BB60     	 str r3,[r7,#8]
 603:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 1630              	 .loc 2 603 0
 1631 0046 0B4B     	 ldr r3,.L108
 1632 0048 1B68     	 ldr r3,[r3]
 1633 004a BA68     	 ldr r2,[r7,#8]
 1634 004c C3F84024 	 str r2,[r3,#1088]
 604:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Stop PHY clock after suspending the bus*/
 605:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL |= XMC_USBH_PHY_CLK_STOP;
 1635              	 .loc 2 605 0
 1636 0050 084B     	 ldr r3,.L108
 1637 0052 1B68     	 ldr r3,[r3]
 1638 0054 074A     	 ldr r2,.L108
 1639 0056 1268     	 ldr r2,[r2]
 1640 0058 D2F8002E 	 ldr r2,[r2,#3584]
 1641 005c 42F00302 	 orr r2,r2,#3
 1642 0060 C3F8002E 	 str r2,[r3,#3584]
 1643              	.L105:
 606:../Libraries/XMCLib/src/xmc_usbh.c **** 
 607:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 608:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 609:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 1644              	 .loc 2 609 0
 1645 0064 FB68     	 ldr r3,[r7,#12]
 610:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1646              	 .loc 2 610 0
 1647 0066 1846     	 mov r0,r3
 1648 0068 1437     	 adds r7,r7,#20
 1649              	.LCFI76:
 1650              	 .cfi_def_cfa_offset 4
 1651 006a BD46     	 mov sp,r7
 1652              	.LCFI77:
 1653              	 .cfi_def_cfa_register 13
 1654              	 
 1655 006c 5DF8047B 	 ldr r7,[sp],#4
 1656              	.LCFI78:
 1657              	 .cfi_restore 7
 1658              	 .cfi_def_cfa_offset 0
 1659 0070 7047     	 bx lr
 1660              	.L109:
 1661 0072 00BF     	 .align 2
 1662              	.L108:
 1663 0074 00000000 	 .word XMC_USBH0_device
 1664              	 .cfi_endproc
 1665              	.LFE182:
 1667              	 .section .text.XMC_USBH_PortResume,"ax",%progbits
 1668              	 .align 2
 1669              	 .thumb
 1670              	 .thumb_func
 1672              	XMC_USBH_PortResume:
 1673              	.LFB183:
 611:../Libraries/XMCLib/src/xmc_usbh.c **** 
 612:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 613:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 614:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return \ref Execution_status
 615:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 616:../Libraries/XMCLib/src/xmc_usbh.c ****  * Resume suspended USB port (start generating SOFs).\n
 617:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 618:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 619:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortSuspend() \n
 620:../Libraries/XMCLib/src/xmc_usbh.c **** */
 621:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortResume (uint8_t port)
 622:../Libraries/XMCLib/src/xmc_usbh.c **** {
 1674              	 .loc 2 622 0
 1675              	 .cfi_startproc
 1676              	 
 1677              	 
 1678 0000 80B5     	 push {r7,lr}
 1679              	.LCFI79:
 1680              	 .cfi_def_cfa_offset 8
 1681              	 .cfi_offset 7,-8
 1682              	 .cfi_offset 14,-4
 1683 0002 84B0     	 sub sp,sp,#16
 1684              	.LCFI80:
 1685              	 .cfi_def_cfa_offset 24
 1686 0004 00AF     	 add r7,sp,#0
 1687              	.LCFI81:
 1688              	 .cfi_def_cfa_register 7
 1689 0006 0346     	 mov r3,r0
 1690 0008 FB71     	 strb r3,[r7,#7]
 623:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 1691              	 .loc 2 623 0
 1692 000a 0023     	 movs r3,#0
 1693 000c FB60     	 str r3,[r7,#12]
 624:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 625:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1694              	 .loc 2 625 0
 1695 000e 204B     	 ldr r3,.L115
 1696 0010 5B7C     	 ldrb r3,[r3,#17]
 1697 0012 002B     	 cmp r3,#0
 1698 0014 03D1     	 bne .L111
 626:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 627:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 1699              	 .loc 2 627 0
 1700 0016 4FF0FF33 	 mov r3,#-1
 1701 001a FB60     	 str r3,[r7,#12]
 1702 001c 33E0     	 b .L112
 1703              	.L111:
 628:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 629:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 630:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 631:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 1704              	 .loc 2 631 0
 1705 001e FB79     	 ldrb r3,[r7,#7]
 1706 0020 002B     	 cmp r3,#0
 1707 0022 03D0     	 beq .L113
 632:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 633:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 1708              	 .loc 2 633 0
 1709 0024 6FF00403 	 mvn r3,#4
 1710 0028 FB60     	 str r3,[r7,#12]
 1711 002a 2CE0     	 b .L112
 1712              	.L113:
 634:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 635:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 636:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 637:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Ungate PHY clock*/
 638:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 1713              	 .loc 2 638 0
 1714 002c 184B     	 ldr r3,.L115
 1715 002e 1B68     	 ldr r3,[r3]
 1716 0030 4FF48072 	 mov r2,#256
 1717 0034 C3F8002E 	 str r2,[r3,#3584]
 639:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Set resume bit*/
 640:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 1718              	 .loc 2 640 0
 1719 0038 154B     	 ldr r3,.L115
 1720 003a 1B68     	 ldr r3,[r3]
 1721 003c D3F84034 	 ldr r3,[r3,#1088]
 1722 0040 BB60     	 str r3,[r7,#8]
 641:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 1723              	 .loc 2 641 0
 1724 0042 BB68     	 ldr r3,[r7,#8]
 1725 0044 23F00403 	 bic r3,r3,#4
 1726 0048 BB60     	 str r3,[r7,#8]
 642:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 1727              	 .loc 2 642 0
 1728 004a BB68     	 ldr r3,[r7,#8]
 1729 004c 43F04003 	 orr r3,r3,#64
 1730 0050 BB60     	 str r3,[r7,#8]
 643:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 1731              	 .loc 2 643 0
 1732 0052 0F4B     	 ldr r3,.L115
 1733 0054 1B68     	 ldr r3,[r3]
 1734 0056 BA68     	 ldr r2,[r7,#8]
 1735 0058 C3F84024 	 str r2,[r3,#1088]
 644:../Libraries/XMCLib/src/xmc_usbh.c **** 
 645:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(20U);
 1736              	 .loc 2 645 0
 1737 005c 1420     	 movs r0,#20
 1738 005e FFF7FEFF 	 bl XMC_USBH_osDelay
 646:../Libraries/XMCLib/src/xmc_usbh.c **** 
 647:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 1739              	 .loc 2 647 0
 1740 0062 0B4B     	 ldr r3,.L115
 1741 0064 1B68     	 ldr r3,[r3]
 1742 0066 D3F84034 	 ldr r3,[r3,#1088]
 1743 006a BB60     	 str r3,[r7,#8]
 648:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 1744              	 .loc 2 648 0
 1745 006c BB68     	 ldr r3,[r7,#8]
 1746 006e 23F00403 	 bic r3,r3,#4
 1747 0072 BB60     	 str r3,[r7,#8]
 649:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 1748              	 .loc 2 649 0
 1749 0074 BB68     	 ldr r3,[r7,#8]
 1750 0076 23F04003 	 bic r3,r3,#64
 1751 007a BB60     	 str r3,[r7,#8]
 650:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 1752              	 .loc 2 650 0
 1753 007c 044B     	 ldr r3,.L115
 1754 007e 1B68     	 ldr r3,[r3]
 1755 0080 BA68     	 ldr r2,[r7,#8]
 1756 0082 C3F84024 	 str r2,[r3,#1088]
 1757              	.L112:
 651:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 652:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 653:../Libraries/XMCLib/src/xmc_usbh.c ****   
 654:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 1758              	 .loc 2 654 0
 1759 0086 FB68     	 ldr r3,[r7,#12]
 655:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1760              	 .loc 2 655 0
 1761 0088 1846     	 mov r0,r3
 1762 008a 1037     	 adds r7,r7,#16
 1763              	.LCFI82:
 1764              	 .cfi_def_cfa_offset 8
 1765 008c BD46     	 mov sp,r7
 1766              	.LCFI83:
 1767              	 .cfi_def_cfa_register 13
 1768              	 
 1769 008e 80BD     	 pop {r7,pc}
 1770              	.L116:
 1771              	 .align 2
 1772              	.L115:
 1773 0090 00000000 	 .word XMC_USBH0_device
 1774              	 .cfi_endproc
 1775              	.LFE183:
 1777              	 .section .text.XMC_USBH_PortGetState,"ax",%progbits
 1778              	 .align 2
 1779              	 .thumb
 1780              	 .thumb_func
 1782              	XMC_USBH_PortGetState:
 1783              	.LFB184:
 656:../Libraries/XMCLib/src/xmc_usbh.c **** 
 657:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 658:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 659:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PORT_STATE_t Port State
 660:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 661:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 662:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB port state. The state indicates if the port is connected, port speed
 663:../Libraries/XMCLib/src/xmc_usbh.c ****  * and port overcurrent status.
 664:../Libraries/XMCLib/src/xmc_usbh.c **** */
 665:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PORT_STATE_t XMC_USBH_PortGetState (uint8_t port)
 666:../Libraries/XMCLib/src/xmc_usbh.c **** {
 1784              	 .loc 2 666 0
 1785              	 .cfi_startproc
 1786              	 
 1787              	 
 1788              	 
 1789 0000 80B4     	 push {r7}
 1790              	.LCFI84:
 1791              	 .cfi_def_cfa_offset 4
 1792              	 .cfi_offset 7,-4
 1793 0002 85B0     	 sub sp,sp,#20
 1794              	.LCFI85:
 1795              	 .cfi_def_cfa_offset 24
 1796 0004 00AF     	 add r7,sp,#0
 1797              	.LCFI86:
 1798              	 .cfi_def_cfa_register 7
 1799 0006 0346     	 mov r3,r0
 1800 0008 FB71     	 strb r3,[r7,#7]
 667:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PORT_STATE_t port_state = { 0U, 0U, 0U };
 1801              	 .loc 2 667 0
 1802 000a 3B7A     	 ldrb r3,[r7,#8]
 1803 000c 6FF30003 	 bfc r3,#0,#1
 1804 0010 3B72     	 strb r3,[r7,#8]
 1805 0012 3B7A     	 ldrb r3,[r7,#8]
 1806 0014 6FF34103 	 bfc r3,#1,#1
 1807 0018 3B72     	 strb r3,[r7,#8]
 1808 001a 3B7A     	 ldrb r3,[r7,#8]
 1809 001c 6FF38303 	 bfc r3,#2,#2
 1810 0020 3B72     	 strb r3,[r7,#8]
 668:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 669:../Libraries/XMCLib/src/xmc_usbh.c ****   
 670:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1811              	 .loc 2 670 0
 1812 0022 194B     	 ldr r3,.L124
 1813 0024 5B7C     	 ldrb r3,[r3,#17]
 1814 0026 002B     	 cmp r3,#0
 1815 0028 26D0     	 beq .L118
 671:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 672:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Do not update the port state*/
 673:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 674:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 675:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 676:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 1816              	 .loc 2 676 0
 1817 002a FB79     	 ldrb r3,[r7,#7]
 1818 002c 002B     	 cmp r3,#0
 1819 002e 23D1     	 bne .L118
 677:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 678:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Do not update the port state*/
 679:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 680:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 681:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 682:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 1820              	 .loc 2 682 0
 1821 0030 154B     	 ldr r3,.L124
 1822 0032 1B68     	 ldr r3,[r3]
 1823 0034 D3F84034 	 ldr r3,[r3,#1088]
 1824 0038 FB60     	 str r3,[r7,#12]
 683:../Libraries/XMCLib/src/xmc_usbh.c ****       if(((hprt & USB_HPRT_PrtConnSts_Msk) != 0U))
 1825              	 .loc 2 683 0
 1826 003a FB68     	 ldr r3,[r7,#12]
 1827 003c 03F00103 	 and r3,r3,#1
 1828 0040 002B     	 cmp r3,#0
 1829 0042 04D0     	 beq .L119
 684:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 685:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 1U;
 1830              	 .loc 2 685 0
 1831 0044 3B7A     	 ldrb r3,[r7,#8]
 1832 0046 43F00103 	 orr r3,r3,#1
 1833 004a 3B72     	 strb r3,[r7,#8]
 1834 004c 03E0     	 b .L120
 1835              	.L119:
 686:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 687:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 688:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 689:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 0U;
 1836              	 .loc 2 689 0
 1837 004e 3B7A     	 ldrb r3,[r7,#8]
 1838 0050 6FF30003 	 bfc r3,#0,#1
 1839 0054 3B72     	 strb r3,[r7,#8]
 1840              	.L120:
 690:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 691:../Libraries/XMCLib/src/xmc_usbh.c ****       port_state.overcurrent = 0U;
 1841              	 .loc 2 691 0
 1842 0056 3B7A     	 ldrb r3,[r7,#8]
 1843 0058 6FF34103 	 bfc r3,#1,#1
 1844 005c 3B72     	 strb r3,[r7,#8]
 692:../Libraries/XMCLib/src/xmc_usbh.c **** 
 693:../Libraries/XMCLib/src/xmc_usbh.c ****       switch ((uint32_t)((uint32_t)(hprt & USB_HPRT_PrtSpd_Msk) >> USB_HPRT_PrtSpd_Pos)) {
 1845              	 .loc 2 693 0
 1846 005e FB68     	 ldr r3,[r7,#12]
 1847 0060 03F4C023 	 and r3,r3,#393216
 1848 0064 5B0C     	 lsrs r3,r3,#17
 1849 0066 012B     	 cmp r3,#1
 1850 0068 00D0     	 beq .L122
 694:../Libraries/XMCLib/src/xmc_usbh.c ****         case 1U: /* Full speed */
 695:../Libraries/XMCLib/src/xmc_usbh.c ****          port_state.speed = XMC_USBH_SPEED_FULL;
 696:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 697:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 698:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 1851              	 .loc 2 698 0
 1852 006a 05E0     	 b .L118
 1853              	.L122:
 695:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 1854              	 .loc 2 695 0
 1855 006c 3B7A     	 ldrb r3,[r7,#8]
 1856 006e 0122     	 movs r2,#1
 1857 0070 62F38303 	 bfi r3,r2,#2,#2
 1858 0074 3B72     	 strb r3,[r7,#8]
 696:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 1859              	 .loc 2 696 0
 1860 0076 00BF     	 nop
 1861              	.L118:
 699:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 700:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 701:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 702:../Libraries/XMCLib/src/xmc_usbh.c ****   return port_state;
 1862              	 .loc 2 702 0
 1863 0078 BB68     	 ldr r3,[r7,#8]
 703:../Libraries/XMCLib/src/xmc_usbh.c **** }
 1864              	 .loc 2 703 0
 1865 007a 1846     	 mov r0,r3
 1866 007c 1437     	 adds r7,r7,#20
 1867              	.LCFI87:
 1868              	 .cfi_def_cfa_offset 4
 1869 007e BD46     	 mov sp,r7
 1870              	.LCFI88:
 1871              	 .cfi_def_cfa_register 13
 1872              	 
 1873 0080 5DF8047B 	 ldr r7,[sp],#4
 1874              	.LCFI89:
 1875              	 .cfi_restore 7
 1876              	 .cfi_def_cfa_offset 0
 1877 0084 7047     	 bx lr
 1878              	.L125:
 1879 0086 00BF     	 .align 2
 1880              	.L124:
 1881 0088 00000000 	 .word XMC_USBH0_device
 1882              	 .cfi_endproc
 1883              	.LFE184:
 1885              	 .section .text.XMC_USBH_PipeCreate,"ax",%progbits
 1886              	 .align 2
 1887              	 .thumb
 1888              	 .thumb_func
 1890              	XMC_USBH_PipeCreate:
 1891              	.LFB185:
 704:../Libraries/XMCLib/src/xmc_usbh.c **** 
 705:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 706:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address
 707:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed
 708:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. This value should be 0 since hub is not supported.
 709:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port  USB port number. Only one port(0) is supported.
 710:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_addr Device endpoint address \n
 711:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.0..3: Address \n
 712:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.7:    Direction\n
 713:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_type Endpoint type (ARM_USB_ENDPOINT_xxx)
 714:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 715:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_interval Endpoint polling interval
 716:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PIPE_HANDLE Pipe handle is a pointer to pipe hardware base address.
 717:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 718:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 719:../Libraries/XMCLib/src/xmc_usbh.c ****  * Create/allocate a pipe configured with input parameters. The function looks for an unused pipe a
 720:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 721:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 722:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 723:../Libraries/XMCLib/src/xmc_usbh.c **** */
 724:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PIPE_HANDLE XMC_USBH_PipeCreate (uint8_t dev_addr, uint8_t dev_speed, uint8_t hub_a
 1892              	 .loc 2 724 0
 1893              	 .cfi_startproc
 1894              	 
 1895              	 
 1896 0000 90B5     	 push {r4,r7,lr}
 1897              	.LCFI90:
 1898              	 .cfi_def_cfa_offset 12
 1899              	 .cfi_offset 4,-12
 1900              	 .cfi_offset 7,-8
 1901              	 .cfi_offset 14,-4
 1902 0002 87B0     	 sub sp,sp,#28
 1903              	.LCFI91:
 1904              	 .cfi_def_cfa_offset 40
 1905 0004 00AF     	 add r7,sp,#0
 1906              	.LCFI92:
 1907              	 .cfi_def_cfa_register 7
 1908 0006 0446     	 mov r4,r0
 1909 0008 0846     	 mov r0,r1
 1910 000a 1146     	 mov r1,r2
 1911 000c 1A46     	 mov r2,r3
 1912 000e 2346     	 mov r3,r4
 1913 0010 FB71     	 strb r3,[r7,#7]
 1914 0012 0346     	 mov r3,r0
 1915 0014 BB71     	 strb r3,[r7,#6]
 1916 0016 0B46     	 mov r3,r1
 1917 0018 7B71     	 strb r3,[r7,#5]
 1918 001a 1346     	 mov r3,r2
 1919 001c 3B71     	 strb r3,[r7,#4]
 725:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 726:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 727:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t         i;
 728:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_val;
 729:../Libraries/XMCLib/src/xmc_usbh.c ****   
 730:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 1920              	 .loc 2 730 0
 1921 001e 484B     	 ldr r3,.L142
 1922 0020 5B7C     	 ldrb r3,[r3,#17]
 1923 0022 002B     	 cmp r3,#0
 1924 0024 02D1     	 bne .L127
 731:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 732:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)NULL;
 1925              	 .loc 2 732 0
 1926 0026 0023     	 movs r3,#0
 1927 0028 7B61     	 str r3,[r7,#20]
 1928 002a 84E0     	 b .L128
 1929              	.L127:
 733:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 734:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 735:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 736:../Libraries/XMCLib/src/xmc_usbh.c ****    /* get first free pipe available */
 737:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 1930              	 .loc 2 737 0
 1931 002c 444B     	 ldr r3,.L142
 1932 002e 5B68     	 ldr r3,[r3,#4]
 1933 0030 7B61     	 str r3,[r7,#20]
 738:../Libraries/XMCLib/src/xmc_usbh.c **** 
 739:../Libraries/XMCLib/src/xmc_usbh.c ****     for (i = 0U; i < USBH0_MAX_PIPE_NUM; i++) {
 1934              	 .loc 2 739 0
 1935 0032 0023     	 movs r3,#0
 1936 0034 3B61     	 str r3,[r7,#16]
 1937 0036 0CE0     	 b .L129
 1938              	.L132:
 740:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1939              	 .loc 2 740 0
 1940 0038 7B69     	 ldr r3,[r7,#20]
 1941 003a 1B68     	 ldr r3,[r3]
 1942 003c 23F04043 	 bic r3,r3,#-1073741824
 1943 0040 002B     	 cmp r3,#0
 1944 0042 00D1     	 bne .L130
 741:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 742:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 1945              	 .loc 2 742 0
 1946 0044 08E0     	 b .L131
 1947              	.L130:
 743:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 744:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch++;
 1948              	 .loc 2 744 0 discriminator 2
 1949 0046 7B69     	 ldr r3,[r7,#20]
 1950 0048 2033     	 adds r3,r3,#32
 1951 004a 7B61     	 str r3,[r7,#20]
 739:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1952              	 .loc 2 739 0 discriminator 2
 1953 004c 3B69     	 ldr r3,[r7,#16]
 1954 004e 0133     	 adds r3,r3,#1
 1955 0050 3B61     	 str r3,[r7,#16]
 1956              	.L129:
 739:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 1957              	 .loc 2 739 0 is_stmt 0 discriminator 1
 1958 0052 3B69     	 ldr r3,[r7,#16]
 1959 0054 0D2B     	 cmp r3,#13
 1960 0056 EFD9     	 bls .L132
 1961              	.L131:
 745:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 746:../Libraries/XMCLib/src/xmc_usbh.c ****   
 747:../Libraries/XMCLib/src/xmc_usbh.c ****     /* free pipe found? */
 748:../Libraries/XMCLib/src/xmc_usbh.c ****     if (i == USBH0_MAX_PIPE_NUM)
 1962              	 .loc 2 748 0 is_stmt 1
 1963 0058 3B69     	 ldr r3,[r7,#16]
 1964 005a 0E2B     	 cmp r3,#14
 1965 005c 02D1     	 bne .L133
 749:../Libraries/XMCLib/src/xmc_usbh.c ****     { 
 750:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch = (USB0_CH_TypeDef *)NULL;
 1966              	 .loc 2 750 0
 1967 005e 0023     	 movs r3,#0
 1968 0060 7B61     	 str r3,[r7,#20]
 1969 0062 68E0     	 b .L128
 1970              	.L133:
 751:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 752:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 753:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 754:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 1971              	 .loc 2 754 0
 1972 0064 7B69     	 ldr r3,[r7,#20]
 1973 0066 364A     	 ldr r2,.L142
 1974 0068 5268     	 ldr r2,[r2,#4]
 1975 006a 9B1A     	 subs r3,r3,r2
 1976 006c 5B11     	 asrs r3,r3,#5
 1977 006e 5B01     	 lsls r3,r3,#5
 1978 0070 344A     	 ldr r2,.L142+4
 1979 0072 1344     	 add r3,r3,r2
 1980 0074 BB60     	 str r3,[r7,#8]
 755:../Libraries/XMCLib/src/xmc_usbh.c **** 
 756:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));  /* Initialize pipe structure */
 1981              	 .loc 2 756 0
 1982 0076 B868     	 ldr r0,[r7,#8]
 1983 0078 0021     	 movs r1,#0
 1984 007a 2022     	 movs r2,#32
 1985 007c FFF7FEFF 	 bl memset
 757:../Libraries/XMCLib/src/xmc_usbh.c **** 
 758:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Fill in all fields of Endpoint Descriptor */
 759:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Get the end point direction from the MSB of address*/
 760:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_val = 0U;
 1986              	 .loc 2 760 0
 1987 0080 0023     	 movs r3,#0
 1988 0082 FB60     	 str r3,[r7,#12]
 761:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ep_addr >> 7U) & 0x1U) == 0U)
 1989              	 .loc 2 761 0
 1990 0084 97F82830 	 ldrb r3,[r7,#40]
 1991 0088 DB09     	 lsrs r3,r3,#7
 1992 008a DBB2     	 uxtb r3,r3
 1993 008c 03F00103 	 and r3,r3,#1
 1994 0090 002B     	 cmp r3,#0
 1995 0092 01D1     	 bne .L134
 762:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 763:../Libraries/XMCLib/src/xmc_usbh.c ****         loc_val = 1U;
 1996              	 .loc 2 763 0
 1997 0094 0123     	 movs r3,#1
 1998 0096 FB60     	 str r3,[r7,#12]
 1999              	.L134:
 764:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 765:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch->HCCHAR = ((uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size))|
 2000              	 .loc 2 765 0
 2001 0098 3B8E     	 ldrh r3,[r7,#48]
 2002 009a C3F30A02 	 ubfx r2,r3,#0,#11
 766:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 2003              	 .loc 2 766 0
 2004 009e 97F82830 	 ldrb r3,[r7,#40]
 2005 00a2 DB02     	 lsls r3,r3,#11
 2006 00a4 03F4F043 	 and r3,r3,#30720
 765:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 2007              	 .loc 2 765 0
 2008 00a8 1A43     	 orrs r2,r2,r3
 767:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 2009              	 .loc 2 767 0
 2010 00aa FB68     	 ldr r3,[r7,#12]
 2011 00ac DB03     	 lsls r3,r3,#15
 766:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 2012              	 .loc 2 766 0
 2013 00ae 1A43     	 orrs r2,r2,r3
 768:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 2014              	 .loc 2 768 0
 2015 00b0 97F82C30 	 ldrb r3,[r7,#44]
 2016 00b4 9B04     	 lsls r3,r3,#18
 2017 00b6 03F44023 	 and r3,r3,#786432
 767:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 2018              	 .loc 2 767 0
 2019 00ba 1A43     	 orrs r2,r2,r3
 769:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 2020              	 .loc 2 769 0
 2021 00bc FB79     	 ldrb r3,[r7,#7]
 2022 00be 9B05     	 lsls r3,r3,#22
 2023 00c0 03F0FE53 	 and r3,r3,#532676608
 768:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 2024              	 .loc 2 768 0
 2025 00c4 1A43     	 orrs r2,r2,r3
 765:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 2026              	 .loc 2 765 0
 2027 00c6 7B69     	 ldr r3,[r7,#20]
 2028 00c8 1A60     	 str r2,[r3]
 770:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Store Pipe settings */
 771:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 2029              	 .loc 2 771 0
 2030 00ca BB68     	 ldr r3,[r7,#8]
 2031 00cc 3A8E     	 ldrh r2,[r7,#48]
 2032 00ce 9A82     	 strh r2,[r3,#20]
 772:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 2033              	 .loc 2 772 0
 2034 00d0 BB68     	 ldr r3,[r7,#8]
 2035 00d2 97F82C20 	 ldrb r2,[r7,#44]
 2036 00d6 9A76     	 strb r2,[r3,#26]
 773:../Libraries/XMCLib/src/xmc_usbh.c ****       switch (ep_type) {
 2037              	 .loc 2 773 0
 2038 00d8 97F82C30 	 ldrb r3,[r7,#44]
 2039 00dc 032B     	 cmp r3,#3
 2040 00de 29D8     	 bhi .L141
 2041 00e0 01A2     	 adr r2,.L137
 2042 00e2 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2043 00e6 00BF     	 .p2align 2
 2044              	.L137:
 2045 00e8 35010000 	 .word .L141+1
 2046 00ec F9000000 	 .word .L138+1
 2047 00f0 35010000 	 .word .L141+1
 2048 00f4 F9000000 	 .word .L138+1
 2049              	 .p2align 1
 2050              	.L138:
 774:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 775:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_BULK:
 776:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 777:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 778:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_INTERRUPT:
 779:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ep_interval > 0U) {
 2051              	 .loc 2 779 0
 2052 00f8 97F83430 	 ldrb r3,[r7,#52]
 2053 00fc 002B     	 cmp r3,#0
 2054 00fe 04D0     	 beq .L139
 780:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 2055              	 .loc 2 780 0
 2056 0100 97F83430 	 ldrb r3,[r7,#52]
 2057 0104 9AB2     	 uxth r2,r3
 2058 0106 BB68     	 ldr r3,[r7,#8]
 2059 0108 DA82     	 strh r2,[r3,#22]
 2060              	.L139:
 781:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 782:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval = ptr_pipe->interval_reload;
 2061              	 .loc 2 782 0
 2062 010a BB68     	 ldr r3,[r7,#8]
 2063 010c DA8A     	 ldrh r2,[r3,#22]
 2064 010e BB68     	 ldr r3,[r7,#8]
 2065 0110 1A83     	 strh r2,[r3,#24]
 783:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 2066              	 .loc 2 783 0
 2067 0112 3B8E     	 ldrh r3,[r7,#48]
 2068 0114 DB0A     	 lsrs r3,r3,#11
 2069 0116 9BB2     	 uxth r3,r3
 2070 0118 0133     	 adds r3,r3,#1
 2071 011a 03F00303 	 and r3,r3,#3
 2072 011e FB60     	 str r3,[r7,#12]
 784:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 2073              	 .loc 2 784 0
 2074 0120 7B69     	 ldr r3,[r7,#20]
 2075 0122 1A68     	 ldr r2,[r3]
 2076 0124 FB68     	 ldr r3,[r7,#12]
 2077 0126 1B05     	 lsls r3,r3,#20
 2078 0128 03F44013 	 and r3,r3,#3145728
 2079 012c 1A43     	 orrs r2,r2,r3
 2080 012e 7B69     	 ldr r3,[r7,#20]
 2081 0130 1A60     	 str r2,[r3]
 785:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 2082              	 .loc 2 785 0
 2083 0132 00E0     	 b .L128
 2084              	.L141:
 786:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 787:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 2085              	 .loc 2 787 0
 2086 0134 00BF     	 nop
 2087              	.L128:
 788:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 789:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 790:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 791:../Libraries/XMCLib/src/xmc_usbh.c ****   return ((XMC_USBH_EP_HANDLE)ptr_ch);
 2088              	 .loc 2 791 0
 2089 0136 7B69     	 ldr r3,[r7,#20]
 792:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2090              	 .loc 2 792 0
 2091 0138 1846     	 mov r0,r3
 2092 013a 1C37     	 adds r7,r7,#28
 2093              	.LCFI93:
 2094              	 .cfi_def_cfa_offset 12
 2095 013c BD46     	 mov sp,r7
 2096              	.LCFI94:
 2097              	 .cfi_def_cfa_register 13
 2098              	 
 2099 013e 90BD     	 pop {r4,r7,pc}
 2100              	.L143:
 2101              	 .align 2
 2102              	.L142:
 2103 0140 00000000 	 .word XMC_USBH0_device
 2104 0144 00000000 	 .word pipe
 2105              	 .cfi_endproc
 2106              	.LFE185:
 2108              	 .section .text.XMC_USBH_PipeModify,"ax",%progbits
 2109              	 .align 2
 2110              	 .thumb
 2111              	 .thumb_func
 2113              	XMC_USBH_PipeModify:
 2114              	.LFB186:
 793:../Libraries/XMCLib/src/xmc_usbh.c **** 
 794:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 795:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 796:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address to be configured for the pipe.
 797:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed class.
 798:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. It should be 0 since hub is not supported.
 799:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port USB port number. Only one port(0) is supported.
 800:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 801:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 802:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 803:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 804:../Libraries/XMCLib/src/xmc_usbh.c ****  * Modify an existing pipe with input parameters. It can be used to configure the pipe after receiv
 805:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 806:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 807:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 808:../Libraries/XMCLib/src/xmc_usbh.c **** */
 809:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeModify (XMC_USBH_PIPE_HANDLE pipe_hndl, uint8_t dev_addr, uint8_t dev_s
 2115              	 .loc 2 809 0
 2116              	 .cfi_startproc
 2117              	 
 2118              	 
 2119              	 
 2120 0000 80B4     	 push {r7}
 2121              	.LCFI95:
 2122              	 .cfi_def_cfa_offset 4
 2123              	 .cfi_offset 7,-4
 2124 0002 87B0     	 sub sp,sp,#28
 2125              	.LCFI96:
 2126              	 .cfi_def_cfa_offset 32
 2127 0004 00AF     	 add r7,sp,#0
 2128              	.LCFI97:
 2129              	 .cfi_def_cfa_register 7
 2130 0006 7860     	 str r0,[r7,#4]
 2131 0008 0846     	 mov r0,r1
 2132 000a 1146     	 mov r1,r2
 2133 000c 1A46     	 mov r2,r3
 2134 000e 0346     	 mov r3,r0
 2135 0010 FB70     	 strb r3,[r7,#3]
 2136 0012 0B46     	 mov r3,r1
 2137 0014 BB70     	 strb r3,[r7,#2]
 2138 0016 1346     	 mov r3,r2
 2139 0018 7B70     	 strb r3,[r7,#1]
 810:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 811:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 812:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t   hcchar;
 813:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2140              	 .loc 2 813 0
 2141 001a 0023     	 movs r3,#0
 2142 001c 7B61     	 str r3,[r7,#20]
 814:../Libraries/XMCLib/src/xmc_usbh.c **** 
 815:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2143              	 .loc 2 815 0
 2144 001e 204B     	 ldr r3,.L150
 2145 0020 5B7C     	 ldrb r3,[r3,#17]
 2146 0022 002B     	 cmp r3,#0
 2147 0024 03D1     	 bne .L145
 816:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 817:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 2148              	 .loc 2 817 0
 2149 0026 4FF0FF33 	 mov r3,#-1
 2150 002a 7B61     	 str r3,[r7,#20]
 2151 002c 31E0     	 b .L146
 2152              	.L145:
 818:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 819:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 820:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 821:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 2153              	 .loc 2 821 0
 2154 002e 7B68     	 ldr r3,[r7,#4]
 2155 0030 002B     	 cmp r3,#0
 2156 0032 03D1     	 bne .L147
 822:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 823:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2157              	 .loc 2 823 0
 2158 0034 6FF00403 	 mvn r3,#4
 2159 0038 7B61     	 str r3,[r7,#20]
 2160 003a 2AE0     	 b .L146
 2161              	.L147:
 824:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 826:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 827:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 2162              	 .loc 2 827 0
 2163 003c 7B68     	 ldr r3,[r7,#4]
 2164 003e 3B61     	 str r3,[r7,#16]
 828:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 2165              	 .loc 2 828 0
 2166 0040 3B69     	 ldr r3,[r7,#16]
 2167 0042 174A     	 ldr r2,.L150
 2168 0044 5268     	 ldr r2,[r2,#4]
 2169 0046 9B1A     	 subs r3,r3,r2
 2170 0048 5B11     	 asrs r3,r3,#5
 2171 004a 5B01     	 lsls r3,r3,#5
 2172 004c 154A     	 ldr r2,.L150+4
 2173 004e 1344     	 add r3,r3,r2
 2174 0050 FB60     	 str r3,[r7,#12]
 829:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 2175              	 .loc 2 829 0
 2176 0052 FB68     	 ldr r3,[r7,#12]
 2177 0054 DB7E     	 ldrb r3,[r3,#27]
 2178 0056 002B     	 cmp r3,#0
 2179 0058 03D0     	 beq .L148
 830:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 831:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 2180              	 .loc 2 831 0
 2181 005a 6FF00103 	 mvn r3,#1
 2182 005e 7B61     	 str r3,[r7,#20]
 2183 0060 17E0     	 b .L146
 2184              	.L148:
 832:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 833:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 834:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 835:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Fill in all fields of channel */
 836:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar  =   ptr_ch->HCCHAR;
 2185              	 .loc 2 836 0
 2186 0062 3B69     	 ldr r3,[r7,#16]
 2187 0064 1B68     	 ldr r3,[r3]
 2188 0066 BB60     	 str r3,[r7,#8]
 837:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Clear fields */
 838:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar &= (uint32_t)~(USB_CH_HCCHAR_MPS_Msk | USB_CH_HCCHAR_DevAddr_Msk)  ;
 2189              	 .loc 2 838 0
 2190 0068 BA68     	 ldr r2,[r7,#8]
 2191 006a 0F4B     	 ldr r3,.L150+8
 2192 006c 1340     	 ands r3,r3,r2
 2193 006e BB60     	 str r3,[r7,#8]
 839:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Set fields */
 840:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar |= (uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size) | (USB_CH_HCCHARx_DEVADDR(dev_a
 2194              	 .loc 2 840 0
 2195 0070 BB8C     	 ldrh r3,[r7,#36]
 2196 0072 C3F30A02 	 ubfx r2,r3,#0,#11
 2197 0076 FB78     	 ldrb r3,[r7,#3]
 2198 0078 9B05     	 lsls r3,r3,#22
 2199 007a 03F0FE53 	 and r3,r3,#532676608
 2200 007e 1343     	 orrs r3,r3,r2
 2201 0080 BA68     	 ldr r2,[r7,#8]
 2202 0082 1343     	 orrs r3,r3,r2
 2203 0084 BB60     	 str r3,[r7,#8]
 841:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR = hcchar;
 2204              	 .loc 2 841 0
 2205 0086 3B69     	 ldr r3,[r7,#16]
 2206 0088 BA68     	 ldr r2,[r7,#8]
 2207 008a 1A60     	 str r2,[r3]
 842:../Libraries/XMCLib/src/xmc_usbh.c **** 
 843:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 2208              	 .loc 2 843 0
 2209 008c FB68     	 ldr r3,[r7,#12]
 2210 008e BA8C     	 ldrh r2,[r7,#36]
 2211 0090 9A82     	 strh r2,[r3,#20]
 2212              	.L146:
 844:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 845:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 846:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 847:../Libraries/XMCLib/src/xmc_usbh.c ****   
 848:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2213              	 .loc 2 848 0
 2214 0092 7B69     	 ldr r3,[r7,#20]
 849:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2215              	 .loc 2 849 0
 2216 0094 1846     	 mov r0,r3
 2217 0096 1C37     	 adds r7,r7,#28
 2218              	.LCFI98:
 2219              	 .cfi_def_cfa_offset 4
 2220 0098 BD46     	 mov sp,r7
 2221              	.LCFI99:
 2222              	 .cfi_def_cfa_register 13
 2223              	 
 2224 009a 5DF8047B 	 ldr r7,[sp],#4
 2225              	.LCFI100:
 2226              	 .cfi_restore 7
 2227              	 .cfi_def_cfa_offset 0
 2228 009e 7047     	 bx lr
 2229              	.L151:
 2230              	 .align 2
 2231              	.L150:
 2232 00a0 00000000 	 .word XMC_USBH0_device
 2233 00a4 00000000 	 .word pipe
 2234 00a8 00F83FE0 	 .word -532678656
 2235              	 .cfi_endproc
 2236              	.LFE186:
 2238              	 .section .text.XMC_USBH_PipeDelete,"ax",%progbits
 2239              	 .align 2
 2240              	 .thumb
 2241              	 .thumb_func
 2243              	XMC_USBH_PipeDelete:
 2244              	.LFB187:
 850:../Libraries/XMCLib/src/xmc_usbh.c **** 
 851:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 852:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 853:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 854:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 855:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 856:../Libraries/XMCLib/src/xmc_usbh.c ****  * Delete pipe from active pipes list. After it is deleted, it can be assigned to new pipe request.
 857:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 858:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 859:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 860:../Libraries/XMCLib/src/xmc_usbh.c **** */
 861:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeDelete (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 2245              	 .loc 2 861 0
 2246              	 .cfi_startproc
 2247              	 
 2248              	 
 2249 0000 80B5     	 push {r7,lr}
 2250              	.LCFI101:
 2251              	 .cfi_def_cfa_offset 8
 2252              	 .cfi_offset 7,-8
 2253              	 .cfi_offset 14,-4
 2254 0002 86B0     	 sub sp,sp,#24
 2255              	.LCFI102:
 2256              	 .cfi_def_cfa_offset 32
 2257 0004 00AF     	 add r7,sp,#0
 2258              	.LCFI103:
 2259              	 .cfi_def_cfa_register 7
 2260 0006 7860     	 str r0,[r7,#4]
 862:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 863:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 864:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2261              	 .loc 2 864 0
 2262 0008 0023     	 movs r3,#0
 2263 000a 7B61     	 str r3,[r7,#20]
 865:../Libraries/XMCLib/src/xmc_usbh.c **** 
 866:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2264              	 .loc 2 866 0
 2265 000c 1B4B     	 ldr r3,.L158
 2266 000e 5B7C     	 ldrb r3,[r3,#17]
 2267 0010 002B     	 cmp r3,#0
 2268 0012 03D1     	 bne .L153
 867:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 868:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 2269              	 .loc 2 868 0
 2270 0014 4FF0FF33 	 mov r3,#-1
 2271 0018 7B61     	 str r3,[r7,#20]
 2272 001a 2AE0     	 b .L154
 2273              	.L153:
 869:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 870:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 871:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 872:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl == 0U)
 2274              	 .loc 2 872 0
 2275 001c 7B68     	 ldr r3,[r7,#4]
 2276 001e 002B     	 cmp r3,#0
 2277 0020 03D1     	 bne .L155
 873:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 874:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2278              	 .loc 2 874 0
 2279 0022 6FF00403 	 mvn r3,#4
 2280 0026 7B61     	 str r3,[r7,#20]
 2281 0028 23E0     	 b .L154
 2282              	.L155:
 875:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 876:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 877:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 878:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 2283              	 .loc 2 878 0
 2284 002a 7B68     	 ldr r3,[r7,#4]
 2285 002c 3B61     	 str r3,[r7,#16]
 879:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 2286              	 .loc 2 879 0
 2287 002e 3B69     	 ldr r3,[r7,#16]
 2288 0030 124A     	 ldr r2,.L158
 2289 0032 5268     	 ldr r2,[r2,#4]
 2290 0034 9B1A     	 subs r3,r3,r2
 2291 0036 5B11     	 asrs r3,r3,#5
 2292 0038 5B01     	 lsls r3,r3,#5
 2293 003a 114A     	 ldr r2,.L158+4
 2294 003c 1344     	 add r3,r3,r2
 2295 003e FB60     	 str r3,[r7,#12]
 880:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 2296              	 .loc 2 880 0
 2297 0040 FB68     	 ldr r3,[r7,#12]
 2298 0042 DB7E     	 ldrb r3,[r3,#27]
 2299 0044 002B     	 cmp r3,#0
 2300 0046 03D0     	 beq .L156
 881:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 882:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 2301              	 .loc 2 882 0
 2302 0048 6FF00103 	 mvn r3,#1
 2303 004c 7B61     	 str r3,[r7,#20]
 2304 004e 10E0     	 b .L154
 2305              	.L156:
 883:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 884:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 885:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 886:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR            = 0U;
 2306              	 .loc 2 886 0
 2307 0050 3B69     	 ldr r3,[r7,#16]
 2308 0052 0022     	 movs r2,#0
 2309 0054 1A60     	 str r2,[r3]
 887:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 2310              	 .loc 2 887 0
 2311 0056 3B69     	 ldr r3,[r7,#16]
 2312 0058 0022     	 movs r2,#0
 2313 005a 9A60     	 str r2,[r3,#8]
 888:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 2314              	 .loc 2 888 0
 2315 005c 3B69     	 ldr r3,[r7,#16]
 2316 005e 0022     	 movs r2,#0
 2317 0060 DA60     	 str r2,[r3,#12]
 889:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 2318              	 .loc 2 889 0
 2319 0062 3B69     	 ldr r3,[r7,#16]
 2320 0064 0022     	 movs r2,#0
 2321 0066 1A61     	 str r2,[r3,#16]
 890:../Libraries/XMCLib/src/xmc_usbh.c **** 
 891:../Libraries/XMCLib/src/xmc_usbh.c ****         memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));
 2322              	 .loc 2 891 0
 2323 0068 F868     	 ldr r0,[r7,#12]
 2324 006a 0021     	 movs r1,#0
 2325 006c 2022     	 movs r2,#32
 2326 006e FFF7FEFF 	 bl memset
 2327              	.L154:
 892:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 893:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 894:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbh.c **** 
 896:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2328              	 .loc 2 896 0
 2329 0072 7B69     	 ldr r3,[r7,#20]
 897:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2330              	 .loc 2 897 0
 2331 0074 1846     	 mov r0,r3
 2332 0076 1837     	 adds r7,r7,#24
 2333              	.LCFI104:
 2334              	 .cfi_def_cfa_offset 8
 2335 0078 BD46     	 mov sp,r7
 2336              	.LCFI105:
 2337              	 .cfi_def_cfa_register 13
 2338              	 
 2339 007a 80BD     	 pop {r7,pc}
 2340              	.L159:
 2341              	 .align 2
 2342              	.L158:
 2343 007c 00000000 	 .word XMC_USBH0_device
 2344 0080 00000000 	 .word pipe
 2345              	 .cfi_endproc
 2346              	.LFE187:
 2348              	 .section .text.XMC_USBH_PipeReset,"ax",%progbits
 2349              	 .align 2
 2350              	 .thumb
 2351              	 .thumb_func
 2353              	XMC_USBH_PipeReset:
 2354              	.LFB188:
 898:../Libraries/XMCLib/src/xmc_usbh.c **** 
 899:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 900:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 901:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 902:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 903:../Libraries/XMCLib/src/xmc_usbh.c ****  * Reset pipe by clearing the interrupt mask and resetting the transfer control register.\n
 904:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 905:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 906:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
 907:../Libraries/XMCLib/src/xmc_usbh.c **** */
 908:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeReset (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 2355              	 .loc 2 908 0
 2356              	 .cfi_startproc
 2357              	 
 2358              	 
 2359              	 
 2360 0000 80B4     	 push {r7}
 2361              	.LCFI106:
 2362              	 .cfi_def_cfa_offset 4
 2363              	 .cfi_offset 7,-4
 2364 0002 87B0     	 sub sp,sp,#28
 2365              	.LCFI107:
 2366              	 .cfi_def_cfa_offset 32
 2367 0004 00AF     	 add r7,sp,#0
 2368              	.LCFI108:
 2369              	 .cfi_def_cfa_register 7
 2370 0006 7860     	 str r0,[r7,#4]
 909:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 910:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 911:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2371              	 .loc 2 911 0
 2372 0008 0023     	 movs r3,#0
 2373 000a 7B61     	 str r3,[r7,#20]
 912:../Libraries/XMCLib/src/xmc_usbh.c **** 
 913:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2374              	 .loc 2 913 0
 2375 000c 184B     	 ldr r3,.L166
 2376 000e 5B7C     	 ldrb r3,[r3,#17]
 2377 0010 002B     	 cmp r3,#0
 2378 0012 03D1     	 bne .L161
 914:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 915:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 2379              	 .loc 2 915 0
 2380 0014 4FF0FF33 	 mov r3,#-1
 2381 0018 7B61     	 str r3,[r7,#20]
 2382 001a 22E0     	 b .L162
 2383              	.L161:
 916:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 917:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 918:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 919:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 2384              	 .loc 2 919 0
 2385 001c 7B68     	 ldr r3,[r7,#4]
 2386 001e 002B     	 cmp r3,#0
 2387 0020 03D1     	 bne .L163
 920:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 921:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2388              	 .loc 2 921 0
 2389 0022 6FF00403 	 mvn r3,#4
 2390 0026 7B61     	 str r3,[r7,#20]
 2391 0028 1BE0     	 b .L162
 2392              	.L163:
 922:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 923:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 924:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 925:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 2393              	 .loc 2 925 0
 2394 002a 7B68     	 ldr r3,[r7,#4]
 2395 002c 3B61     	 str r3,[r7,#16]
 926:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 2396              	 .loc 2 926 0
 2397 002e 3B69     	 ldr r3,[r7,#16]
 2398 0030 0F4A     	 ldr r2,.L166
 2399 0032 5268     	 ldr r2,[r2,#4]
 2400 0034 9B1A     	 subs r3,r3,r2
 2401 0036 5B11     	 asrs r3,r3,#5
 2402 0038 5B01     	 lsls r3,r3,#5
 2403 003a 0E4A     	 ldr r2,.L166+4
 2404 003c 1344     	 add r3,r3,r2
 2405 003e FB60     	 str r3,[r7,#12]
 927:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 2406              	 .loc 2 927 0
 2407 0040 FB68     	 ldr r3,[r7,#12]
 2408 0042 DB7E     	 ldrb r3,[r3,#27]
 2409 0044 002B     	 cmp r3,#0
 2410 0046 03D0     	 beq .L164
 928:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 929:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 2411              	 .loc 2 929 0
 2412 0048 6FF00103 	 mvn r3,#1
 2413 004c 7B61     	 str r3,[r7,#20]
 2414 004e 08E0     	 b .L162
 2415              	.L164:
 930:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 931:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 932:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 933:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT    = 0U;
 2416              	 .loc 2 933 0
 2417 0050 3B69     	 ldr r3,[r7,#16]
 2418 0052 0022     	 movs r2,#0
 2419 0054 9A60     	 str r2,[r3,#8]
 934:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK = 0U;
 2420              	 .loc 2 934 0
 2421 0056 3B69     	 ldr r3,[r7,#16]
 2422 0058 0022     	 movs r2,#0
 2423 005a DA60     	 str r2,[r3,#12]
 935:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE   = 0U;
 2424              	 .loc 2 935 0
 2425 005c 3B69     	 ldr r3,[r7,#16]
 2426 005e 0022     	 movs r2,#0
 2427 0060 1A61     	 str r2,[r3,#16]
 2428              	.L162:
 936:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 937:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 938:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 939:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2429              	 .loc 2 939 0
 2430 0062 7B69     	 ldr r3,[r7,#20]
 940:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2431              	 .loc 2 940 0
 2432 0064 1846     	 mov r0,r3
 2433 0066 1C37     	 adds r7,r7,#28
 2434              	.LCFI109:
 2435              	 .cfi_def_cfa_offset 4
 2436 0068 BD46     	 mov sp,r7
 2437              	.LCFI110:
 2438              	 .cfi_def_cfa_register 13
 2439              	 
 2440 006a 5DF8047B 	 ldr r7,[sp],#4
 2441              	.LCFI111:
 2442              	 .cfi_restore 7
 2443              	 .cfi_def_cfa_offset 0
 2444 006e 7047     	 bx lr
 2445              	.L167:
 2446              	 .align 2
 2447              	.L166:
 2448 0070 00000000 	 .word XMC_USBH0_device
 2449 0074 00000000 	 .word pipe
 2450              	 .cfi_endproc
 2451              	.LFE188:
 2453              	 .section .text.XMC_USBH_PipeTransfer,"ax",%progbits
 2454              	 .align 2
 2455              	 .thumb
 2456              	 .thumb_func
 2458              	XMC_USBH_PipeTransfer:
 2459              	.LFB189:
 941:../Libraries/XMCLib/src/xmc_usbh.c **** 
 942:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 943:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 944:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param packet Packet information with bit masks to represent packet data toggle information and 
 945:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_DATA0 / \ref XMC_USBH_PACKET_DATA1, \ref XMC_USBH_PACKET_SETU
 946:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_OUT / \ref XMC_USBH_PACKET_IN
 947:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param data Pointer to buffer with data to send or for received data to be stored.
 948:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param num Number of data bytes to transfer
 949:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 950:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 951:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
 952:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Transfer packets through USB Pipe. Handles transfer of multiple packets using the pipe transfer
 953:../Libraries/XMCLib/src/xmc_usbh.c ****  *  The pipe event callback function will be called when the transfer is completed.\n
 954:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 955:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 956:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset() \n
 957:../Libraries/XMCLib/src/xmc_usbh.c **** */
 958:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransfer (XMC_USBH_PIPE_HANDLE pipe_hndl, uint32_t packet, uint8_t *dat
 2460              	 .loc 2 958 0
 2461              	 .cfi_startproc
 2462              	 
 2463              	 
 2464 0000 80B5     	 push {r7,lr}
 2465              	.LCFI112:
 2466              	 .cfi_def_cfa_offset 8
 2467              	 .cfi_offset 7,-8
 2468              	 .cfi_offset 14,-4
 2469 0002 86B0     	 sub sp,sp,#24
 2470              	.LCFI113:
 2471              	 .cfi_def_cfa_offset 32
 2472 0004 00AF     	 add r7,sp,#0
 2473              	.LCFI114:
 2474              	 .cfi_def_cfa_register 7
 2475 0006 F860     	 str r0,[r7,#12]
 2476 0008 B960     	 str r1,[r7,#8]
 2477 000a 7A60     	 str r2,[r7,#4]
 2478 000c 3B60     	 str r3,[r7]
 959:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 960:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2479              	 .loc 2 960 0
 2480 000e 0023     	 movs r3,#0
 2481 0010 7B61     	 str r3,[r7,#20]
 961:../Libraries/XMCLib/src/xmc_usbh.c **** 
 962:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2482              	 .loc 2 962 0
 2483 0012 3F4B     	 ldr r3,.L177
 2484 0014 5B7C     	 ldrb r3,[r3,#17]
 2485 0016 002B     	 cmp r3,#0
 2486 0018 03D1     	 bne .L169
 963:../Libraries/XMCLib/src/xmc_usbh.c ****   { 
 964:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 2487              	 .loc 2 964 0
 2488 001a 4FF0FF33 	 mov r3,#-1
 2489 001e 7B61     	 str r3,[r7,#20]
 2490 0020 71E0     	 b .L170
 2491              	.L169:
 965:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 966:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 967:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 968:../Libraries/XMCLib/src/xmc_usbh.c **** 
 969:../Libraries/XMCLib/src/xmc_usbh.c ****     if(!(((((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_OUT) ||
 2492              	 .loc 2 969 0
 2493 0022 BB68     	 ldr r3,[r7,#8]
 2494 0024 03F00F03 	 and r3,r3,#15
 2495 0028 022B     	 cmp r3,#2
 2496 002a 0DD0     	 beq .L171
 970:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 2497              	 .loc 2 970 0 discriminator 1
 2498 002c BB68     	 ldr r3,[r7,#8]
 2499 002e 03F00F03 	 and r3,r3,#15
 969:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 2500              	 .loc 2 969 0 discriminator 1
 2501 0032 032B     	 cmp r3,#3
 2502 0034 08D0     	 beq .L171
 971:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_SETUP )))
 2503              	 .loc 2 971 0 discriminator 2
 2504 0036 BB68     	 ldr r3,[r7,#8]
 2505 0038 03F00F03 	 and r3,r3,#15
 969:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 2506              	 .loc 2 969 0 discriminator 2
 2507 003c 012B     	 cmp r3,#1
 2508 003e 03D0     	 beq .L171
 972:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 973:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2509              	 .loc 2 973 0
 2510 0040 6FF00403 	 mvn r3,#4
 2511 0044 7B61     	 str r3,[r7,#20]
 2512 0046 5EE0     	 b .L170
 2513              	.L171:
 974:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 975:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 976:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 977:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pipe_hndl  == 0U)
 2514              	 .loc 2 977 0
 2515 0048 FB68     	 ldr r3,[r7,#12]
 2516 004a 002B     	 cmp r3,#0
 2517 004c 03D1     	 bne .L172
 978:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 979:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2518              	 .loc 2 979 0
 2519 004e 6FF00403 	 mvn r3,#4
 2520 0052 7B61     	 str r3,[r7,#20]
 2521 0054 57E0     	 b .L170
 2522              	.L172:
 980:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 981:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 982:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 983:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk) == 0U)
 2523              	 .loc 2 983 0
 2524 0056 2E4B     	 ldr r3,.L177
 2525 0058 1B68     	 ldr r3,[r3]
 2526 005a D3F84034 	 ldr r3,[r3,#1088]
 2527 005e 03F00103 	 and r3,r3,#1
 2528 0062 002B     	 cmp r3,#0
 2529 0064 03D1     	 bne .L173
 984:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 985:../Libraries/XMCLib/src/xmc_usbh.c ****           status = XMC_USBH_DRIVER_ERROR;
 2530              	 .loc 2 985 0
 2531 0066 4FF0FF33 	 mov r3,#-1
 2532 006a 7B61     	 str r3,[r7,#20]
 2533 006c 4BE0     	 b .L170
 2534              	.L173:
 986:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 987:../Libraries/XMCLib/src/xmc_usbh.c ****         else
 988:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 989:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)
 2535              	 .loc 2 989 0
 2536 006e FB68     	 ldr r3,[r7,#12]
 2537 0070 274A     	 ldr r2,.L177
 2538 0072 5268     	 ldr r2,[r2,#4]
 2539 0074 9B1A     	 subs r3,r3,r2
 2540 0076 5B11     	 asrs r3,r3,#5
 2541 0078 5B01     	 lsls r3,r3,#5
 2542 007a 264A     	 ldr r2,.L177+4
 2543 007c 1344     	 add r3,r3,r2
 2544 007e 3B61     	 str r3,[r7,#16]
 990:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->in_use != 0U)
 2545              	 .loc 2 990 0
 2546 0080 3B69     	 ldr r3,[r7,#16]
 2547 0082 DB7E     	 ldrb r3,[r3,#27]
 2548 0084 002B     	 cmp r3,#0
 2549 0086 03D0     	 beq .L174
 991:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 992:../Libraries/XMCLib/src/xmc_usbh.c ****             status = XMC_USBH_DRIVER_ERROR_BUSY;
 2550              	 .loc 2 992 0
 2551 0088 6FF00103 	 mvn r3,#1
 2552 008c 7B61     	 str r3,[r7,#20]
 2553 008e 3AE0     	 b .L170
 2554              	.L174:
 993:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 994:../Libraries/XMCLib/src/xmc_usbh.c ****           else
 995:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 996:../Libraries/XMCLib/src/xmc_usbh.c ****             /* Prepare transfer information */
 997:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet                = packet;
 2555              	 .loc 2 997 0
 2556 0090 3B69     	 ldr r3,[r7,#16]
 2557 0092 BA68     	 ldr r2,[r7,#8]
 2558 0094 1A60     	 str r2,[r3]
 998:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->data                  = data;
 2559              	 .loc 2 998 0
 2560 0096 3B69     	 ldr r3,[r7,#16]
 2561 0098 7A68     	 ldr r2,[r7,#4]
 2562 009a 5A60     	 str r2,[r3,#4]
 999:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num                   = num;
 2563              	 .loc 2 999 0
 2564 009c 3B69     	 ldr r3,[r7,#16]
 2565 009e 3A68     	 ldr r2,[r7]
 2566 00a0 9A60     	 str r2,[r3,#8]
1000:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total = 0U;
 2567              	 .loc 2 1000 0
 2568 00a2 3B69     	 ldr r3,[r7,#16]
 2569 00a4 0022     	 movs r2,#0
 2570 00a6 DA60     	 str r2,[r3,#12]
1001:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring      = 0U;
 2571              	 .loc 2 1001 0
 2572 00a8 3B69     	 ldr r3,[r7,#16]
 2573 00aa 0022     	 movs r2,#0
 2574 00ac 1A61     	 str r2,[r3,#16]
1002:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use                = 0U;
 2575              	 .loc 2 1002 0
 2576 00ae 3B69     	 ldr r3,[r7,#16]
 2577 00b0 0022     	 movs r2,#0
 2578 00b2 DA76     	 strb r2,[r3,#27]
1003:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active       = 0U;
 2579              	 .loc 2 1003 0
 2580 00b4 3B69     	 ldr r3,[r7,#16]
 2581 00b6 0022     	 movs r2,#0
 2582 00b8 1A77     	 strb r2,[r3,#28]
1004:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered   = 0U;
 2583              	 .loc 2 1004 0
 2584 00ba 3B69     	 ldr r3,[r7,#16]
 2585 00bc 0022     	 movs r2,#0
 2586 00be 5A77     	 strb r2,[r3,#29]
1005:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event                 = 0U;
 2587              	 .loc 2 1005 0
 2588 00c0 3B69     	 ldr r3,[r7,#16]
 2589 00c2 0022     	 movs r2,#0
 2590 00c4 9A77     	 strb r2,[r3,#30]
1006:../Libraries/XMCLib/src/xmc_usbh.c **** 
1007:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->interval 
 2591              	 .loc 2 1007 0
 2592 00c6 3B69     	 ldr r3,[r7,#16]
 2593 00c8 9B7E     	 ldrb r3,[r3,#26]
 2594 00ca 032B     	 cmp r3,#3
 2595 00cc 07D1     	 bne .L175
 2596              	 .loc 2 1007 0 is_stmt 0 discriminator 1
 2597 00ce 3B69     	 ldr r3,[r7,#16]
 2598 00d0 1B8B     	 ldrh r3,[r3,#24]
 2599 00d2 002B     	 cmp r3,#0
 2600 00d4 03D0     	 beq .L175
1008:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
 2601              	 .loc 2 1008 0 is_stmt 1
 2602 00d6 3B69     	 ldr r3,[r7,#16]
 2603 00d8 0122     	 movs r2,#1
 2604 00da DA76     	 strb r2,[r3,#27]
 2605 00dc 13E0     	 b .L170
 2606              	.L175:
1009:../Libraries/XMCLib/src/xmc_usbh.c ****             } else {
1010:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->transfer_active     = 1U;
 2607              	 .loc 2 1010 0
 2608 00de 3B69     	 ldr r3,[r7,#16]
 2609 00e0 0122     	 movs r2,#1
 2610 00e2 1A77     	 strb r2,[r3,#28]
1011:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U;
 2611              	 .loc 2 1011 0
 2612 00e4 3B69     	 ldr r3,[r7,#16]
 2613 00e6 0122     	 movs r2,#1
 2614 00e8 DA76     	 strb r2,[r3,#27]
1012:../Libraries/XMCLib/src/xmc_usbh.c ****               if(XMC_lStartTransfer (ptr_pipe, (USB0_CH_TypeDef *)pipe_hndl) == false)
 2615              	 .loc 2 1012 0
 2616 00ea FB68     	 ldr r3,[r7,#12]
 2617 00ec 3869     	 ldr r0,[r7,#16]
 2618 00ee 1946     	 mov r1,r3
 2619 00f0 FFF7FEFF 	 bl XMC_lStartTransfer
 2620 00f4 0346     	 mov r3,r0
 2621 00f6 83F00103 	 eor r3,r3,#1
 2622 00fa DBB2     	 uxtb r3,r3
 2623 00fc 002B     	 cmp r3,#0
 2624 00fe 02D0     	 beq .L170
1013:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1014:../Libraries/XMCLib/src/xmc_usbh.c ****                 status = XMC_USBH_DRIVER_ERROR;
 2625              	 .loc 2 1014 0
 2626 0100 4FF0FF33 	 mov r3,#-1
 2627 0104 7B61     	 str r3,[r7,#20]
 2628              	.L170:
1015:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1016:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1017:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1018:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1019:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1020:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1021:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1022:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2629              	 .loc 2 1022 0
 2630 0106 7B69     	 ldr r3,[r7,#20]
1023:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2631              	 .loc 2 1023 0
 2632 0108 1846     	 mov r0,r3
 2633 010a 1837     	 adds r7,r7,#24
 2634              	.LCFI115:
 2635              	 .cfi_def_cfa_offset 8
 2636 010c BD46     	 mov sp,r7
 2637              	.LCFI116:
 2638              	 .cfi_def_cfa_register 13
 2639              	 
 2640 010e 80BD     	 pop {r7,pc}
 2641              	.L178:
 2642              	 .align 2
 2643              	.L177:
 2644 0110 00000000 	 .word XMC_USBH0_device
 2645 0114 00000000 	 .word pipe
 2646              	 .cfi_endproc
 2647              	.LFE189:
 2649              	 .section .text.XMC_USBH_PipeTransferGetResult,"ax",%progbits
 2650              	 .align 2
 2651              	 .thumb
 2652              	 .thumb_func
 2654              	XMC_USBH_PipeTransferGetResult:
 2655              	.LFB190:
1024:../Libraries/XMCLib/src/xmc_usbh.c **** 
1025:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1026:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1027:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return uint32_t Number of successfully transferred data bytes
1028:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1029:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
1030:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Get result of USB Pipe transfer.
1031:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1032:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1033:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1034:../Libraries/XMCLib/src/xmc_usbh.c **** */
1035:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 2656              	 .loc 2 1035 0
 2657              	 .cfi_startproc
 2658              	 
 2659              	 
 2660              	 
 2661 0000 80B4     	 push {r7}
 2662              	.LCFI117:
 2663              	 .cfi_def_cfa_offset 4
 2664              	 .cfi_offset 7,-4
 2665 0002 85B0     	 sub sp,sp,#20
 2666              	.LCFI118:
 2667              	 .cfi_def_cfa_offset 24
 2668 0004 00AF     	 add r7,sp,#0
 2669              	.LCFI119:
 2670              	 .cfi_def_cfa_register 7
 2671 0006 7860     	 str r0,[r7,#4]
1036:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t status;
1037:../Libraries/XMCLib/src/xmc_usbh.c ****   if (pipe_hndl == 0U)
 2672              	 .loc 2 1037 0
 2673 0008 7B68     	 ldr r3,[r7,#4]
 2674 000a 002B     	 cmp r3,#0
 2675 000c 02D1     	 bne .L180
1038:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1039:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
 2676              	 .loc 2 1039 0
 2677 000e 0023     	 movs r3,#0
 2678 0010 FB60     	 str r3,[r7,#12]
 2679 0012 0AE0     	 b .L181
 2680              	.L180:
1040:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1041:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1042:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1043:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channe
 2681              	 .loc 2 1043 0
 2682 0014 7B68     	 ldr r3,[r7,#4]
 2683 0016 084A     	 ldr r2,.L183
 2684 0018 5268     	 ldr r2,[r2,#4]
 2685 001a 9B1A     	 subs r3,r3,r2
 2686 001c 5B11     	 asrs r3,r3,#5
 2687 001e 074A     	 ldr r2,.L183+4
 2688 0020 5B01     	 lsls r3,r3,#5
 2689 0022 1344     	 add r3,r3,r2
 2690 0024 0833     	 adds r3,r3,#8
 2691 0026 5B68     	 ldr r3,[r3,#4]
 2692 0028 FB60     	 str r3,[r7,#12]
 2693              	.L181:
1044:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1045:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2694              	 .loc 2 1045 0
 2695 002a FB68     	 ldr r3,[r7,#12]
1046:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2696              	 .loc 2 1046 0
 2697 002c 1846     	 mov r0,r3
 2698 002e 1437     	 adds r7,r7,#20
 2699              	.LCFI120:
 2700              	 .cfi_def_cfa_offset 4
 2701 0030 BD46     	 mov sp,r7
 2702              	.LCFI121:
 2703              	 .cfi_def_cfa_register 13
 2704              	 
 2705 0032 5DF8047B 	 ldr r7,[sp],#4
 2706              	.LCFI122:
 2707              	 .cfi_restore 7
 2708              	 .cfi_def_cfa_offset 0
 2709 0036 7047     	 bx lr
 2710              	.L184:
 2711              	 .align 2
 2712              	.L183:
 2713 0038 00000000 	 .word XMC_USBH0_device
 2714 003c 00000000 	 .word pipe
 2715              	 .cfi_endproc
 2716              	.LFE190:
 2718              	 .section .text.XMC_USBH_PipeTransferAbort,"ax",%progbits
 2719              	 .align 2
 2720              	 .thumb
 2721              	 .thumb_func
 2723              	XMC_USBH_PipeTransferAbort:
 2724              	.LFB191:
1047:../Libraries/XMCLib/src/xmc_usbh.c **** 
1048:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1049:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1050:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
1051:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1052:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1053:../Libraries/XMCLib/src/xmc_usbh.c ****  * Abort current USB Pipe transfer.\n
1054:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1055:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1056:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1057:../Libraries/XMCLib/src/xmc_usbh.c **** */
1058:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransferAbort (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 2725              	 .loc 2 1058 0
 2726              	 .cfi_startproc
 2727              	 
 2728              	 
 2729 0000 80B5     	 push {r7,lr}
 2730              	.LCFI123:
 2731              	 .cfi_def_cfa_offset 8
 2732              	 .cfi_offset 7,-8
 2733              	 .cfi_offset 14,-4
 2734 0002 86B0     	 sub sp,sp,#24
 2735              	.LCFI124:
 2736              	 .cfi_def_cfa_offset 32
 2737 0004 00AF     	 add r7,sp,#0
 2738              	.LCFI125:
 2739              	 .cfi_def_cfa_register 7
 2740 0006 7860     	 str r0,[r7,#4]
1059:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1060:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1061:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t timeout;
1062:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_ERROR;
 2741              	 .loc 2 1062 0
 2742 0008 4FF0FF33 	 mov r3,#-1
 2743 000c 3B61     	 str r3,[r7,#16]
1063:../Libraries/XMCLib/src/xmc_usbh.c ****   
1064:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch = (USB0_CH_TypeDef *) pipe_hndl;
 2744              	 .loc 2 1064 0
 2745 000e 7B68     	 ldr r3,[r7,#4]
 2746 0010 FB60     	 str r3,[r7,#12]
1065:../Libraries/XMCLib/src/xmc_usbh.c ****   
1066:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2747              	 .loc 2 1066 0
 2748 0012 2F4B     	 ldr r3,.L193
 2749 0014 5B7C     	 ldrb r3,[r3,#17]
 2750 0016 002B     	 cmp r3,#0
 2751 0018 54D0     	 beq .L186
1067:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1068:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Error in power state*/
1069:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1070:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1071:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1072:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 2752              	 .loc 2 1072 0
 2753 001a 7B68     	 ldr r3,[r7,#4]
 2754 001c 002B     	 cmp r3,#0
 2755 001e 03D1     	 bne .L187
1073:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1074:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 2756              	 .loc 2 1074 0
 2757 0020 6FF00403 	 mvn r3,#4
 2758 0024 3B61     	 str r3,[r7,#16]
 2759 0026 4DE0     	 b .L186
 2760              	.L187:
1075:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1076:../Libraries/XMCLib/src/xmc_usbh.c ****     else
1077:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1078:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 2761              	 .loc 2 1078 0
 2762 0028 FB68     	 ldr r3,[r7,#12]
 2763 002a 294A     	 ldr r2,.L193
 2764 002c 5268     	 ldr r2,[r2,#4]
 2765 002e 9B1A     	 subs r3,r3,r2
 2766 0030 5B11     	 asrs r3,r3,#5
 2767 0032 5B01     	 lsls r3,r3,#5
 2768 0034 274A     	 ldr r2,.L193+4
 2769 0036 1344     	 add r3,r3,r2
 2770 0038 BB60     	 str r3,[r7,#8]
1079:../Libraries/XMCLib/src/xmc_usbh.c **** 
1080:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U) {
 2771              	 .loc 2 1080 0
 2772 003a BB68     	 ldr r3,[r7,#8]
 2773 003c DB7E     	 ldrb r3,[r3,#27]
 2774 003e 002B     	 cmp r3,#0
 2775 0040 40D0     	 beq .L186
1081:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
 2776              	 .loc 2 1081 0
 2777 0042 BB68     	 ldr r3,[r7,#8]
 2778 0044 0022     	 movs r2,#0
 2779 0046 DA76     	 strb r2,[r3,#27]
1082:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Disable channel if not yet halted */
1083:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) == 0U)
 2780              	 .loc 2 1083 0
 2781 0048 FB68     	 ldr r3,[r7,#12]
 2782 004a 9B68     	 ldr r3,[r3,#8]
 2783 004c 03F00203 	 and r3,r3,#2
 2784 0050 002B     	 cmp r3,#0
 2785 0052 37D1     	 bne .L186
1084:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1085:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_ch->HCCHAR & USB_CH_HCCHAR_ChEna_Msk)
 2786              	 .loc 2 1085 0
 2787 0054 FB68     	 ldr r3,[r7,#12]
 2788 0056 1B68     	 ldr r3,[r3]
 2789 0058 002B     	 cmp r3,#0
 2790 005a 33DA     	 bge .L186
1086:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1087:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;
 2791              	 .loc 2 1087 0
 2792 005c FB68     	 ldr r3,[r7,#12]
 2793 005e 0022     	 movs r2,#0
 2794 0060 DA60     	 str r2,[r3,#12]
1088:../Libraries/XMCLib/src/xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
 2795              	 .loc 2 1088 0
 2796 0062 0120     	 movs r0,#1
 2797 0064 FFF7FEFF 	 bl XMC_USBH_osDelay
1089:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
 2798              	 .loc 2 1089 0
 2799 0068 FB68     	 ldr r3,[r7,#12]
 2800 006a 9B68     	 ldr r3,[r3,#8]
 2801 006c 03F01003 	 and r3,r3,#16
 2802 0070 002B     	 cmp r3,#0
 2803 0072 06D0     	 beq .L188
1090:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
 2804              	 .loc 2 1090 0
 2805 0074 FB68     	 ldr r3,[r7,#12]
 2806 0076 40F2BB72 	 movw r2,#1979
 2807 007a 9A60     	 str r2,[r3,#8]
1091:../Libraries/XMCLib/src/xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
 2808              	 .loc 2 1091 0
 2809 007c 0023     	 movs r3,#0
 2810 007e 3B61     	 str r3,[r7,#16]
 2811 0080 20E0     	 b .L186
 2812              	.L188:
1092:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1093:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1094:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1095:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;      /* Clear all interrupts */
 2813              	 .loc 2 1095 0
 2814 0082 FB68     	 ldr r3,[r7,#12]
 2815 0084 40F2BB72 	 movw r2,#1979
 2816 0088 9A60     	 str r2,[r3,#8]
1096:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
 2817              	 .loc 2 1096 0
 2818 008a FB68     	 ldr r3,[r7,#12]
 2819 008c 1B68     	 ldr r3,[r3]
 2820 008e 43F04042 	 orr r2,r3,#-1073741824
 2821 0092 FB68     	 ldr r3,[r7,#12]
 2822 0094 1A60     	 str r2,[r3]
1097:../Libraries/XMCLib/src/xmc_usbh.c **** 
1098:../Libraries/XMCLib/src/xmc_usbh.c ****               /* wait until channel is halted */
1099:../Libraries/XMCLib/src/xmc_usbh.c ****               for (timeout = 0U; timeout < 5000U; timeout++) {
 2823              	 .loc 2 1099 0
 2824 0096 0023     	 movs r3,#0
 2825 0098 7B61     	 str r3,[r7,#20]
 2826 009a 0EE0     	 b .L189
 2827              	.L191:
1100:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2828              	 .loc 2 1100 0
 2829 009c FB68     	 ldr r3,[r7,#12]
 2830 009e 9B68     	 ldr r3,[r3,#8]
 2831 00a0 03F00203 	 and r3,r3,#2
 2832 00a4 002B     	 cmp r3,#0
 2833 00a6 05D0     	 beq .L190
1101:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
 2834              	 .loc 2 1101 0
 2835 00a8 FB68     	 ldr r3,[r7,#12]
 2836 00aa 40F2BB72 	 movw r2,#1979
 2837 00ae 9A60     	 str r2,[r3,#8]
1102:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2838              	 .loc 2 1102 0
 2839 00b0 0023     	 movs r3,#0
 2840 00b2 3B61     	 str r3,[r7,#16]
 2841              	.L190:
1099:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2842              	 .loc 2 1099 0 discriminator 2
 2843 00b4 7B69     	 ldr r3,[r7,#20]
 2844 00b6 0133     	 adds r3,r3,#1
 2845 00b8 7B61     	 str r3,[r7,#20]
 2846              	.L189:
1099:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2847              	 .loc 2 1099 0 is_stmt 0 discriminator 1
 2848 00ba 7B69     	 ldr r3,[r7,#20]
 2849 00bc 41F28732 	 movw r2,#4999
 2850 00c0 9342     	 cmp r3,r2
 2851 00c2 EBD9     	 bls .L191
 2852              	.L186:
1103:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
1104:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1105:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1106:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1107:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1108:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1109:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1110:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1111:../Libraries/XMCLib/src/xmc_usbh.c **** 
1112:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2853              	 .loc 2 1112 0 is_stmt 1
 2854 00c4 3B69     	 ldr r3,[r7,#16]
1113:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2855              	 .loc 2 1113 0
 2856 00c6 1846     	 mov r0,r3
 2857 00c8 1837     	 adds r7,r7,#24
 2858              	.LCFI126:
 2859              	 .cfi_def_cfa_offset 8
 2860 00ca BD46     	 mov sp,r7
 2861              	.LCFI127:
 2862              	 .cfi_def_cfa_register 13
 2863              	 
 2864 00cc 80BD     	 pop {r7,pc}
 2865              	.L194:
 2866 00ce 00BF     	 .align 2
 2867              	.L193:
 2868 00d0 00000000 	 .word XMC_USBH0_device
 2869 00d4 00000000 	 .word pipe
 2870              	 .cfi_endproc
 2871              	.LFE191:
 2873              	 .section .text.XMC_USBH_GetFrameNumber,"ax",%progbits
 2874              	 .align 2
 2875              	 .thumb
 2876              	 .thumb_func
 2878              	XMC_USBH_GetFrameNumber:
 2879              	.LFB192:
1114:../Libraries/XMCLib/src/xmc_usbh.c **** 
1115:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1116:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Frame number.
1117:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1118:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1119:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB Frame Number.
1120:../Libraries/XMCLib/src/xmc_usbh.c **** */
1121:../Libraries/XMCLib/src/xmc_usbh.c **** static uint16_t XMC_USBH_GetFrameNumber (void)
1122:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2880              	 .loc 2 1122 0
 2881              	 .cfi_startproc
 2882              	 
 2883              	 
 2884              	 
 2885 0000 80B4     	 push {r7}
 2886              	.LCFI128:
 2887              	 .cfi_def_cfa_offset 4
 2888              	 .cfi_offset 7,-4
 2889 0002 83B0     	 sub sp,sp,#12
 2890              	.LCFI129:
 2891              	 .cfi_def_cfa_offset 16
 2892 0004 00AF     	 add r7,sp,#0
 2893              	.LCFI130:
 2894              	 .cfi_def_cfa_register 7
1123:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t status;
1124:../Libraries/XMCLib/src/xmc_usbh.c ****   
1125:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 2895              	 .loc 2 1125 0
 2896 0006 0B4B     	 ldr r3,.L199
 2897 0008 5B7C     	 ldrb r3,[r3,#17]
 2898 000a 002B     	 cmp r3,#0
 2899 000c 02D1     	 bne .L196
1126:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1127:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
 2900              	 .loc 2 1127 0
 2901 000e 0023     	 movs r3,#0
 2902 0010 FB80     	 strh r3,[r7,#6]
 2903 0012 07E0     	 b .L197
 2904              	.L196:
1128:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1129:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1130:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1131:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (uint16_t)((XMC_USBH0_device.global_register->HFNUM) & 0xFFFU);
 2905              	 .loc 2 1131 0
 2906 0014 074B     	 ldr r3,.L199
 2907 0016 1B68     	 ldr r3,[r3]
 2908 0018 D3F80834 	 ldr r3,[r3,#1032]
 2909 001c 9BB2     	 uxth r3,r3
 2910 001e C3F30B03 	 ubfx r3,r3,#0,#12
 2911 0022 FB80     	 strh r3,[r7,#6]
 2912              	.L197:
1132:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1133:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 2913              	 .loc 2 1133 0
 2914 0024 FB88     	 ldrh r3,[r7,#6]
1134:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2915              	 .loc 2 1134 0
 2916 0026 1846     	 mov r0,r3
 2917 0028 0C37     	 adds r7,r7,#12
 2918              	.LCFI131:
 2919              	 .cfi_def_cfa_offset 4
 2920 002a BD46     	 mov sp,r7
 2921              	.LCFI132:
 2922              	 .cfi_def_cfa_register 13
 2923              	 
 2924 002c 5DF8047B 	 ldr r7,[sp],#4
 2925              	.LCFI133:
 2926              	 .cfi_restore 7
 2927              	 .cfi_def_cfa_offset 0
 2928 0030 7047     	 bx lr
 2929              	.L200:
 2930 0032 00BF     	 .align 2
 2931              	.L199:
 2932 0034 00000000 	 .word XMC_USBH0_device
 2933              	 .cfi_endproc
 2934              	.LFE192:
 2936              	 .section .text.XMC_USBH_HandleIrq,"ax",%progbits
 2937              	 .align 2
 2938              	 .global XMC_USBH_HandleIrq
 2939              	 .thumb
 2940              	 .thumb_func
 2942              	XMC_USBH_HandleIrq:
 2943              	.LFB193:
1135:../Libraries/XMCLib/src/xmc_usbh.c **** 
1136:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1137:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param gintsts USB port interrupt status flag.
1138:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1139:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1140:../Libraries/XMCLib/src/xmc_usbh.c ****  * USB host interrupt handler. It updates port and pipe state information based on different events
1141:../Libraries/XMCLib/src/xmc_usbh.c ****  * generated by the peripheral. It propagates the port events to the callback function registered b
1142:../Libraries/XMCLib/src/xmc_usbh.c ****  * during initialization. When a pipe transfer complete event is detected, it checks if any further
1143:../Libraries/XMCLib/src/xmc_usbh.c ****  * to be transmitted on the same pipe and continues transmission until data is available. A pipe ev
1144:../Libraries/XMCLib/src/xmc_usbh.c ****  * to the user provided pipe event callback function. A transfer complete event will be propagated 
1145:../Libraries/XMCLib/src/xmc_usbh.c ****  * is transmitted for an OUT transaction.
1146:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1147:../Libraries/XMCLib/src/xmc_usbh.c **** */
1148:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_HandleIrq (uint32_t gintsts) {
 2944              	 .loc 2 1148 0
 2945              	 .cfi_startproc
 2946              	 
 2947              	 
 2948 0000 80B5     	 push {r7,lr}
 2949              	.LCFI134:
 2950              	 .cfi_def_cfa_offset 8
 2951              	 .cfi_offset 7,-8
 2952              	 .cfi_offset 14,-4
 2953 0002 92B0     	 sub sp,sp,#72
 2954              	.LCFI135:
 2955              	 .cfi_def_cfa_offset 80
 2956 0004 00AF     	 add r7,sp,#0
 2957              	.LCFI136:
 2958              	 .cfi_def_cfa_register 7
 2959 0006 7860     	 str r0,[r7,#4]
1149:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1150:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1151:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt, haint, hcint, pktcnt, mpsiz;
1152:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t ch;
1153:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t *ptr_data;
1154:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t *dfifo;
1155:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t grxsts, bcnt, dat, len, len_rest;
1156:../Libraries/XMCLib/src/xmc_usbh.c ****   
1157:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Host port interrupt */
1158:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_PrtInt_Msk) != 0U) {
 2960              	 .loc 2 1158 0
 2961 0008 7B68     	 ldr r3,[r7,#4]
 2962 000a 03F08073 	 and r3,r3,#16777216
 2963 000e 002B     	 cmp r3,#0
 2964 0010 38D0     	 beq .L202
1159:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt = XMC_USBH0_device.global_register->HPRT;
 2965              	 .loc 2 1159 0
 2966 0012 874B     	 ldr r3,.L252
 2967 0014 1B68     	 ldr r3,[r3]
 2968 0016 D3F84034 	 ldr r3,[r3,#1088]
 2969 001a 3B62     	 str r3,[r7,#32]
1160:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Clear port enable */
1161:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt & (uint32_t)(~USB_HPRT_PrtEna_Msk);
 2970              	 .loc 2 1161 0
 2971 001c 844B     	 ldr r3,.L252
 2972 001e 1B68     	 ldr r3,[r3]
 2973 0020 3A6A     	 ldr r2,[r7,#32]
 2974 0022 22F00402 	 bic r2,r2,#4
 2975 0026 C3F84024 	 str r2,[r3,#1088]
1162:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtConnDet_Msk) != 0U) {
 2976              	 .loc 2 1162 0
 2977 002a 3B6A     	 ldr r3,[r7,#32]
 2978 002c 03F00203 	 and r3,r3,#2
 2979 0030 002B     	 cmp r3,#0
 2980 0032 11D0     	 beq .L203
1163:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG =  (0x200U | (USB_CH_HCFG_FSLSPCS(1) |
 2981              	 .loc 2 1163 0
 2982 0034 7E4B     	 ldr r3,.L252
 2983 0036 1B68     	 ldr r3,[r3]
 2984 0038 40F20522 	 movw r2,#517
 2985 003c C3F80024 	 str r2,[r3,#1024]
1164:../Libraries/XMCLib/src/xmc_usbh.c ****                                                     USB_CH_HCFG_FSLSSUP(1)));
1165:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Ignore connect under reset */
1166:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.port_reset_active == false) {
 2986              	 .loc 2 1166 0
 2987 0040 7B4B     	 ldr r3,.L252
 2988 0042 9B7C     	 ldrb r3,[r3,#18]
 2989 0044 83F00103 	 eor r3,r3,#1
 2990 0048 DBB2     	 uxtb r3,r3
 2991 004a 002B     	 cmp r3,#0
 2992 004c 04D0     	 beq .L203
1167:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_CONNECT);
 2993              	 .loc 2 1167 0
 2994 004e 784B     	 ldr r3,.L252
 2995 0050 9B68     	 ldr r3,[r3,#8]
 2996 0052 0020     	 movs r0,#0
 2997 0054 0121     	 movs r1,#1
 2998 0056 9847     	 blx r3
 2999              	.L203:
1168:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1169:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1170:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtEnChng_Msk) != 0U) { /* If port enable changed */
 3000              	 .loc 2 1170 0
 3001 0058 3B6A     	 ldr r3,[r7,#32]
 3002 005a 03F00803 	 and r3,r3,#8
 3003 005e 002B     	 cmp r3,#0
 3004 0060 10D0     	 beq .L202
1171:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((hprt & USB_HPRT_PrtEna_Msk) != 0U) {  /* If device connected */
 3005              	 .loc 2 1171 0
 3006 0062 3B6A     	 ldr r3,[r7,#32]
 3007 0064 03F00403 	 and r3,r3,#4
 3008 0068 002B     	 cmp r3,#0
 3009 006a 0BD0     	 beq .L202
1172:../Libraries/XMCLib/src/xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 3010              	 .loc 2 1172 0
 3011 006c 704B     	 ldr r3,.L252
 3012 006e 9B7C     	 ldrb r3,[r3,#18]
 3013 0070 002B     	 cmp r3,#0
 3014 0072 07D0     	 beq .L202
1173:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.port_reset_active = false;
 3015              	 .loc 2 1173 0
 3016 0074 6E4B     	 ldr r3,.L252
 3017 0076 0022     	 movs r2,#0
 3018 0078 9A74     	 strb r2,[r3,#18]
1174:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_RESET);
 3019              	 .loc 2 1174 0
 3020 007a 6D4B     	 ldr r3,.L252
 3021 007c 9B68     	 ldr r3,[r3,#8]
 3022 007e 0020     	 movs r0,#0
 3023 0080 0821     	 movs r1,#8
 3024 0082 9847     	 blx r3
 3025              	.L202:
1175:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1176:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1177:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1178:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1179:../Libraries/XMCLib/src/xmc_usbh.c ****   
1180:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Disconnect interrupt */
1181:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_DisconnInt_Msk) != 0U) {
 3026              	 .loc 2 1181 0
 3027 0084 7B68     	 ldr r3,[r7,#4]
 3028 0086 03F00053 	 and r3,r3,#536870912
 3029 008a 002B     	 cmp r3,#0
 3030 008c 3ED0     	 beq .L204
1182:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE = USB_GINTSTS_HOSTMODE_DisconnInt_Msk; /* Cl
 3031              	 .loc 2 1182 0
 3032 008e 684B     	 ldr r3,.L252
 3033 0090 1B68     	 ldr r3,[r3]
 3034 0092 4FF00052 	 mov r2,#536870912
 3035 0096 5A61     	 str r2,[r3,#20]
1183:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Ignore disconnect under reset */
1184:../Libraries/XMCLib/src/xmc_usbh.c ****     if ( XMC_USBH0_device.port_reset_active == false) {
 3036              	 .loc 2 1184 0
 3037 0098 654B     	 ldr r3,.L252
 3038 009a 9B7C     	 ldrb r3,[r3,#18]
 3039 009c 83F00103 	 eor r3,r3,#1
 3040 00a0 DBB2     	 uxtb r3,r3
 3041 00a2 002B     	 cmp r3,#0
 3042 00a4 32D0     	 beq .L204
1185:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 3043              	 .loc 2 1185 0
 3044 00a6 624B     	 ldr r3,.L252
 3045 00a8 5B68     	 ldr r3,[r3,#4]
 3046 00aa 3B64     	 str r3,[r7,#64]
1186:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(pipe);
 3047              	 .loc 2 1186 0
 3048 00ac 614B     	 ldr r3,.L252+4
 3049 00ae 7B64     	 str r3,[r7,#68]
1187:../Libraries/XMCLib/src/xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 3050              	 .loc 2 1187 0
 3051 00b0 0023     	 movs r3,#0
 3052 00b2 7B63     	 str r3,[r7,#52]
 3053 00b4 22E0     	 b .L205
 3054              	.L207:
1188:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 3055              	 .loc 2 1188 0
 3056 00b6 7B6C     	 ldr r3,[r7,#68]
 3057 00b8 DB7E     	 ldrb r3,[r3,#27]
 3058 00ba 002B     	 cmp r3,#0
 3059 00bc 15D0     	 beq .L206
1189:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 3060              	 .loc 2 1189 0
 3061 00be 7B6C     	 ldr r3,[r7,#68]
 3062 00c0 0022     	 movs r2,#0
 3063 00c2 DA76     	 strb r2,[r3,#27]
1190:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 3064              	 .loc 2 1190 0
 3065 00c4 3B6C     	 ldr r3,[r7,#64]
 3066 00c6 40F2BB72 	 movw r2,#1979
 3067 00ca 9A60     	 str r2,[r3,#8]
1191:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk;                           /* Enable halt inte
 3068              	 .loc 2 1191 0
 3069 00cc 3B6C     	 ldr r3,[r7,#64]
 3070 00ce 0222     	 movs r2,#2
 3071 00d0 DA60     	 str r2,[r3,#12]
1192:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
 3072              	 .loc 2 1192 0
 3073 00d2 3B6C     	 ldr r3,[r7,#64]
 3074 00d4 1B68     	 ldr r3,[r3]
 3075 00d6 43F04042 	 orr r2,r3,#-1073741824
 3076 00da 3B6C     	 ldr r3,[r7,#64]
 3077 00dc 1A60     	 str r2,[r3]
1193:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 3078              	 .loc 2 1193 0
 3079 00de 544B     	 ldr r3,.L252
 3080 00e0 DB68     	 ldr r3,[r3,#12]
 3081 00e2 3A6C     	 ldr r2,[r7,#64]
 3082 00e4 1046     	 mov r0,r2
 3083 00e6 4021     	 movs r1,#64
 3084 00e8 9847     	 blx r3
 3085              	.L206:
1194:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1195:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch++;
 3086              	 .loc 2 1195 0 discriminator 2
 3087 00ea 3B6C     	 ldr r3,[r7,#64]
 3088 00ec 2033     	 adds r3,r3,#32
 3089 00ee 3B64     	 str r3,[r7,#64]
1196:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe++;
 3090              	 .loc 2 1196 0 discriminator 2
 3091 00f0 7B6C     	 ldr r3,[r7,#68]
 3092 00f2 2033     	 adds r3,r3,#32
 3093 00f4 7B64     	 str r3,[r7,#68]
1187:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 3094              	 .loc 2 1187 0 discriminator 2
 3095 00f6 7B6B     	 ldr r3,[r7,#52]
 3096 00f8 0133     	 adds r3,r3,#1
 3097 00fa 7B63     	 str r3,[r7,#52]
 3098              	.L205:
1187:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 3099              	 .loc 2 1187 0 is_stmt 0 discriminator 1
 3100 00fc 7B6B     	 ldr r3,[r7,#52]
 3101 00fe 0D2B     	 cmp r3,#13
 3102 0100 D9D9     	 bls .L207
1197:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1198:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_DISCONNECT);
 3103              	 .loc 2 1198 0 is_stmt 1
 3104 0102 4B4B     	 ldr r3,.L252
 3105 0104 9B68     	 ldr r3,[r3,#8]
 3106 0106 0020     	 movs r0,#0
 3107 0108 0221     	 movs r1,#2
 3108 010a 9847     	 blx r3
 3109              	.L204:
1199:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1200:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1201:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle receive fifo not-empty interrupt */
1202:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_RxFLvl_Msk) != 0U) {
 3110              	 .loc 2 1202 0
 3111 010c 7B68     	 ldr r3,[r7,#4]
 3112 010e 03F01003 	 and r3,r3,#16
 3113 0112 002B     	 cmp r3,#0
 3114 0114 7DD0     	 beq .L208
1203:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE &= (uint32_t)~USB_GINTMSK_HOSTMODE_RxFLvlMsk
 3115              	 .loc 2 1203 0
 3116 0116 464B     	 ldr r3,.L252
 3117 0118 1B68     	 ldr r3,[r3]
 3118 011a 454A     	 ldr r2,.L252
 3119 011c 1268     	 ldr r2,[r2]
 3120 011e 9269     	 ldr r2,[r2,#24]
 3121 0120 22F01002 	 bic r2,r2,#16
 3122 0124 9A61     	 str r2,[r3,#24]
1204:../Libraries/XMCLib/src/xmc_usbh.c ****     grxsts     = (XMC_USBH0_device.global_register->GRXSTSP_HOSTMODE);    
 3123              	 .loc 2 1204 0
 3124 0126 424B     	 ldr r3,.L252
 3125 0128 1B68     	 ldr r3,[r3]
 3126 012a 1B6A     	 ldr r3,[r3,#32]
 3127 012c FB61     	 str r3,[r7,#28]
1205:../Libraries/XMCLib/src/xmc_usbh.c ****     /* IN Data Packet received ? */
1206:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)((grxsts >> 17U) & 0x0FU) == (uint32_t)USB_GRXSTSR_HOSTMODE_PktSts_IN_DATA_PKT) {
 3128              	 .loc 2 1206 0
 3129 012e FB69     	 ldr r3,[r7,#28]
 3130 0130 5B0C     	 lsrs r3,r3,#17
 3131 0132 03F00F03 	 and r3,r3,#15
 3132 0136 022B     	 cmp r3,#2
 3133 0138 63D1     	 bne .L209
1207:../Libraries/XMCLib/src/xmc_usbh.c ****       ch         = (uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_EPNum_Msk);
 3134              	 .loc 2 1207 0
 3135 013a FB69     	 ldr r3,[r7,#28]
 3136 013c 03F00F03 	 and r3,r3,#15
 3137 0140 7B63     	 str r3,[r7,#52]
1208:../Libraries/XMCLib/src/xmc_usbh.c ****       bcnt       = ((uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_BCnt_Msk) >> USB_GRXSTSR_DEVICEMODE_
 3138              	 .loc 2 1208 0
 3139 0142 FA69     	 ldr r2,[r7,#28]
 3140 0144 47F6F073 	 movw r3,#32752
 3141 0148 1340     	 ands r3,r3,r2
 3142 014a 1B09     	 lsrs r3,r3,#4
 3143 014c BB61     	 str r3,[r7,#24]
1209:../Libraries/XMCLib/src/xmc_usbh.c ****       dfifo      = (uint32_t *)XMC_USBH0_dfifo_ptr[ch];
 3144              	 .loc 2 1209 0
 3145 014e 3A4A     	 ldr r2,.L252+8
 3146 0150 7B6B     	 ldr r3,[r7,#52]
 3147 0152 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3148 0156 7B61     	 str r3,[r7,#20]
1210:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_data   =  pipe[ch].data + pipe[ch].num_transferred_total;
 3149              	 .loc 2 1210 0
 3150 0158 364A     	 ldr r2,.L252+4
 3151 015a 7B6B     	 ldr r3,[r7,#52]
 3152 015c 5B01     	 lsls r3,r3,#5
 3153 015e 1344     	 add r3,r3,r2
 3154 0160 5A68     	 ldr r2,[r3,#4]
 3155 0162 3449     	 ldr r1,.L252+4
 3156 0164 7B6B     	 ldr r3,[r7,#52]
 3157 0166 5B01     	 lsls r3,r3,#5
 3158 0168 0B44     	 add r3,r3,r1
 3159 016a 0833     	 adds r3,r3,#8
 3160 016c 5B68     	 ldr r3,[r3,#4]
 3161 016e 1344     	 add r3,r3,r2
 3162 0170 3B63     	 str r3,[r7,#48]
1211:../Libraries/XMCLib/src/xmc_usbh.c ****       len        =  bcnt / 4U; /* Received number of 32-bit data */
 3163              	 .loc 2 1211 0
 3164 0172 BB69     	 ldr r3,[r7,#24]
 3165 0174 9B08     	 lsrs r3,r3,#2
 3166 0176 BB62     	 str r3,[r7,#40]
1212:../Libraries/XMCLib/src/xmc_usbh.c ****       len_rest   =  bcnt & 3U; /* Number of bytes left */
 3167              	 .loc 2 1212 0
 3168 0178 BB69     	 ldr r3,[r7,#24]
 3169 017a 03F00303 	 and r3,r3,#3
 3170 017e 7B62     	 str r3,[r7,#36]
1213:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read data from fifo */
1214:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 32 bit sized  data */
1215:../Libraries/XMCLib/src/xmc_usbh.c ****       while (len != 0U) {
 3171              	 .loc 2 1215 0
 3172 0180 09E0     	 b .L210
 3173              	.L211:
1216:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1217:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__unaligned uint32_t *)ptr_data) = *dfifo;
1218:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1219:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__packed uint32_t *)ptr_data) = *dfifo;
 3174              	 .loc 2 1219 0
 3175 0182 7B69     	 ldr r3,[r7,#20]
 3176 0184 1A68     	 ldr r2,[r3]
 3177 0186 3B6B     	 ldr r3,[r7,#48]
 3178 0188 1A60     	 str r2,[r3]
1220:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1221:../Libraries/XMCLib/src/xmc_usbh.c **** 
1222:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_data += 4U;
 3179              	 .loc 2 1222 0
 3180 018a 3B6B     	 ldr r3,[r7,#48]
 3181 018c 0433     	 adds r3,r3,#4
 3182 018e 3B63     	 str r3,[r7,#48]
1223:../Libraries/XMCLib/src/xmc_usbh.c ****         len--;
 3183              	 .loc 2 1223 0
 3184 0190 BB6A     	 ldr r3,[r7,#40]
 3185 0192 013B     	 subs r3,r3,#1
 3186 0194 BB62     	 str r3,[r7,#40]
 3187              	.L210:
1215:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 3188              	 .loc 2 1215 0
 3189 0196 BB6A     	 ldr r3,[r7,#40]
 3190 0198 002B     	 cmp r3,#0
 3191 019a F2D1     	 bne .L211
1224:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1225:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 8 bit sized data */
1226:../Libraries/XMCLib/src/xmc_usbh.c ****       if (len_rest != 0U) {
 3192              	 .loc 2 1226 0
 3193 019c 7B6A     	 ldr r3,[r7,#36]
 3194 019e 002B     	 cmp r3,#0
 3195 01a0 13D0     	 beq .L212
1227:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1228:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__unaligned uint32_t *)dfifo);
1229:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1230:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__packed uint32_t *)dfifo);
 3196              	 .loc 2 1230 0
 3197 01a2 7B69     	 ldr r3,[r7,#20]
 3198 01a4 1B68     	 ldr r3,[r3]
 3199 01a6 FB62     	 str r3,[r7,#44]
1231:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1232:../Libraries/XMCLib/src/xmc_usbh.c ****         while (len_rest != 0U) {
 3200              	 .loc 2 1232 0
 3201 01a8 0CE0     	 b .L213
 3202              	.L214:
1233:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 3203              	 .loc 2 1233 0
 3204 01aa FB6A     	 ldr r3,[r7,#44]
 3205 01ac DAB2     	 uxtb r2,r3
 3206 01ae 3B6B     	 ldr r3,[r7,#48]
 3207 01b0 1A70     	 strb r2,[r3]
1234:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_data++;
 3208              	 .loc 2 1234 0
 3209 01b2 3B6B     	 ldr r3,[r7,#48]
 3210 01b4 0133     	 adds r3,r3,#1
 3211 01b6 3B63     	 str r3,[r7,#48]
1235:../Libraries/XMCLib/src/xmc_usbh.c ****           dat >>= 8;
 3212              	 .loc 2 1235 0
 3213 01b8 FB6A     	 ldr r3,[r7,#44]
 3214 01ba 1B0A     	 lsrs r3,r3,#8
 3215 01bc FB62     	 str r3,[r7,#44]
1236:../Libraries/XMCLib/src/xmc_usbh.c ****           len_rest--;
 3216              	 .loc 2 1236 0
 3217 01be 7B6A     	 ldr r3,[r7,#36]
 3218 01c0 013B     	 subs r3,r3,#1
 3219 01c2 7B62     	 str r3,[r7,#36]
 3220              	.L213:
1232:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 3221              	 .loc 2 1232 0
 3222 01c4 7B6A     	 ldr r3,[r7,#36]
 3223 01c6 002B     	 cmp r3,#0
 3224 01c8 EFD1     	 bne .L214
 3225              	.L212:
1237:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1238:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1239:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferring      += bcnt;
 3226              	 .loc 2 1239 0
 3227 01ca 1A4A     	 ldr r2,.L252+4
 3228 01cc 7B6B     	 ldr r3,[r7,#52]
 3229 01ce 5B01     	 lsls r3,r3,#5
 3230 01d0 1344     	 add r3,r3,r2
 3231 01d2 1033     	 adds r3,r3,#16
 3232 01d4 1A68     	 ldr r2,[r3]
 3233 01d6 BB69     	 ldr r3,[r7,#24]
 3234 01d8 1A44     	 add r2,r2,r3
 3235 01da 1649     	 ldr r1,.L252+4
 3236 01dc 7B6B     	 ldr r3,[r7,#52]
 3237 01de 5B01     	 lsls r3,r3,#5
 3238 01e0 0B44     	 add r3,r3,r1
 3239 01e2 1033     	 adds r3,r3,#16
 3240 01e4 1A60     	 str r2,[r3]
1240:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferred_total += bcnt;
 3241              	 .loc 2 1240 0
 3242 01e6 134A     	 ldr r2,.L252+4
 3243 01e8 7B6B     	 ldr r3,[r7,#52]
 3244 01ea 5B01     	 lsls r3,r3,#5
 3245 01ec 1344     	 add r3,r3,r2
 3246 01ee 0833     	 adds r3,r3,#8
 3247 01f0 5A68     	 ldr r2,[r3,#4]
 3248 01f2 BB69     	 ldr r3,[r7,#24]
 3249 01f4 1A44     	 add r2,r2,r3
 3250 01f6 0F49     	 ldr r1,.L252+4
 3251 01f8 7B6B     	 ldr r3,[r7,#52]
 3252 01fa 5B01     	 lsls r3,r3,#5
 3253 01fc 0B44     	 add r3,r3,r1
 3254 01fe 0833     	 adds r3,r3,#8
 3255 0200 5A60     	 str r2,[r3,#4]
 3256              	.L209:
1241:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1242:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE |= (uint32_t)USB_GINTMSK_HOSTMODE_RxFLvlMsk_
 3257              	 .loc 2 1242 0
 3258 0202 0B4B     	 ldr r3,.L252
 3259 0204 1B68     	 ldr r3,[r3]
 3260 0206 0A4A     	 ldr r2,.L252
 3261 0208 1268     	 ldr r2,[r2]
 3262 020a 9269     	 ldr r2,[r2,#24]
 3263 020c 42F01002 	 orr r2,r2,#16
 3264 0210 9A61     	 str r2,[r3,#24]
 3265              	.L208:
1243:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1244:../Libraries/XMCLib/src/xmc_usbh.c **** 
1245:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle sof interrupt */
1246:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_Sof_Msk) != 0U) { /* If start of frame interrupt */
 3266              	 .loc 2 1246 0
 3267 0212 7B68     	 ldr r3,[r7,#4]
 3268 0214 03F00803 	 and r3,r3,#8
 3269 0218 002B     	 cmp r3,#0
 3270 021a 35D0     	 beq .L215
1247:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_Sof_Msk; /* Clear SO
 3271              	 .loc 2 1247 0
 3272 021c 044B     	 ldr r3,.L252
 3273 021e 1B68     	 ldr r3,[r3]
 3274 0220 0822     	 movs r2,#8
 3275 0222 5A61     	 str r2,[r3,#20]
1248:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
 3276              	 .loc 2 1248 0
 3277 0224 034B     	 ldr r3,.L252+4
 3278 0226 7B64     	 str r3,[r7,#68]
1249:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 3279              	 .loc 2 1249 0
 3280 0228 0023     	 movs r3,#0
 3281 022a 7B63     	 str r3,[r7,#52]
 3282 022c 29E0     	 b .L216
 3283              	.L253:
 3284 022e 00BF     	 .align 2
 3285              	.L252:
 3286 0230 00000000 	 .word XMC_USBH0_device
 3287 0234 00000000 	 .word pipe
 3288 0238 00000000 	 .word XMC_USBH0_dfifo_ptr
 3289              	.L218:
1250:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
1251:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->in_use == 1U)) 
 3290              	 .loc 2 1251 0
 3291 023c 7B6C     	 ldr r3,[r7,#68]
 3292 023e 9B7E     	 ldrb r3,[r3,#26]
 3293 0240 032B     	 cmp r3,#3
 3294 0242 18D1     	 bne .L217
 3295              	 .loc 2 1251 0 is_stmt 0 discriminator 1
 3296 0244 7B6C     	 ldr r3,[r7,#68]
 3297 0246 DB7E     	 ldrb r3,[r3,#27]
 3298 0248 012B     	 cmp r3,#1
 3299 024a 14D1     	 bne .L217
1252:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 3300              	 .loc 2 1252 0 is_stmt 1
 3301 024c 7B6C     	 ldr r3,[r7,#68]
 3302 024e 1B8B     	 ldrh r3,[r3,#24]
 3303 0250 002B     	 cmp r3,#0
 3304 0252 10D0     	 beq .L217
1253:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1254:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval--;
 3305              	 .loc 2 1254 0
 3306 0254 7B6C     	 ldr r3,[r7,#68]
 3307 0256 1B8B     	 ldrh r3,[r3,#24]
 3308 0258 013B     	 subs r3,r3,#1
 3309 025a 9AB2     	 uxth r2,r3
 3310 025c 7B6C     	 ldr r3,[r7,#68]
 3311 025e 1A83     	 strh r2,[r3,#24]
1255:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
 3312              	 .loc 2 1255 0
 3313 0260 7B6C     	 ldr r3,[r7,#68]
 3314 0262 1B8B     	 ldrh r3,[r3,#24]
 3315 0264 002B     	 cmp r3,#0
 3316 0266 06D1     	 bne .L217
1256:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1257:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval = ptr_pipe->interval_reload;
 3317              	 .loc 2 1257 0
 3318 0268 7B6C     	 ldr r3,[r7,#68]
 3319 026a DA8A     	 ldrh r2,[r3,#22]
 3320 026c 7B6C     	 ldr r3,[r7,#68]
 3321 026e 1A83     	 strh r2,[r3,#24]
1258:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 3322              	 .loc 2 1258 0
 3323 0270 7B6C     	 ldr r3,[r7,#68]
 3324 0272 0122     	 movs r2,#1
 3325 0274 5A77     	 strb r2,[r3,#29]
 3326              	.L217:
1259:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1260:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1261:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1262:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe++;
 3327              	 .loc 2 1262 0 discriminator 2
 3328 0276 7B6C     	 ldr r3,[r7,#68]
 3329 0278 2033     	 adds r3,r3,#32
 3330 027a 7B64     	 str r3,[r7,#68]
1249:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 3331              	 .loc 2 1249 0 discriminator 2
 3332 027c 7B6B     	 ldr r3,[r7,#52]
 3333 027e 0133     	 adds r3,r3,#1
 3334 0280 7B63     	 str r3,[r7,#52]
 3335              	.L216:
1249:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 3336              	 .loc 2 1249 0 is_stmt 0 discriminator 1
 3337 0282 7B6B     	 ldr r3,[r7,#52]
 3338 0284 0D2B     	 cmp r3,#13
 3339 0286 D9D9     	 bls .L218
 3340              	.L215:
1263:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1264:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1265:../Libraries/XMCLib/src/xmc_usbh.c ****   
1266:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle host ctrl interrupt */
1267:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_HChInt_Msk) != 0U) {
 3341              	 .loc 2 1267 0 is_stmt 1
 3342 0288 7B68     	 ldr r3,[r7,#4]
 3343 028a 03F00073 	 and r3,r3,#33554432
 3344 028e 002B     	 cmp r3,#0
 3345 0290 00F06481 	 beq .L219
1268:../Libraries/XMCLib/src/xmc_usbh.c ****     haint = XMC_USBH0_device.global_register->HAINT;
 3346              	 .loc 2 1268 0
 3347 0294 824B     	 ldr r3,.L254
 3348 0296 1B68     	 ldr r3,[r3]
 3349 0298 D3F81434 	 ldr r3,[r3,#1044]
 3350 029c FB63     	 str r3,[r7,#60]
1269:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 3351              	 .loc 2 1269 0
 3352 029e 0023     	 movs r3,#0
 3353 02a0 7B63     	 str r3,[r7,#52]
 3354 02a2 57E1     	 b .L220
 3355              	.L239:
1270:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
1271:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((haint & (uint32_t)((uint32_t)1U << ch)) != 0U) {
 3356              	 .loc 2 1271 0
 3357 02a4 7B6B     	 ldr r3,[r7,#52]
 3358 02a6 FA6B     	 ldr r2,[r7,#60]
 3359 02a8 22FA03F3 	 lsr r3,r2,r3
 3360 02ac 03F00103 	 and r3,r3,#1
 3361 02b0 002B     	 cmp r3,#0
 3362 02b2 00F04C81 	 beq .L221
1272:../Libraries/XMCLib/src/xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
 3363              	 .loc 2 1272 0
 3364 02b6 7B6B     	 ldr r3,[r7,#52]
 3365 02b8 0122     	 movs r2,#1
 3366 02ba 02FA03F3 	 lsl r3,r2,r3
 3367 02be DB43     	 mvns r3,r3
 3368 02c0 FA6B     	 ldr r2,[r7,#60]
 3369 02c2 1340     	 ands r3,r3,r2
 3370 02c4 FB63     	 str r3,[r7,#60]
1273:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 3371              	 .loc 2 1273 0
 3372 02c6 764B     	 ldr r3,.L254
 3373 02c8 5A68     	 ldr r2,[r3,#4]
 3374 02ca 7B6B     	 ldr r3,[r7,#52]
 3375 02cc 5B01     	 lsls r3,r3,#5
 3376 02ce 1344     	 add r3,r3,r2
 3377 02d0 3B64     	 str r3,[r7,#64]
1274:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
 3378              	 .loc 2 1274 0
 3379 02d2 7B6B     	 ldr r3,[r7,#52]
 3380 02d4 5B01     	 lsls r3,r3,#5
 3381 02d6 734A     	 ldr r2,.L254+4
 3382 02d8 1344     	 add r3,r3,r2
 3383 02da 7B64     	 str r3,[r7,#68]
1275:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Local variable for HCINT*/
1276:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCINT;
 3384              	 .loc 2 1276 0
 3385 02dc 3B6C     	 ldr r3,[r7,#64]
 3386 02de 9B68     	 ldr r3,[r3,#8]
 3387 02e0 FB62     	 str r3,[r7,#44]
1277:../Libraries/XMCLib/src/xmc_usbh.c ****         hcint      =  (uint32_t)(dat & ptr_ch->HCINTMSK);
 3388              	 .loc 2 1277 0
 3389 02e2 3B6C     	 ldr r3,[r7,#64]
 3390 02e4 DA68     	 ldr r2,[r3,#12]
 3391 02e6 FB6A     	 ldr r3,[r7,#44]
 3392 02e8 1340     	 ands r3,r3,r2
 3393 02ea BB63     	 str r3,[r7,#56]
1278:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_ChHltd_Msk) != 0U) {                                  /* channel 
 3394              	 .loc 2 1278 0
 3395 02ec BB6B     	 ldr r3,[r7,#56]
 3396 02ee 03F00203 	 and r3,r3,#2
 3397 02f2 002B     	 cmp r3,#0
 3398 02f4 0BD0     	 beq .L222
1279:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = 0U;                                                        /*  disable
 3399              	 .loc 2 1279 0
 3400 02f6 3B6C     	 ldr r3,[r7,#64]
 3401 02f8 0022     	 movs r2,#0
 3402 02fa DA60     	 str r2,[r3,#12]
1280:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
 3403              	 .loc 2 1280 0
 3404 02fc 3B6C     	 ldr r3,[r7,#64]
 3405 02fe 40F2BB72 	 movw r2,#1979
 3406 0302 9A60     	 str r2,[r3,#8]
1281:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
 3407              	 .loc 2 1281 0
 3408 0304 7B6C     	 ldr r3,[r7,#68]
 3409 0306 0022     	 movs r2,#0
 3410 0308 1A77     	 strb r2,[r3,#28]
1282:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
 3411              	 .loc 2 1282 0
 3412 030a 0023     	 movs r3,#0
 3413 030c BB63     	 str r3,[r7,#56]
 3414              	.L222:
1283:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1284:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_XferCompl_Msk) != 0U) {                               /* data tra
 3415              	 .loc 2 1284 0
 3416 030e BB6B     	 ldr r3,[r7,#56]
 3417 0310 03F00103 	 and r3,r3,#1
 3418 0314 002B     	 cmp r3,#0
 3419 0316 36D0     	 beq .L223
1285:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT   = USB_CH_HCINTx_ALL;                                                     
 3420              	 .loc 2 1285 0
 3421 0318 3B6C     	 ldr r3,[r7,#64]
 3422 031a 40F2BB72 	 movw r2,#1979
 3423 031e 9A60     	 str r2,[r3,#8]
1286:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) == 0U) {                       /*  endpoin
 3424              	 .loc 2 1286 0
 3425 0320 3B6C     	 ldr r3,[r7,#64]
 3426 0322 1B68     	 ldr r3,[r3]
 3427 0324 03F40043 	 and r3,r3,#32768
 3428 0328 002B     	 cmp r3,#0
 3429 032a 1DD1     	 bne .L224
1287:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;                                                      /*   disabl
 3430              	 .loc 2 1287 0
 3431 032c 3B6C     	 ldr r3,[r7,#64]
 3432 032e 0022     	 movs r2,#0
 3433 0330 DA60     	 str r2,[r3,#12]
1288:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active = 0U;                                             /*   transf
 3434              	 .loc 2 1288 0
 3435 0332 7B6C     	 ldr r3,[r7,#68]
 3436 0334 0022     	 movs r2,#0
 3437 0336 1A77     	 strb r2,[r3,#28]
1289:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total += ptr_pipe->num_transferring;              /*   admin 
 3438              	 .loc 2 1289 0
 3439 0338 7B6C     	 ldr r3,[r7,#68]
 3440 033a DA68     	 ldr r2,[r3,#12]
 3441 033c 7B6C     	 ldr r3,[r7,#68]
 3442 033e 1B69     	 ldr r3,[r3,#16]
 3443 0340 1A44     	 add r2,r2,r3
 3444 0342 7B6C     	 ldr r3,[r7,#68]
 3445 0344 DA60     	 str r2,[r3,#12]
1290:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 3446              	 .loc 2 1290 0
 3447 0346 7B6C     	 ldr r3,[r7,#68]
 3448 0348 0022     	 movs r2,#0
 3449 034a 1A61     	 str r2,[r3,#16]
1291:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_pipe->num_transferred_total == ptr_pipe->num) {                     /*   all by
 3450              	 .loc 2 1291 0
 3451 034c 7B6C     	 ldr r3,[r7,#68]
 3452 034e DA68     	 ldr r2,[r3,#12]
 3453 0350 7B6C     	 ldr r3,[r7,#68]
 3454 0352 9B68     	 ldr r3,[r3,#8]
 3455 0354 9A42     	 cmp r2,r3
 3456 0356 05D1     	 bne .L225
1292:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
 3457              	 .loc 2 1292 0
 3458 0358 7B6C     	 ldr r3,[r7,#68]
 3459 035a 0022     	 movs r2,#0
 3460 035c DA76     	 strb r2,[r3,#27]
1293:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                       /*
 3461              	 .loc 2 1293 0
 3462 035e 7B6C     	 ldr r3,[r7,#68]
 3463 0360 0122     	 movs r2,#1
 3464 0362 9A77     	 strb r2,[r3,#30]
 3465              	.L225:
1294:../Libraries/XMCLib/src/xmc_usbh.c ****             }                                                                           
1295:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;                                                                 
 3466              	 .loc 2 1295 0
 3467 0364 0023     	 movs r3,#0
 3468 0366 BB63     	 str r3,[r7,#56]
 3469              	.L224:
1296:../Libraries/XMCLib/src/xmc_usbh.c ****           }                                                                             
1297:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                       /*  endpoin
 3470              	 .loc 2 1297 0
 3471 0368 3B6C     	 ldr r3,[r7,#64]
 3472 036a 1B68     	 ldr r3,[r3]
 3473 036c 03F40043 	 and r3,r3,#32768
 3474 0370 002B     	 cmp r3,#0
 3475 0372 08D0     	 beq .L223
1298:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 3476              	 .loc 2 1298 0
 3477 0374 7B6C     	 ldr r3,[r7,#68]
 3478 0376 0022     	 movs r2,#0
 3479 0378 DA76     	 strb r2,[r3,#27]
1299:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                         /*
 3480              	 .loc 2 1299 0
 3481 037a 7B6C     	 ldr r3,[r7,#68]
 3482 037c 0122     	 movs r2,#1
 3483 037e 9A77     	 strb r2,[r3,#30]
1300:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                            /*   trigge
 3484              	 .loc 2 1300 0
 3485 0380 386C     	 ldr r0,[r7,#64]
 3486 0382 FFF7FEFF 	 bl XMC_lTriggerHaltChannel
 3487              	.L223:
1301:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1302:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1303:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_AckMsk_Msk) != 0U) {                                /* ACK rec
 3488              	 .loc 2 1303 0
 3489 0386 BB6B     	 ldr r3,[r7,#56]
 3490 0388 03F02003 	 and r3,r3,#32
 3491 038c 002B     	 cmp r3,#0
 3492 038e 2ED0     	 beq .L226
1304:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT = USB_CH_HCINTMSK_AckMsk_Msk;                                    /*  clear 
 3493              	 .loc 2 1304 0
 3494 0390 3B6C     	 ldr r3,[r7,#64]
 3495 0392 2022     	 movs r2,#32
 3496 0394 9A60     	 str r2,[r3,#8]
1305:../Libraries/XMCLib/src/xmc_usbh.c ****           is_nack[ch] = false;
 3497              	 .loc 2 1305 0
 3498 0396 444A     	 ldr r2,.L254+8
 3499 0398 7B6B     	 ldr r3,[r7,#52]
 3500 039a 1344     	 add r3,r3,r2
 3501 039c 0022     	 movs r2,#0
 3502 039e 1A70     	 strb r2,[r3]
1306:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                        /*  endpoi
 3503              	 .loc 2 1306 0
 3504 03a0 3B6C     	 ldr r3,[r7,#64]
 3505 03a2 1B68     	 ldr r3,[r3]
 3506 03a4 03F40043 	 and r3,r3,#32768
 3507 03a8 002B     	 cmp r3,#0
 3508 03aa 1BD0     	 beq .L227
1307:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
 3509              	 .loc 2 1307 0
 3510 03ac 7B6C     	 ldr r3,[r7,#68]
 3511 03ae 9A68     	 ldr r2,[r3,#8]
 3512 03b0 7B6C     	 ldr r3,[r7,#68]
 3513 03b2 DB68     	 ldr r3,[r3,#12]
 3514 03b4 9A42     	 cmp r2,r3
 3515 03b6 18D0     	 beq .L229
1308:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 3516              	 .loc 2 1308 0 discriminator 1
 3517 03b8 7B6C     	 ldr r3,[r7,#68]
 3518 03ba 1B69     	 ldr r3,[r3,#16]
1307:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
 3519              	 .loc 2 1307 0 discriminator 1
 3520 03bc 002B     	 cmp r3,#0
 3521 03be 14D0     	 beq .L229
1309:../Libraries/XMCLib/src/xmc_usbh.c ****                ((ptr_pipe->num_transferred_total%ptr_pipe->ep_max_packet_size) == 0U)){  /*   if sh
 3522              	 .loc 2 1309 0
 3523 03c0 7B6C     	 ldr r3,[r7,#68]
 3524 03c2 DB68     	 ldr r3,[r3,#12]
 3525 03c4 7A6C     	 ldr r2,[r7,#68]
 3526 03c6 928A     	 ldrh r2,[r2,#20]
 3527 03c8 B3FBF2F1 	 udiv r1,r3,r2
 3528 03cc 02FB01F2 	 mul r2,r2,r1
 3529 03d0 9B1A     	 subs r3,r3,r2
1308:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 3530              	 .loc 2 1308 0
 3531 03d2 002B     	 cmp r3,#0
 3532 03d4 09D1     	 bne .L229
1310:../Libraries/XMCLib/src/xmc_usbh.c ****                ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                                
 3533              	 .loc 2 1310 0
 3534 03d6 3B6C     	 ldr r3,[r7,#64]
 3535 03d8 1B68     	 ldr r3,[r3]
 3536 03da 43F00042 	 orr r2,r3,#-2147483648
 3537 03de 3B6C     	 ldr r3,[r7,#64]
 3538 03e0 1A60     	 str r2,[r3]
 3539 03e2 02E0     	 b .L229
 3540              	.L227:
1311:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1312:../Libraries/XMCLib/src/xmc_usbh.c ****           } else {                                                                        /* endpoi
1313:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                              /*  trigg
 3541              	 .loc 2 1313 0
 3542 03e4 386C     	 ldr r0,[r7,#64]
 3543 03e6 FFF7FEFF 	 bl XMC_lTriggerHaltChannel
 3544              	.L229:
1314:../Libraries/XMCLib/src/xmc_usbh.c ****           } 
1315:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
 3545              	 .loc 2 1315 0
 3546 03ea 0023     	 movs r3,#0
 3547 03ec BB63     	 str r3,[r7,#56]
 3548              	.L226:
1316:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1317:../Libraries/XMCLib/src/xmc_usbh.c ****         /*local variable for HCCHAR*/
1318:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCCHAR;
 3549              	 .loc 2 1318 0
 3550 03ee 3B6C     	 ldr r3,[r7,#64]
 3551 03f0 1B68     	 ldr r3,[r3]
 3552 03f2 FB62     	 str r3,[r7,#44]
1319:../Libraries/XMCLib/src/xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 3553              	 .loc 2 1319 0
 3554 03f4 BB6B     	 ldr r3,[r7,#56]
 3555 03f6 03F4F363 	 and r3,r3,#1944
 3556 03fa 002B     	 cmp r3,#0
 3557 03fc 26D0     	 beq .L230
1320:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
1321:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTx_ERRORS )) != 0U) &&                                  /* or tran
1322:../Libraries/XMCLib/src/xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
 3558              	 .loc 2 1322 0
 3559 03fe FB6A     	 ldr r3,[r7,#44]
 3560 0400 03F40043 	 and r3,r3,#32768
1321:../Libraries/XMCLib/src/xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
 3561              	 .loc 2 1321 0
 3562 0404 002B     	 cmp r3,#0
 3563 0406 21D1     	 bne .L230
1323:../Libraries/XMCLib/src/xmc_usbh.c ****         {                        /* and endpoint OUT */
1324:../Libraries/XMCLib/src/xmc_usbh.c **** 
1325:../Libraries/XMCLib/src/xmc_usbh.c ****             pktcnt = (uint32_t)((ptr_ch->HCTSIZ_BUFFERMODE & USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Msk)  
 3564              	 .loc 2 1325 0
 3565 0408 3B6C     	 ldr r3,[r7,#64]
 3566 040a 1A69     	 ldr r2,[r3,#16]
 3567 040c 274B     	 ldr r3,.L254+12
 3568 040e 1340     	 ands r3,r3,r2
 3569 0410 DB0C     	 lsrs r3,r3,#19
 3570 0412 3B61     	 str r3,[r7,#16]
1326:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
1327:../Libraries/XMCLib/src/xmc_usbh.c ****             mpsiz  = (ptr_ch->HCCHAR      ) & 0x000007FFU;
 3571              	 .loc 2 1327 0
 3572 0414 3B6C     	 ldr r3,[r7,#64]
 3573 0416 1B68     	 ldr r3,[r3]
 3574 0418 C3F30A03 	 ubfx r3,r3,#0,#11
 3575 041c FB60     	 str r3,[r7,#12]
1328:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
 3576              	 .loc 2 1328 0
 3577 041e 7B6C     	 ldr r3,[r7,#68]
 3578 0420 1A69     	 ldr r2,[r3,#16]
 3579 0422 FB68     	 ldr r3,[r7,#12]
 3580 0424 9A42     	 cmp r2,r3
 3581 0426 0ED3     	 bcc .L231
 3582              	 .loc 2 1328 0 is_stmt 0 discriminator 1
 3583 0428 3B69     	 ldr r3,[r7,#16]
 3584 042a 002B     	 cmp r3,#0
 3585 042c 0BD0     	 beq .L231
1329:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 3586              	 .loc 2 1329 0 is_stmt 1
 3587 042e 7B6C     	 ldr r3,[r7,#68]
 3588 0430 DA68     	 ldr r2,[r3,#12]
 3589 0432 7B6C     	 ldr r3,[r7,#68]
 3590 0434 1969     	 ldr r1,[r3,#16]
 3591 0436 FB68     	 ldr r3,[r7,#12]
 3592 0438 3869     	 ldr r0,[r7,#16]
 3593 043a 00FB03F3 	 mul r3,r0,r3
 3594 043e CB1A     	 subs r3,r1,r3
 3595 0440 1A44     	 add r2,r2,r3
 3596 0442 7B6C     	 ldr r3,[r7,#68]
 3597 0444 DA60     	 str r2,[r3,#12]
 3598              	.L231:
1330:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1331:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring = 0U;
 3599              	 .loc 2 1331 0
 3600 0446 7B6C     	 ldr r3,[r7,#68]
 3601 0448 0022     	 movs r2,#0
 3602 044a 1A61     	 str r2,[r3,#16]
 3603              	.L230:
1332:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1333:../Libraries/XMCLib/src/xmc_usbh.c **** 
1334:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_NakMsk_Msk)!=0U) {                                /* if NAK */
 3604              	 .loc 2 1334 0
 3605 044c BB6B     	 ldr r3,[r7,#56]
 3606 044e 03F01003 	 and r3,r3,#16
 3607 0452 002B     	 cmp r3,#0
 3608 0454 31D0     	 beq .L232
1335:../Libraries/XMCLib/src/xmc_usbh.c ****             is_nack[ch] = true;
 3609              	 .loc 2 1335 0
 3610 0456 144A     	 ldr r2,.L254+8
 3611 0458 7B6B     	 ldr r3,[r7,#52]
 3612 045a 1344     	 add r3,r3,r2
 3613 045c 0122     	 movs r2,#1
 3614 045e 1A70     	 strb r2,[r3]
1336:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event |= (uint8_t)XMC_USBH_EVENT_HANDSHAKE_NAK;
 3615              	 .loc 2 1336 0
 3616 0460 7B6C     	 ldr r3,[r7,#68]
 3617 0462 9B7F     	 ldrb r3,[r3,#30]
 3618 0464 43F00203 	 orr r3,r3,#2
 3619 0468 DAB2     	 uxtb r2,r3
 3620 046a 7B6C     	 ldr r3,[r7,#68]
 3621 046c 9A77     	 strb r2,[r3,#30]
1337:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTMSK_NakMsk_Msk;                                /*    clear 
 3622              	 .loc 2 1337 0
 3623 046e 3B6C     	 ldr r3,[r7,#64]
 3624 0470 1022     	 movs r2,#16
 3625 0472 9A60     	 str r2,[r3,#8]
1338:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                    /*    endpoi
 3626              	 .loc 2 1338 0
 3627 0474 3B6C     	 ldr r3,[r7,#64]
 3628 0476 1B68     	 ldr r3,[r3]
 3629 0478 03F40043 	 and r3,r3,#32768
 3630 047c 002B     	 cmp r3,#0
 3631 047e 17D0     	 beq .L233
1339:../Libraries/XMCLib/src/xmc_usbh.c ****               if (ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) {                   /*
 3632              	 .loc 2 1339 0
 3633 0480 7B6C     	 ldr r3,[r7,#68]
 3634 0482 9B7E     	 ldrb r3,[r3,#26]
 3635 0484 032B     	 cmp r3,#3
 3636 0486 03D1     	 bne .L234
1340:../Libraries/XMCLib/src/xmc_usbh.c ****                 XMC_lTriggerHaltChannel(ptr_ch);                                       /*      trig
 3637              	 .loc 2 1340 0
 3638 0488 386C     	 ldr r0,[r7,#64]
 3639 048a FFF7FEFF 	 bl XMC_lTriggerHaltChannel
 3640 048e 12E0     	 b .L236
 3641              	.L234:
1341:../Libraries/XMCLib/src/xmc_usbh.c ****               } else {                                                                 /*     is en
1342:../Libraries/XMCLib/src/xmc_usbh.c ****                 ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                             /*
 3642              	 .loc 2 1342 0
 3643 0490 3B6C     	 ldr r3,[r7,#64]
 3644 0492 1B68     	 ldr r3,[r3]
 3645 0494 43F00042 	 orr r2,r3,#-2147483648
 3646 0498 3B6C     	 ldr r3,[r7,#64]
 3647 049a 1A60     	 str r2,[r3]
 3648 049c 0BE0     	 b .L236
 3649              	.L255:
 3650 049e 00BF     	 .align 2
 3651              	.L254:
 3652 04a0 00000000 	 .word XMC_USBH0_device
 3653 04a4 00000000 	 .word pipe
 3654 04a8 00000000 	 .word is_nack
 3655 04ac 0000F81F 	 .word 536346624
 3656              	.L233:
1343:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1344:../Libraries/XMCLib/src/xmc_usbh.c ****             } else { /* If endpoint OUT */                                             /*    endpoi
1345:../Libraries/XMCLib/src/xmc_usbh.c ****               XMC_lTriggerHaltChannel(ptr_ch);                                         /*     trigg
 3657              	 .loc 2 1345 0
 3658 04b0 386C     	 ldr r0,[r7,#64]
 3659 04b2 FFF7FEFF 	 bl XMC_lTriggerHaltChannel
 3660              	.L236:
1346:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1347:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
 3661              	 .loc 2 1347 0
 3662 04b6 0023     	 movs r3,#0
 3663 04b8 BB63     	 str r3,[r7,#56]
 3664              	.L232:
1348:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1349:../Libraries/XMCLib/src/xmc_usbh.c **** 
1350:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_StallMsk_Msk) != 0U) {                              /* if STAL
 3665              	 .loc 2 1350 0
 3666 04ba BB6B     	 ldr r3,[r7,#56]
 3667 04bc 03F00803 	 and r3,r3,#8
 3668 04c0 002B     	 cmp r3,#0
 3669 04c2 19D0     	 beq .L237
1351:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Reset the packet data toggle*/
1352:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT   = USB_CH_HCINTMSK_StallMsk_Msk;                              /*  clear 
 3670              	 .loc 2 1352 0
 3671 04c4 3B6C     	 ldr r3,[r7,#64]
 3672 04c6 0822     	 movs r2,#8
 3673 04c8 9A60     	 str r2,[r3,#8]
1353:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 3674              	 .loc 2 1353 0
 3675 04ca 7B6C     	 ldr r3,[r7,#68]
 3676 04cc 0022     	 movs r2,#0
 3677 04ce DA76     	 strb r2,[r3,#27]
1354:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
 3678              	 .loc 2 1354 0
 3679 04d0 7B6C     	 ldr r3,[r7,#68]
 3680 04d2 1B68     	 ldr r3,[r3]
 3681 04d4 23F0F002 	 bic r2,r3,#240
 3682 04d8 7B6C     	 ldr r3,[r7,#68]
 3683 04da 1A60     	 str r2,[r3]
1355:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet   |=  (uint32_t)XMC_USBH_PACKET_DATA0;
 3684              	 .loc 2 1355 0
 3685 04dc 7B6C     	 ldr r3,[r7,#68]
 3686 04de 1B68     	 ldr r3,[r3]
 3687 04e0 43F01002 	 orr r2,r3,#16
 3688 04e4 7B6C     	 ldr r3,[r7,#68]
 3689 04e6 1A60     	 str r2,[r3]
1356:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_HANDSHAKE_STALL;                            /
 3690              	 .loc 2 1356 0
 3691 04e8 7B6C     	 ldr r3,[r7,#68]
 3692 04ea 1022     	 movs r2,#16
 3693 04ec 9A77     	 strb r2,[r3,#30]
1357:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
 3694              	 .loc 2 1357 0
 3695 04ee 386C     	 ldr r0,[r7,#64]
 3696 04f0 FFF7FEFF 	 bl XMC_lTriggerHaltChannel
1358:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
 3697              	 .loc 2 1358 0
 3698 04f4 0023     	 movs r3,#0
 3699 04f6 BB63     	 str r3,[r7,#56]
 3700              	.L237:
1359:../Libraries/XMCLib/src/xmc_usbh.c ****         } 
1360:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTx_ERRORS) != 0U) {                                      /* if tran
 3701              	 .loc 2 1360 0
 3702 04f8 BB6B     	 ldr r3,[r7,#56]
 3703 04fa 03F4F063 	 and r3,r3,#1920
 3704 04fe 002B     	 cmp r3,#0
 3705 0500 0ED0     	 beq .L238
1361:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTx_ERRORS;                                        /*  clear 
 3706              	 .loc 2 1361 0
 3707 0502 3B6C     	 ldr r3,[r7,#64]
 3708 0504 4FF4F062 	 mov r2,#1920
 3709 0508 9A60     	 str r2,[r3,#8]
1362:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 3710              	 .loc 2 1362 0
 3711 050a 7B6C     	 ldr r3,[r7,#68]
 3712 050c 0022     	 movs r2,#0
 3713 050e DA76     	 strb r2,[r3,#27]
1363:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_BUS_ERROR;                                  /
 3714              	 .loc 2 1363 0
 3715 0510 7B6C     	 ldr r3,[r7,#68]
 3716 0512 4022     	 movs r2,#64
 3717 0514 9A77     	 strb r2,[r3,#30]
1364:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
 3718              	 .loc 2 1364 0
 3719 0516 386C     	 ldr r0,[r7,#64]
 3720 0518 FFF7FEFF 	 bl XMC_lTriggerHaltChannel
1365:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
 3721              	 .loc 2 1365 0
 3722 051c 0023     	 movs r3,#0
 3723 051e BB63     	 str r3,[r7,#56]
 3724              	.L238:
1366:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1367:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_pipe->transfer_active == 0U) && (ptr_pipe->in_use == 0U) && (ptr_pipe->event != 0U
 3725              	 .loc 2 1367 0
 3726 0520 7B6C     	 ldr r3,[r7,#68]
 3727 0522 1B7F     	 ldrb r3,[r3,#28]
 3728 0524 002B     	 cmp r3,#0
 3729 0526 12D1     	 bne .L221
 3730              	 .loc 2 1367 0 is_stmt 0 discriminator 1
 3731 0528 7B6C     	 ldr r3,[r7,#68]
 3732 052a DB7E     	 ldrb r3,[r3,#27]
 3733 052c 002B     	 cmp r3,#0
 3734 052e 0ED1     	 bne .L221
 3735              	 .loc 2 1367 0 discriminator 2
 3736 0530 7B6C     	 ldr r3,[r7,#68]
 3737 0532 9B7F     	 ldrb r3,[r3,#30]
 3738 0534 002B     	 cmp r3,#0
 3739 0536 0AD0     	 beq .L221
1368:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 3740              	 .loc 2 1368 0 is_stmt 1
 3741 0538 474B     	 ldr r3,.L256
 3742 053a DB68     	 ldr r3,[r3,#12]
 3743 053c 396C     	 ldr r1,[r7,#64]
 3744 053e 7A6C     	 ldr r2,[r7,#68]
 3745 0540 927F     	 ldrb r2,[r2,#30]
 3746 0542 0846     	 mov r0,r1
 3747 0544 1146     	 mov r1,r2
 3748 0546 9847     	 blx r3
1369:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->event  = 0U;
 3749              	 .loc 2 1369 0
 3750 0548 7B6C     	 ldr r3,[r7,#68]
 3751 054a 0022     	 movs r2,#0
 3752 054c 9A77     	 strb r2,[r3,#30]
 3753              	.L221:
1269:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
 3754              	 .loc 2 1269 0 discriminator 2
 3755 054e 7B6B     	 ldr r3,[r7,#52]
 3756 0550 0133     	 adds r3,r3,#1
 3757 0552 7B63     	 str r3,[r7,#52]
 3758              	.L220:
1269:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
 3759              	 .loc 2 1269 0 is_stmt 0 discriminator 1
 3760 0554 7B6B     	 ldr r3,[r7,#52]
 3761 0556 0D2B     	 cmp r3,#13
 3762 0558 7FF6A4AE 	 bls .L239
 3763              	.L219:
1370:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1371:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1372:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1373:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1374:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Check if remote wakeup event detected*/
1375:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_WkUpInt_Msk) != 0U)
 3764              	 .loc 2 1375 0 is_stmt 1
 3765 055c 7B68     	 ldr r3,[r7,#4]
 3766 055e 002B     	 cmp r3,#0
 3767 0560 0FDA     	 bge .L240
1376:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1377:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_WkUpInt_Msk; /* Clea
 3768              	 .loc 2 1377 0
 3769 0562 3D4B     	 ldr r3,.L256
 3770 0564 1B68     	 ldr r3,[r3]
 3771 0566 4FF00042 	 mov r2,#-2147483648
 3772 056a 5A61     	 str r2,[r3,#20]
1378:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Recover PHY clock*/
1379:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 3773              	 .loc 2 1379 0
 3774 056c 3A4B     	 ldr r3,.L256
 3775 056e 1B68     	 ldr r3,[r3]
 3776 0570 4FF48072 	 mov r2,#256
 3777 0574 C3F8002E 	 str r2,[r3,#3584]
1380:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Callback function execution*/
1381:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_REMOTE_WAKEUP);
 3778              	 .loc 2 1381 0
 3779 0578 374B     	 ldr r3,.L256
 3780 057a 9B68     	 ldr r3,[r3,#8]
 3781 057c 0020     	 movs r0,#0
 3782 057e 4021     	 movs r1,#64
 3783 0580 9847     	 blx r3
 3784              	.L240:
1382:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1383:../Libraries/XMCLib/src/xmc_usbh.c **** 
1384:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle restarts of unfinished transfers (due to NAK or ACK) */
1385:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
 3785              	 .loc 2 1385 0
 3786 0582 364B     	 ldr r3,.L256+4
 3787 0584 7B64     	 str r3,[r7,#68]
1386:../Libraries/XMCLib/src/xmc_usbh.c ****   for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 3788              	 .loc 2 1386 0
 3789 0586 0023     	 movs r3,#0
 3790 0588 7B63     	 str r3,[r7,#52]
 3791 058a 5EE0     	 b .L241
 3792              	.L251:
1387:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 3793              	 .loc 2 1387 0
 3794 058c 7B6C     	 ldr r3,[r7,#68]
 3795 058e DB7E     	 ldrb r3,[r3,#27]
 3796 0590 012B     	 cmp r3,#1
 3797 0592 54D1     	 bne .L242
 3798              	 .loc 2 1387 0 is_stmt 0 discriminator 1
 3799 0594 7B6C     	 ldr r3,[r7,#68]
 3800 0596 1B7F     	 ldrb r3,[r3,#28]
 3801 0598 002B     	 cmp r3,#0
 3802 059a 50D1     	 bne .L242
1388:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Restart periodic transfer if not in progress and interval expired */
1389:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) 
 3803              	 .loc 2 1389 0 is_stmt 1
 3804 059c 7B6C     	 ldr r3,[r7,#68]
 3805 059e 9B7E     	 ldrb r3,[r3,#26]
 3806 05a0 032B     	 cmp r3,#3
 3807 05a2 31D0     	 beq .L243
1390:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1391:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Data toggle if NACK not received*/
1392:../Libraries/XMCLib/src/xmc_usbh.c ****             if (!is_nack[ch])
 3808              	 .loc 2 1392 0
 3809 05a4 2E4A     	 ldr r2,.L256+8
 3810 05a6 7B6B     	 ldr r3,[r7,#52]
 3811 05a8 1344     	 add r3,r3,r2
 3812 05aa 1B78     	 ldrb r3,[r3]
 3813 05ac 83F00103 	 eor r3,r3,#1
 3814 05b0 DBB2     	 uxtb r3,r3
 3815 05b2 002B     	 cmp r3,#0
 3816 05b4 23D0     	 beq .L244
1393:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1394:../Libraries/XMCLib/src/xmc_usbh.c ****               switch (ptr_pipe->packet & (uint32_t)XMC_USBH_PACKET_DATA_Msk)
 3817              	 .loc 2 1394 0
 3818 05b6 7B6C     	 ldr r3,[r7,#68]
 3819 05b8 1B68     	 ldr r3,[r3]
 3820 05ba 03F0F003 	 and r3,r3,#240
 3821 05be 102B     	 cmp r3,#16
 3822 05c0 02D0     	 beq .L246
 3823 05c2 202B     	 cmp r3,#32
 3824 05c4 0DD0     	 beq .L247
1395:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1396:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA0:
1397:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
1398:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
1399:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
1400:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA1:
1401:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
1402:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA0;
1403:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
1404:../Libraries/XMCLib/src/xmc_usbh.c ****                 default:
1405:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 3825              	 .loc 2 1405 0
 3826 05c6 19E0     	 b .L248
 3827              	.L246:
1397:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
 3828              	 .loc 2 1397 0
 3829 05c8 7B6C     	 ldr r3,[r7,#68]
 3830 05ca 1B68     	 ldr r3,[r3]
 3831 05cc 23F0F002 	 bic r2,r3,#240
 3832 05d0 7B6C     	 ldr r3,[r7,#68]
 3833 05d2 1A60     	 str r2,[r3]
1398:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 3834              	 .loc 2 1398 0
 3835 05d4 7B6C     	 ldr r3,[r7,#68]
 3836 05d6 1B68     	 ldr r3,[r3]
 3837 05d8 43F02002 	 orr r2,r3,#32
 3838 05dc 7B6C     	 ldr r3,[r7,#68]
 3839 05de 1A60     	 str r2,[r3]
1399:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA1:
 3840              	 .loc 2 1399 0
 3841 05e0 0CE0     	 b .L248
 3842              	.L247:
1401:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA0;
 3843              	 .loc 2 1401 0
 3844 05e2 7B6C     	 ldr r3,[r7,#68]
 3845 05e4 1B68     	 ldr r3,[r3]
 3846 05e6 23F0F002 	 bic r2,r3,#240
 3847 05ea 7B6C     	 ldr r3,[r7,#68]
 3848 05ec 1A60     	 str r2,[r3]
1402:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 3849              	 .loc 2 1402 0
 3850 05ee 7B6C     	 ldr r3,[r7,#68]
 3851 05f0 1B68     	 ldr r3,[r3]
 3852 05f2 43F01002 	 orr r2,r3,#16
 3853 05f6 7B6C     	 ldr r3,[r7,#68]
 3854 05f8 1A60     	 str r2,[r3]
1403:../Libraries/XMCLib/src/xmc_usbh.c ****                 default:
 3855              	 .loc 2 1403 0
 3856 05fa 00BF     	 nop
 3857              	.L248:
 3858 05fc 04E0     	 b .L243
 3859              	.L244:
1406:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1407:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1408:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1409:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1410:../Libraries/XMCLib/src/xmc_usbh.c ****               is_nack[ch] = false;
 3860              	 .loc 2 1410 0
 3861 05fe 184A     	 ldr r2,.L256+8
 3862 0600 7B6B     	 ldr r3,[r7,#52]
 3863 0602 1344     	 add r3,r3,r2
 3864 0604 0022     	 movs r2,#0
 3865 0606 1A70     	 strb r2,[r3]
 3866              	.L243:
1411:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1412:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1413:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT)&&(ptr_pipe->interrupt_trigge
 3867              	 .loc 2 1413 0
 3868 0608 7B6C     	 ldr r3,[r7,#68]
 3869 060a 9B7E     	 ldrb r3,[r3,#26]
 3870 060c 032B     	 cmp r3,#3
 3871 060e 03D1     	 bne .L249
 3872              	 .loc 2 1413 0 is_stmt 0 discriminator 1
 3873 0610 7B6C     	 ldr r3,[r7,#68]
 3874 0612 5B7F     	 ldrb r3,[r3,#29]
 3875 0614 012B     	 cmp r3,#1
 3876 0616 03D0     	 beq .L250
 3877              	.L249:
1414:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
 3878              	 .loc 2 1414 0 is_stmt 1 discriminator 3
 3879 0618 7B6C     	 ldr r3,[r7,#68]
 3880 061a 9B7E     	 ldrb r3,[r3,#26]
1413:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
 3881              	 .loc 2 1413 0 discriminator 3
 3882 061c 032B     	 cmp r3,#3
 3883 061e 0ED0     	 beq .L242
 3884              	.L250:
1415:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1416:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->interrupt_triggered = 0U;
 3885              	 .loc 2 1416 0
 3886 0620 7B6C     	 ldr r3,[r7,#68]
 3887 0622 0022     	 movs r2,#0
 3888 0624 5A77     	 strb r2,[r3,#29]
1417:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->transfer_active = 1U;
 3889              	 .loc 2 1417 0
 3890 0626 7B6C     	 ldr r3,[r7,#68]
 3891 0628 0122     	 movs r2,#1
 3892 062a 1A77     	 strb r2,[r3,#28]
1418:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_lStartTransfer (ptr_pipe, (((USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_reg
 3893              	 .loc 2 1418 0
 3894 062c 0A4B     	 ldr r3,.L256
 3895 062e 5A68     	 ldr r2,[r3,#4]
 3896 0630 7B6B     	 ldr r3,[r7,#52]
 3897 0632 5B01     	 lsls r3,r3,#5
 3898 0634 1344     	 add r3,r3,r2
 3899 0636 786C     	 ldr r0,[r7,#68]
 3900 0638 1946     	 mov r1,r3
 3901 063a FFF7FEFF 	 bl XMC_lStartTransfer
 3902              	.L242:
1419:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1420:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1421:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe++;
 3903              	 .loc 2 1421 0 discriminator 2
 3904 063e 7B6C     	 ldr r3,[r7,#68]
 3905 0640 2033     	 adds r3,r3,#32
 3906 0642 7B64     	 str r3,[r7,#68]
1386:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 3907              	 .loc 2 1386 0 discriminator 2
 3908 0644 7B6B     	 ldr r3,[r7,#52]
 3909 0646 0133     	 adds r3,r3,#1
 3910 0648 7B63     	 str r3,[r7,#52]
 3911              	.L241:
1386:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 3912              	 .loc 2 1386 0 is_stmt 0 discriminator 1
 3913 064a 7B6B     	 ldr r3,[r7,#52]
 3914 064c 0D2B     	 cmp r3,#13
 3915 064e 9DD9     	 bls .L251
1422:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1423:../Libraries/XMCLib/src/xmc_usbh.c **** }
 3916              	 .loc 2 1423 0 is_stmt 1
 3917 0650 4837     	 adds r7,r7,#72
 3918              	.LCFI137:
 3919              	 .cfi_def_cfa_offset 8
 3920 0652 BD46     	 mov sp,r7
 3921              	.LCFI138:
 3922              	 .cfi_def_cfa_register 13
 3923              	 
 3924 0654 80BD     	 pop {r7,pc}
 3925              	.L257:
 3926 0656 00BF     	 .align 2
 3927              	.L256:
 3928 0658 00000000 	 .word XMC_USBH0_device
 3929 065c 00000000 	 .word pipe
 3930 0660 00000000 	 .word is_nack
 3931              	 .cfi_endproc
 3932              	.LFE193:
 3934              	 .section .text.XMC_USBH_GetInterruptStatus,"ax",%progbits
 3935              	 .align 2
 3936              	 .global XMC_USBH_GetInterruptStatus
 3937              	 .thumb
 3938              	 .thumb_func
 3940              	XMC_USBH_GetInterruptStatus:
 3941              	.LFB194:
1424:../Libraries/XMCLib/src/xmc_usbh.c **** 
1425:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides host mode interrupt status*/
1426:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t XMC_USBH_GetInterruptStatus(void)
1427:../Libraries/XMCLib/src/xmc_usbh.c **** {
 3942              	 .loc 2 1427 0
 3943              	 .cfi_startproc
 3944              	 
 3945              	 
 3946              	 
 3947 0000 80B4     	 push {r7}
 3948              	.LCFI139:
 3949              	 .cfi_def_cfa_offset 4
 3950              	 .cfi_offset 7,-4
 3951 0002 00AF     	 add r7,sp,#0
 3952              	.LCFI140:
 3953              	 .cfi_def_cfa_register 7
1428:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH0_device.global_register->GINTSTS_HOSTMODE;
 3954              	 .loc 2 1428 0
 3955 0004 034B     	 ldr r3,.L260
 3956 0006 1B68     	 ldr r3,[r3]
 3957 0008 5B69     	 ldr r3,[r3,#20]
1429:../Libraries/XMCLib/src/xmc_usbh.c **** }
 3958              	 .loc 2 1429 0
 3959 000a 1846     	 mov r0,r3
 3960 000c BD46     	 mov sp,r7
 3961              	.LCFI141:
 3962              	 .cfi_def_cfa_register 13
 3963              	 
 3964 000e 5DF8047B 	 ldr r7,[sp],#4
 3965              	.LCFI142:
 3966              	 .cfi_restore 7
 3967              	 .cfi_def_cfa_offset 0
 3968 0012 7047     	 bx lr
 3969              	.L261:
 3970              	 .align 2
 3971              	.L260:
 3972 0014 00000000 	 .word XMC_USBH0_device
 3973              	 .cfi_endproc
 3974              	.LFE194:
 3976              	 .section .text.XMC_USBH_Select_VBUS,"ax",%progbits
 3977              	 .align 2
 3978              	 .global XMC_USBH_Select_VBUS
 3979              	 .thumb
 3980              	 .thumb_func
 3982              	XMC_USBH_Select_VBUS:
 3983              	.LFB195:
1430:../Libraries/XMCLib/src/xmc_usbh.c **** 
1431:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function selects the port pin used as DRIVEVBUS*/
1432:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_Select_VBUS(XMC_GPIO_PORT_t* port, uint32_t pin)
1433:../Libraries/XMCLib/src/xmc_usbh.c **** {
 3984              	 .loc 2 1433 0
 3985              	 .cfi_startproc
 3986              	 
 3987              	 
 3988 0000 80B5     	 push {r7,lr}
 3989              	.LCFI143:
 3990              	 .cfi_def_cfa_offset 8
 3991              	 .cfi_offset 7,-8
 3992              	 .cfi_offset 14,-4
 3993 0002 82B0     	 sub sp,sp,#8
 3994              	.LCFI144:
 3995              	 .cfi_def_cfa_offset 16
 3996 0004 00AF     	 add r7,sp,#0
 3997              	.LCFI145:
 3998              	 .cfi_def_cfa_register 7
 3999 0006 7860     	 str r0,[r7,#4]
 4000 0008 3960     	 str r1,[r7]
1434:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_port = port;
 4001              	 .loc 2 1434 0
 4002 000a 094A     	 ldr r2,.L263
 4003 000c 7B68     	 ldr r3,[r7,#4]
 4004 000e 1360     	 str r3,[r2]
1435:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_pin = pin;
 4005              	 .loc 2 1435 0
 4006 0010 084A     	 ldr r2,.L263+4
 4007 0012 3B68     	 ldr r3,[r7]
 4008 0014 1360     	 str r3,[r2]
1436:../Libraries/XMCLib/src/xmc_usbh.c **** 
1437:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Configure the port pin alternate function*/
1438:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 4009              	 .loc 2 1438 0
 4010 0016 064B     	 ldr r3,.L263
 4011 0018 1A68     	 ldr r2,[r3]
 4012 001a 064B     	 ldr r3,.L263+4
 4013 001c 1B68     	 ldr r3,[r3]
 4014 001e DBB2     	 uxtb r3,r3
 4015 0020 1046     	 mov r0,r2
 4016 0022 1946     	 mov r1,r3
 4017 0024 8822     	 movs r2,#136
 4018 0026 FFF7FEFF 	 bl XMC_GPIO_SetMode
1439:../Libraries/XMCLib/src/xmc_usbh.c **** }
 4019              	 .loc 2 1439 0
 4020 002a 0837     	 adds r7,r7,#8
 4021              	.LCFI146:
 4022              	 .cfi_def_cfa_offset 8
 4023 002c BD46     	 mov sp,r7
 4024              	.LCFI147:
 4025              	 .cfi_def_cfa_register 13
 4026              	 
 4027 002e 80BD     	 pop {r7,pc}
 4028              	.L264:
 4029              	 .align 2
 4030              	.L263:
 4031 0030 00000000 	 .word VBUS_port
 4032 0034 00000000 	 .word VBUS_pin
 4033              	 .cfi_endproc
 4034              	.LFE195:
 4036              	 .section .text.XMC_USBH_TurnOffResumeBit,"ax",%progbits
 4037              	 .align 2
 4038              	 .global XMC_USBH_TurnOffResumeBit
 4039              	 .thumb
 4040              	 .thumb_func
 4042              	XMC_USBH_TurnOffResumeBit:
 4043              	.LFB196:
1440:../Libraries/XMCLib/src/xmc_usbh.c **** 
1441:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function asserts the remote wakeup request by device by clearing the resume bit*/
1442:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_TurnOffResumeBit(void)
1443:../Libraries/XMCLib/src/xmc_usbh.c **** {
 4044              	 .loc 2 1443 0
 4045              	 .cfi_startproc
 4046              	 
 4047              	 
 4048              	 
 4049 0000 80B4     	 push {r7}
 4050              	.LCFI148:
 4051              	 .cfi_def_cfa_offset 4
 4052              	 .cfi_offset 7,-4
 4053 0002 83B0     	 sub sp,sp,#12
 4054              	.LCFI149:
 4055              	 .cfi_def_cfa_offset 16
 4056 0004 00AF     	 add r7,sp,#0
 4057              	.LCFI150:
 4058              	 .cfi_def_cfa_register 7
1444:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
1445:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Clear resume bit*/
1446:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt = XMC_USBH0_device.global_register->HPRT;
 4059              	 .loc 2 1446 0
 4060 0006 0B4B     	 ldr r3,.L266
 4061 0008 1B68     	 ldr r3,[r3]
 4062 000a D3F84034 	 ldr r3,[r3,#1088]
 4063 000e 7B60     	 str r3,[r7,#4]
1447:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 4064              	 .loc 2 1447 0
 4065 0010 7B68     	 ldr r3,[r7,#4]
 4066 0012 23F00403 	 bic r3,r3,#4
 4067 0016 7B60     	 str r3,[r7,#4]
1448:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 4068              	 .loc 2 1448 0
 4069 0018 7B68     	 ldr r3,[r7,#4]
 4070 001a 23F04003 	 bic r3,r3,#64
 4071 001e 7B60     	 str r3,[r7,#4]
1449:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.global_register->HPRT = hprt;
 4072              	 .loc 2 1449 0
 4073 0020 044B     	 ldr r3,.L266
 4074 0022 1B68     	 ldr r3,[r3]
 4075 0024 7A68     	 ldr r2,[r7,#4]
 4076 0026 C3F84024 	 str r2,[r3,#1088]
1450:../Libraries/XMCLib/src/xmc_usbh.c **** }
 4077              	 .loc 2 1450 0
 4078 002a 0C37     	 adds r7,r7,#12
 4079              	.LCFI151:
 4080              	 .cfi_def_cfa_offset 4
 4081 002c BD46     	 mov sp,r7
 4082              	.LCFI152:
 4083              	 .cfi_def_cfa_register 13
 4084              	 
 4085 002e 5DF8047B 	 ldr r7,[sp],#4
 4086              	.LCFI153:
 4087              	 .cfi_restore 7
 4088              	 .cfi_def_cfa_offset 0
 4089 0032 7047     	 bx lr
 4090              	.L267:
 4091              	 .align 2
 4092              	.L266:
 4093 0034 00000000 	 .word XMC_USBH0_device
 4094              	 .cfi_endproc
 4095              	.LFE196:
 4097              	 .global Driver_USBH0
 4098              	 .section .rodata.Driver_USBH0,"a",%progbits
 4099              	 .align 2
 4102              	Driver_USBH0:
 4103 0000 00000000 	 .word XMC_USBH_GetVersion
 4104 0004 00000000 	 .word XMC_USBH_GetCapabilities
 4105 0008 00000000 	 .word XMC_USBH_Initialize
 4106 000c 00000000 	 .word XMC_USBH_Uninitialize
 4107 0010 00000000 	 .word XMC_USBH_PowerControl
 4108 0014 00000000 	 .word XMC_USBH_PortVbusOnOff
 4109 0018 00000000 	 .word XMC_USBH_PortReset
 4110 001c 00000000 	 .word XMC_USBH_PortSuspend
 4111 0020 00000000 	 .word XMC_USBH_PortResume
 4112 0024 00000000 	 .word XMC_USBH_PortGetState
 4113 0028 00000000 	 .word XMC_USBH_PipeCreate
 4114 002c 00000000 	 .word XMC_USBH_PipeModify
 4115 0030 00000000 	 .word XMC_USBH_PipeDelete
 4116 0034 00000000 	 .word XMC_USBH_PipeReset
 4117 0038 00000000 	 .word XMC_USBH_PipeTransfer
 4118 003c 00000000 	 .word XMC_USBH_PipeTransferGetResult
 4119 0040 00000000 	 .word XMC_USBH_PipeTransferAbort
 4120 0044 00000000 	 .word XMC_USBH_GetFrameNumber
 4121              	 .section .text.XMC_USBH_osDelay,"ax",%progbits
 4122              	 .align 2
 4123              	 .weak XMC_USBH_osDelay
 4124              	 .thumb
 4125              	 .thumb_func
 4127              	XMC_USBH_osDelay:
 4128              	.LFB197:
1451:../Libraries/XMCLib/src/xmc_usbh.c **** 
1452:../Libraries/XMCLib/src/xmc_usbh.c **** 
1453:../Libraries/XMCLib/src/xmc_usbh.c **** 
1454:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host driver assembling all the implementation into a single CMSIS compliant structure type*/
1455:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_USBH_DRIVER_t Driver_USBH0 = {
1456:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetVersion,
1457:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetCapabilities,
1458:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Initialize,
1459:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Uninitialize,
1460:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PowerControl,
1461:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortVbusOnOff,
1462:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortReset,
1463:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortSuspend,
1464:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortResume,
1465:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortGetState,
1466:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeCreate,
1467:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeModify,
1468:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeDelete,
1469:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeReset,
1470:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransfer,
1471:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferGetResult,
1472:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferAbort,
1473:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetFrameNumber
1474:../Libraries/XMCLib/src/xmc_usbh.c **** };
1475:../Libraries/XMCLib/src/xmc_usbh.c **** 
1476:../Libraries/XMCLib/src/xmc_usbh.c **** 
1477:../Libraries/XMCLib/src/xmc_usbh.c **** /*Weak definition of delay function*/
1478:../Libraries/XMCLib/src/xmc_usbh.c **** __WEAK uint8_t XMC_USBH_osDelay(uint32_t MS)
1479:../Libraries/XMCLib/src/xmc_usbh.c **** {
 4129              	 .loc 2 1479 0
 4130              	 .cfi_startproc
 4131              	 
 4132              	 
 4133              	 
 4134 0000 80B4     	 push {r7}
 4135              	.LCFI154:
 4136              	 .cfi_def_cfa_offset 4
 4137              	 .cfi_offset 7,-4
 4138 0002 83B0     	 sub sp,sp,#12
 4139              	.LCFI155:
 4140              	 .cfi_def_cfa_offset 16
 4141 0004 00AF     	 add r7,sp,#0
 4142              	.LCFI156:
 4143              	 .cfi_def_cfa_register 7
 4144 0006 7860     	 str r0,[r7,#4]
 4145              	.L269:
1480:../Libraries/XMCLib/src/xmc_usbh.c ****   /*A precise time delay implementation for this function has to be provided*/
1481:../Libraries/XMCLib/src/xmc_usbh.c ****   while (1)
1482:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1483:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait*/
1484:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 4146              	 .loc 2 1484 0 discriminator 1
 4147 0008 FEE7     	 b .L269
 4148              	 .cfi_endproc
 4149              	.LFE197:
 4151 000a 00BF     	 .text
 4152              	.Letext0:
 4153              	 .file 3 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4154              	 .file 4 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4155              	 .file 5 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 4156              	 .file 6 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/XMCLib/inc/xmc4_scu.h"
 4157              	 .file 7 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/XMCLib/inc/xmc4_gpio.h"
 4158              	 .file 8 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/XMCLib/inc/xmc_usbh.h"
 4159              	 .file 9 "C:/Users/Lenovo/Desktop/HandController/UART_Serial_Test/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbh.c
    {standard input}:20     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:69     .text.NVIC_EnableIRQ:0000002c $d
    {standard input}:74     .text.NVIC_DisableIRQ:00000000 $t
    {standard input}:78     .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
    {standard input}:123    .text.NVIC_DisableIRQ:00000030 $d
    {standard input}:128    .text.NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:132    .text.NVIC_ClearPendingIRQ:00000000 NVIC_ClearPendingIRQ
    {standard input}:177    .text.NVIC_ClearPendingIRQ:00000030 $d
    {standard input}:182    .text.NVIC_SetPriority:00000000 $t
    {standard input}:186    .text.NVIC_SetPriority:00000000 NVIC_SetPriority
    {standard input}:249    .text.NVIC_SetPriority:0000004c $d
    {standard input}:255    .rodata.xmc_usbh_driver_version:00000000 $d
    {standard input}:258    .rodata.xmc_usbh_driver_version:00000000 xmc_usbh_driver_version
    {standard input}:266    .data.VBUS_port:00000000 VBUS_port
    {standard input}:263    .data.VBUS_port:00000000 $d
    {standard input}:273    .data.VBUS_pin:00000000 VBUS_pin
    {standard input}:270    .data.VBUS_pin:00000000 $d
                            *COM*:0000000e is_nack
    {standard input}:277    .rodata.xmc_usbh_driver_capabilities:00000000 $d
    {standard input}:280    .rodata.xmc_usbh_driver_capabilities:00000000 xmc_usbh_driver_capabilities
    {standard input}:286    .data.XMC_USBH0_device:00000000 $d
    {standard input}:289    .data.XMC_USBH0_device:00000000 XMC_USBH0_device
                            *COM*:000001c0 pipe
    {standard input}:300    .bss.XMC_USBH0_dfifo_ptr:00000000 $d
    {standard input}:303    .bss.XMC_USBH0_dfifo_ptr:00000000 XMC_USBH0_dfifo_ptr
    {standard input}:306    .text.XMC_lClockGating:00000000 $t
    {standard input}:310    .text.XMC_lClockGating:00000000 XMC_lClockGating
    {standard input}:349    .text.XMC_lTriggerHaltChannel:00000000 $t
    {standard input}:353    .text.XMC_lTriggerHaltChannel:00000000 XMC_lTriggerHaltChannel
    {standard input}:400    .text.XMC_lStartTransfer:00000000 $t
    {standard input}:404    .text.XMC_lStartTransfer:00000000 XMC_lStartTransfer
    {standard input}:569    .text.XMC_lStartTransfer:000000fc $d
    {standard input}:573    .text.XMC_lStartTransfer:0000010c $t
    {standard input}:796    .text.XMC_lStartTransfer:00000260 $d
    {standard input}:802    .text.XMC_USBH_GetVersion:00000000 $t
    {standard input}:806    .text.XMC_USBH_GetVersion:00000000 XMC_USBH_GetVersion
    {standard input}:848    .text.XMC_USBH_GetVersion:00000028 $d
    {standard input}:853    .text.XMC_USBH_GetCapabilities:00000000 $t
    {standard input}:857    .text.XMC_USBH_GetCapabilities:00000000 XMC_USBH_GetCapabilities
    {standard input}:892    .text.XMC_USBH_Initialize:00000000 $t
    {standard input}:896    .text.XMC_USBH_Initialize:00000000 XMC_USBH_Initialize
    {standard input}:984    .text.XMC_USBH_Initialize:0000006c $d
    {standard input}:992    .text.XMC_USBH_Uninitialize:00000000 $t
    {standard input}:996    .text.XMC_USBH_Uninitialize:00000000 XMC_USBH_Uninitialize
    {standard input}:1034   .text.XMC_USBH_PowerControl:00000000 XMC_USBH_PowerControl
    {standard input}:1025   .text.XMC_USBH_Uninitialize:00000018 $d
    {standard input}:1030   .text.XMC_USBH_PowerControl:00000000 $t
    {standard input}:4127   .text.XMC_USBH_osDelay:00000000 XMC_USBH_osDelay
    {standard input}:1325   .text.XMC_USBH_PowerControl:000001ec $d
    {standard input}:1335   .text.XMC_USBH_PortVbusOnOff:00000000 $t
    {standard input}:1339   .text.XMC_USBH_PortVbusOnOff:00000000 XMC_USBH_PortVbusOnOff
    {standard input}:1441   .text.XMC_USBH_PortVbusOnOff:00000094 $d
    {standard input}:1448   .text.XMC_USBH_PortReset:00000000 $t
    {standard input}:1452   .text.XMC_USBH_PortReset:00000000 XMC_USBH_PortReset
    {standard input}:1567   .text.XMC_USBH_PortReset:000000a4 $d
    {standard input}:1572   .text.XMC_USBH_PortSuspend:00000000 $t
    {standard input}:1576   .text.XMC_USBH_PortSuspend:00000000 XMC_USBH_PortSuspend
    {standard input}:1663   .text.XMC_USBH_PortSuspend:00000074 $d
    {standard input}:1668   .text.XMC_USBH_PortResume:00000000 $t
    {standard input}:1672   .text.XMC_USBH_PortResume:00000000 XMC_USBH_PortResume
    {standard input}:1773   .text.XMC_USBH_PortResume:00000090 $d
    {standard input}:1778   .text.XMC_USBH_PortGetState:00000000 $t
    {standard input}:1782   .text.XMC_USBH_PortGetState:00000000 XMC_USBH_PortGetState
    {standard input}:1881   .text.XMC_USBH_PortGetState:00000088 $d
    {standard input}:1886   .text.XMC_USBH_PipeCreate:00000000 $t
    {standard input}:1890   .text.XMC_USBH_PipeCreate:00000000 XMC_USBH_PipeCreate
    {standard input}:2045   .text.XMC_USBH_PipeCreate:000000e8 $d
    {standard input}:2049   .text.XMC_USBH_PipeCreate:000000f8 $t
    {standard input}:2103   .text.XMC_USBH_PipeCreate:00000140 $d
    {standard input}:2109   .text.XMC_USBH_PipeModify:00000000 $t
    {standard input}:2113   .text.XMC_USBH_PipeModify:00000000 XMC_USBH_PipeModify
    {standard input}:2232   .text.XMC_USBH_PipeModify:000000a0 $d
    {standard input}:2239   .text.XMC_USBH_PipeDelete:00000000 $t
    {standard input}:2243   .text.XMC_USBH_PipeDelete:00000000 XMC_USBH_PipeDelete
    {standard input}:2343   .text.XMC_USBH_PipeDelete:0000007c $d
    {standard input}:2349   .text.XMC_USBH_PipeReset:00000000 $t
    {standard input}:2353   .text.XMC_USBH_PipeReset:00000000 XMC_USBH_PipeReset
    {standard input}:2448   .text.XMC_USBH_PipeReset:00000070 $d
    {standard input}:2454   .text.XMC_USBH_PipeTransfer:00000000 $t
    {standard input}:2458   .text.XMC_USBH_PipeTransfer:00000000 XMC_USBH_PipeTransfer
    {standard input}:2644   .text.XMC_USBH_PipeTransfer:00000110 $d
    {standard input}:2650   .text.XMC_USBH_PipeTransferGetResult:00000000 $t
    {standard input}:2654   .text.XMC_USBH_PipeTransferGetResult:00000000 XMC_USBH_PipeTransferGetResult
    {standard input}:2713   .text.XMC_USBH_PipeTransferGetResult:00000038 $d
    {standard input}:2719   .text.XMC_USBH_PipeTransferAbort:00000000 $t
    {standard input}:2723   .text.XMC_USBH_PipeTransferAbort:00000000 XMC_USBH_PipeTransferAbort
    {standard input}:2868   .text.XMC_USBH_PipeTransferAbort:000000d0 $d
    {standard input}:2874   .text.XMC_USBH_GetFrameNumber:00000000 $t
    {standard input}:2878   .text.XMC_USBH_GetFrameNumber:00000000 XMC_USBH_GetFrameNumber
    {standard input}:2932   .text.XMC_USBH_GetFrameNumber:00000034 $d
    {standard input}:2937   .text.XMC_USBH_HandleIrq:00000000 $t
    {standard input}:2942   .text.XMC_USBH_HandleIrq:00000000 XMC_USBH_HandleIrq
    {standard input}:3286   .text.XMC_USBH_HandleIrq:00000230 $d
    {standard input}:3291   .text.XMC_USBH_HandleIrq:0000023c $t
    {standard input}:3652   .text.XMC_USBH_HandleIrq:000004a0 $d
    {standard input}:3658   .text.XMC_USBH_HandleIrq:000004b0 $t
    {standard input}:3928   .text.XMC_USBH_HandleIrq:00000658 $d
    {standard input}:3935   .text.XMC_USBH_GetInterruptStatus:00000000 $t
    {standard input}:3940   .text.XMC_USBH_GetInterruptStatus:00000000 XMC_USBH_GetInterruptStatus
    {standard input}:3972   .text.XMC_USBH_GetInterruptStatus:00000014 $d
    {standard input}:3977   .text.XMC_USBH_Select_VBUS:00000000 $t
    {standard input}:3982   .text.XMC_USBH_Select_VBUS:00000000 XMC_USBH_Select_VBUS
    {standard input}:4031   .text.XMC_USBH_Select_VBUS:00000030 $d
    {standard input}:4037   .text.XMC_USBH_TurnOffResumeBit:00000000 $t
    {standard input}:4042   .text.XMC_USBH_TurnOffResumeBit:00000000 XMC_USBH_TurnOffResumeBit
    {standard input}:4093   .text.XMC_USBH_TurnOffResumeBit:00000034 $d
    {standard input}:4102   .rodata.Driver_USBH0:00000000 Driver_USBH0
    {standard input}:4099   .rodata.Driver_USBH0:00000000 $d
    {standard input}:4122   .text.XMC_USBH_osDelay:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_GPIO_SetMode
XMC_SCU_POWER_DisableUsb
XMC_SCU_RESET_AssertPeripheralReset
memset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
